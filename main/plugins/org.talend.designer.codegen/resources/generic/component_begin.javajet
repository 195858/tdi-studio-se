<%@ jet
imports="
        java.util.List

        org.talend.components.api.component.ComponentDefinition
        org.talend.components.api.properties.ComponentProperties
        org.talend.components.api.runtime.ComponentRuntimeContainer
        org.talend.components.api.runtime.ComponentRuntime
        org.talend.components.api.schema.SchemaElement
		org.talend.component.core.model.Component
        org.talend.core.model.metadata.IMetadataColumn
        org.talend.core.model.metadata.IMetadataTable
        org.talend.core.model.metadata.types.JavaType
        org.talend.core.model.metadata.types.JavaTypesManager
        org.talend.core.model.process.ElementParameterParser
        org.talend.core.model.process.IConnection
        org.talend.core.model.process.IConnectionCategory
        org.talend.core.model.process.INode
        org.talend.core.model.utils.TalendTextUtils
        org.talend.designer.codegen.config.CodeGeneratorArgument
		"
%>
<%
CodeGeneratorArgument codeGenArgument = (CodeGeneratorArgument) argument;
INode node = (INode)codeGenArgument.getArgument();
Component component = (Component)node.getComponent();
ComponentProperties componentProps = node.getComponentProperties();
ComponentDefinition def = component.getComponentDefinition();
%>

org.talend.components.api.properties.ComponentProperties props_<%=cid %> = new org.talend.components.api.properties.ComponentProperties();
props.init();

<%
List<SchemaElement> properties = componentProps.getProperties();
for (SchemaElement property : properties) {
	if (componentProps.getValue(property) != null) {
%>

	props.setValue("<%=property.getName()%>", <%=componentProps.getStringValue(property)%>);

<%
	} // if
} // for
%>



org.talend.components.api.runtime.ComponentRuntimeContainer container_<%=cid %> = 
    new org.talend.components.api.runtime.ComponentRuntimeContainer() {

    public Map<String, Object> getGlobalMap() {
		return globalMap;
    }

    public String formatDate(Date date, String pattern) {
		throw new RuntimeException("implement me");
    }
	
    public SchemaElement[] getDynamicElements(Object dynamic) {
		throw new RuntimeException("implement me");
    }

    public void setDynamicElements(SchemaElement[] elements) {
		throw new RuntimeException("implement me");
    }

    public Object getDynamicValue(Object dynamic, String fieldName) {
		throw new RuntimeException("implement me");
    }
}

// FIXME this is not going to work, how to get the component definition at runtime,
// need to use the component service to look up the component (or something).
org.talend.components.api.runtime.ComponentRuntime runtime_<%=cid %> = def.getComponentRuntime();

<%
if (component.canStart()) {
// Input
%>


<%
} else { 
// Output
%>
	runtime_<%=cid %>.outputBegin(props_<%=cid %>, container_<%=cid %>);
<%
}
%>



