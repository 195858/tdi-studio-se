<%@ jet
imports="
        org.talend.designer.codegen.config.CodeGeneratorArgument
        org.talend.core.model.process.ElementParameterParser
        org.talend.core.model.metadata.IMetadataTable
        org.talend.core.model.metadata.IMetadataColumn
        org.talend.core.model.process.IProcess
        org.talend.core.model.process.INode
        java.io.File
        java.io.BufferedWriter
        java.io.FileOutputStream
        java.io.OutputStreamWriter
        java.io.IOException
        java.util.List
        java.util.Map
        java.util.HashMap
"
%>

<%
    CodeGeneratorArgument codeGenArgument = (CodeGeneratorArgument) argument;
    INode node = (INode)codeGenArgument.getArgument();
    String cid = node.getUniqueName();

    String nLines2Ingore = ElementParameterParser.getValue(node,"__NUMBER_OF_LINES_TO_IGNORE__");
    String csvDataPath = ElementParameterParser.getValue(node,"__LOAD_DATA_PATH__");

    boolean specifyJsonMetadata = "true".equals(ElementParameterParser.getValue(node,"__SPECIFY_JSON_METADATA__"));
    String jsonMetadataPath = ElementParameterParser.getValue(node,"__JSON_METADATA_PATH__");
    boolean uploadJsonMetadata = "true".equals(ElementParameterParser.getValue(node,"__UPLODE_JSON_METADATA__"));
    boolean autoGenerateMetadataDesc = "true".equals(ElementParameterParser.getValue(node,"__AUTO_GENERATE_JSON_METADATA_DESCRIPTION__"));
            autoGenerateMetadataDesc = autoGenerateMetadataDesc && !specifyJsonMetadata;

    String uniqueApiName = ElementParameterParser.getValue(node,"__UNIQUE_API_NAME__");
    String fullyQualifiedName = ElementParameterParser.getValue(node,"__FULLY_QUALIFIED_NAME__");
    String label = ElementParameterParser.getValue(node,"__DATA_LABEL__");

    String charsetName = ElementParameterParser.getValue(node,"__CHARSET__");
    String fieldsDelimitedBy = ElementParameterParser.getValue(node,"__FIELDS_DELIMITED_BY__");
    String fieldsEnclosedBy = ElementParameterParser.getValue(node,"__FIELDS_ENCLOSED_BY__");
    String linesTerminatedBy = ElementParameterParser.getValue(node,"__LINES_TERMINATED_BY__");
    String numericFormat = ElementParameterParser.getValue(node,"__NUMERIC_FORMAT__");

    String storagePath = ElementParameterParser.getValue(node,"__CUSTOM_FOLDER__");
    boolean generateJsonInFile = "true".equals(ElementParameterParser.getValue(node,"__GENERATE_JSON_IN_FILE__"));

    boolean willGenerateJsonMetadata = !specifyJsonMetadata && uploadJsonMetadata;//In File or Memory

%>

<%
    if(willGenerateJsonMetadata && generateJsonInFile){
%>
        String generateJsonMetadataPath_<%= cid %> = null;
        String tempDirectoryPath_<%= cid %> = <%= storagePath %>.replace("\\","/");

        String timestamp_<%= cid %> = null;
        String jsonMetadataFileName_<%= cid %> = null;
        timestamp_<%= cid %> = new java.text.SimpleDateFormat("yyyyMMdd_HH_mm_ss").format(new java.util.Date());
        jsonMetadataFileName_<%= cid %> = "salesforce_wave_json_metadata_<%= cid %>_"+timestamp_<%= cid %>+".json";
        generateJsonMetadataPath_<%= cid %> = tempDirectoryPath_<%= cid %> + java.io.File.separator + jsonMetadataFileName_<%= cid %>;
        generateJsonMetadataPath_<%= cid %> = generateJsonMetadataPath_<%= cid %>.replace("\\","/");

        java.io.File tempDirectory_<%= cid %> = new java.io.File(tempDirectoryPath_<%= cid %>);
        if(!tempDirectory_<%= cid %>.exists()){
             boolean createDirOK_<%= cid %> = tempDirectory_<%= cid %>.mkdir();
             if(!createDirOK_<%= cid %>){
                  throw new RuntimeException("Can not create temporary directory: tempDirectoryPath_<%= cid %>, please set the right file permission and try again!");
             }
        }
<%
    }
%>

<%
    if(willGenerateJsonMetadata){
        List<IMetadataTable> metadataList = node.getMetadataList();
        if ((metadataList != null) && (metadataList.size() > 0)) {
            IMetadataTable metadata = metadataList.get(0);
            if(metadata != null){
                List<IMetadataColumn> columnList = metadata.getListColumns();
                    if(columnList.size() <= 0){
                        %>
//////////////////////////////////////////// Compile Error ///////////////////////////////////////////////////
                         Can not generate json metadata because the schema is empty.
//////////////////////////////////////////// Compile Error ///////////////////////////////////////////////////
                        <%
                    }
%>
                      List<com.talend.salesforce.wave.MetadataColumnRuntime> metadataColumnRuntimeList_<%= cid %>
                                                                             = new java.util.ArrayList<com.talend.salesforce.wave.MetadataColumnRuntime>();
                      <%
                            for(IMetadataColumn imetadataColumn: columnList){
                                %>
                                   metadataColumnRuntimeList_<%= cid %>.add(
                                        new com.talend.salesforce.wave.MetadataColumnRuntime.Builder()
                                                                      .label("<%= imetadataColumn.getLabel()%>")
                                                                      .talendType("<%= imetadataColumn.getTalendType()%>")
                                                                      <%
                                                                          if(imetadataColumn.getPattern() != null && !"".equals(imetadataColumn.getPattern())){
                                                                      %>
                                                                      .pattern(<%= imetadataColumn.getPattern() %>)
                                                                      <%
                                                                          }
                                                                          if(imetadataColumn.getLength() != null){
                                                                      %>
                                                                      .length(<%= imetadataColumn.getLength()%>)
                                                                      <%
                                                                          }
                                                                          if(imetadataColumn.getPrecision() != null){
                                                                      %>
                                                                      .precision(<%= imetadataColumn.getPrecision()%>)
                                                                      <%
                                                                          }
                                                                           if(imetadataColumn.getDefault() != null && !"".equals(imetadataColumn.getDefault())){
                                                                      %>
                                                                      .defaultValue("<%= imetadataColumn.getDefault() %>")
                                                                      <%
                                                                           }
                                                                            if(imetadataColumn.getComment() != null && !"".equals(imetadataColumn.getComment())){
                                                                      %>
                                                                      .comment("<%= imetadataColumn.getComment()%>")
                                                                      <%
                                                                            }
                                                                      %>
                                                                      .isPrimaryKey(<%= imetadataColumn.isKey() %>)
                                                                      .build()
                                        );
                                <%
                            }
            }
        }

        %>

           java.util.Map<String,Object> customConfig_<%= cid %> = new java.util.HashMap<String,Object>();
                    <% 
                        if(autoGenerateMetadataDesc){
                            %>
                               customConfig_<%= cid %>.put("numberOfLinesToIgnore",0);
                               customConfig_<%= cid %>.put("UniqueApiName","\"SalesData\"");
                               customConfig_<%= cid %>.put("fullyQualifiedName","\"Sales Data\"");
                               customConfig_<%= cid %>.put("label","\"CRM.SalesData\"");
                            <%
                        }else{
                            %>
                               customConfig_<%= cid %>.put("numberOfLinesToIgnore",<%= nLines2Ingore %>);
                               customConfig_<%= cid %>.put("UniqueApiName",<%= uniqueApiName %>);
                               customConfig_<%= cid %>.put("fullyQualifiedName",<%= fullyQualifiedName %>);
                               customConfig_<%= cid %>.put("label",<%= label %>);
                            <%
                        }
                     %>

                              customConfig_<%= cid %>.put("charsetName",<%= charsetName %>);
                              customConfig_<%= cid %>.put("fieldsDelimitedBy",<%= fieldsDelimitedBy %>);
                              customConfig_<%= cid %>.put("fieldsEnclosedBy",<%= fieldsEnclosedBy %>);
                              customConfig_<%= cid %>.put("linesTerminatedBy",<%= linesTerminatedBy %>);
                              customConfig_<%= cid %>.put("numericFormat",<%= numericFormat %>);

                    <% 
                       if(generateJsonInFile){
                          %>
                             com.talend.salesforce.wave.SalesforceWaveHelper.generateJsonMetadata(new java.io.File(generateJsonMetadataPath_<%= cid %>),metadataColumnRuntimeList_<%= cid %>,customConfig_<%= cid %>);
                          <%
                       }
                     %>
<%
}
%>
