<%@ jet 
imports="
    	org.talend.core.model.process.INode 
    	org.talend.core.model.process.ElementParameterParser
    	org.talend.designer.codegen.config.CodeGeneratorArgument
    	org.talend.core.model.utils.NodeUtil
		"
%>
<%
	CodeGeneratorArgument codeGenArgument = (CodeGeneratorArgument) argument;
	INode node = (INode)codeGenArgument.getArgument();
	String cid = node.getUniqueName();
	String destination = ElementParameterParser.getValue(node, "__DESTINATION__");
	if(destination!=null && !"".equals(destination)){
		cid = destination;
	}

	boolean useExistingConn = ("true").equals(ElementParameterParser.getValue(node,"__USE_EXISTING_CONNECTION__"));
	String connection = ElementParameterParser.getValue(node,"__CONNECTION__");
	String conn = "TMDMService_" + connection;
	String mdmUrl = ElementParameterParser.getValue(node, "__MDMURL__");
	String username = ElementParameterParser.getValue(node, "__USERNAME__");

	String dataModule = ElementParameterParser.getValue(node, "__DATAMODEL__");
	String dataCluster = ElementParameterParser.getValue(node, "__DATACLUSTER__");
	boolean isStaging = "STAGING".equalsIgnoreCase(ElementParameterParser.getValue(node, "__CONTAINER_TYPE__"));
	
	boolean withReport = ("true").equals(ElementParameterParser.getValue(node,"__WITHREPORT__"));
	boolean isMassInsert =("true").equals(ElementParameterParser.getValue(node,"__EXTENDINSERT__"));
	
	boolean addTaskID = ("true").equals(ElementParameterParser.getValue(node,"__ADD_TASKID__"));
	boolean usePartialUpdate = ("true").equals(ElementParameterParser.getValue(node,"__USE_PARTIAL_UPDATE__"));
	
	boolean useClientTransactionId = false;
	INode connectionNode = null;
	String mdmConnection_username = null;
	String mdmConnection_password = null;
	String mdmConnection_url = null;
	
%>       
int nb_line_<%=cid %> = 0;
int nb_line_rejected_<%=cid%> = 0;

<%if(!usePartialUpdate){%>
	<%if(addTaskID){%>
		class Util_<%=cid%>{
			public org.talend.mdm.webservice.WSUpdateMetadataItem makeUpdateMeteItm(String taskID,org.talend.mdm.webservice.WSItemPK wspk){
				org.talend.mdm.webservice.WSUpdateMetadataItem wsUpdateMetadataItem = new org.talend.mdm.webservice.WSUpdateMetadataItem();
		        wsUpdateMetadataItem.setTaskId(taskID);
		        wsUpdateMetadataItem.setWsItemPK(wspk);
		        return wsUpdateMetadataItem;
			}
			public org.talend.mdm.webservice.WSUpdateMetadataItem[] makeUpdateMeteItms(java.util.List<String> taskIDs,org.talend.mdm.webservice.WSItemPK[] wspks){
				java.util.List<org.talend.mdm.webservice.WSUpdateMetadataItem> wsUpdateMetadataItems = new java.util.ArrayList<org.talend.mdm.webservice.WSUpdateMetadataItem>();
				int i = 0;
		        for(org.talend.mdm.webservice.WSItemPK wspk : wspks){
		        	wsUpdateMetadataItems.add(makeUpdateMeteItm(taskIDs.get(i),wspk));
		        	i++;
		        }
		        return wsUpdateMetadataItems.toArray(new org.talend.mdm.webservice.WSUpdateMetadataItem[wsUpdateMetadataItems.size()]);
			}
		}
		Util_<%=cid%> util_<%=cid%> = new Util_<%=cid%>();
	<%}%>
	<%if(isMassInsert){
		if(!isStaging && withReport){%>
			java.util.List <org.talend.mdm.webservice.WSPutItemWithReport> miList_<%=cid %> = new java.util.ArrayList<org.talend.mdm.webservice.WSPutItemWithReport>();
	<%	}else{%>
			java.util.List <org.talend.mdm.webservice.WSPutItem> miList_<%=cid %> = new java.util.ArrayList<org.talend.mdm.webservice.WSPutItem>();
	<%
		}
		if(addTaskID){
	%>
			java.util.List<String> taskIDs_<%=cid%> = new java.util.ArrayList<String>();
	<%	
		}
	}
}%>
  
<%if(!useExistingConn){%>
	org.talend.mdm.webservice.TMDMService_ServiceLocator tmdmService_<%=cid %> = new org.talend.mdm.webservice.TMDMService_ServiceLocator();
	tmdmService_<%=cid %>.setTMDMPortEndpointAddress(<%=mdmUrl %>);
	org.talend.mdm.webservice.TMDMService_PortType tmdmWS_<%=cid %> = tmdmService_<%=cid %>.getTMDMPort();    
	org.talend.mdm.webservice.TMDMServiceSoapBindingStub stub_<%=cid %> = (org.talend.mdm.webservice.TMDMServiceSoapBindingStub)tmdmWS_<%=cid %>;
	
	// Authentification
	stub_<%=cid %>.setUsername(<%=username %>);
	
    <%
    String passwordFieldName = "__PASSWORD__";
    %>
    
    <%@ include file="@{org.talend.designer.components.localprovider}/components/templates/password.javajet"%>

	stub_<%=cid %>.setPassword(decryptedPassword_<%=cid%>);
<%}else{
		connectionNode = NodeUtil.getNodeByUniqueName(node.getProcess(),connection,false);
	   if(null != connectionNode){ 
    		useClientTransactionId = "true".equals(ElementParameterParser.getValue(connectionNode, "__GEN_TRANSACTION_ID__"));
			if(useClientTransactionId){ 
	 %>
			   com.talend.mdm.transaction.client.MDMTransaction mdmTransaction_<%=cid%> = null;
				java.util.Map threadRunResultMap_<%=cid%> = threadLocal.get();
				if(threadRunResultMap_<%=cid%>.get("mdmTransaction")!=null){
					mdmTransaction_<%=cid%> = (com.talend.mdm.transaction.client.MDMTransaction)threadRunResultMap_<%=cid%>.get("mdmTransaction");
				}else{
					mdmTransaction_<%=cid%> = new com.talend.mdm.transaction.client.MDMTransaction();
<%
					mdmConnection_username = ElementParameterParser.getValue(connectionNode, "__USERNAME__");
					mdmConnection_password = ElementParameterParser.getValue(connectionNode, "__PASSWORD__");
					mdmConnection_url = ElementParameterParser.getValue(connectionNode, "__MDMURL__");
%>
					String finalURL = com.talend.mdm.transaction.client.MDMTransactionClient.getMDMTransactionURL(<%=mdmConnection_url%>,true);
					mdmTransaction_<%=cid%>.setUrl(finalURL);
					String clientTranId = jobName + "_"+ java.util.UUID.randomUUID().toString() + Thread.currentThread().getId();
					mdmTransaction_<%=cid%>.setId(clientTranId);
					mdmTransaction_<%=cid%>.setUsername(<%=mdmConnection_username %>);
					mdmTransaction_<%=cid%>.setPassword(<%=mdmConnection_password %>);
					threadRunResultMap_<%=cid%>.put("mdmTransaction",mdmTransaction_<%=cid%>);
					threadLocal.set(threadRunResultMap_<%=cid%>);
<%
					String passwordFieldName = "__PASSWORD__";
					if (ElementParameterParser.canEncrypt(connectionNode, passwordFieldName)) {%> 
						final String decryptedPassword_<%=cid%> = routines.system.PasswordEncryptUtil.decryptPassword(<%=ElementParameterParser.getEncryptedValue(connectionNode, passwordFieldName)%>);
<%					} else {%>
						final String decryptedPassword_<%=cid%> = <%= ElementParameterParser.getValue(connectionNode, passwordFieldName)%>; 
<%					}%>
				}
    	 <%}
  	  }%>
  	  
  	   org.talend.mdm.webservice.TMDMService_ServiceLocator tmdmService_<%=cid %> = new org.talend.mdm.webservice.TMDMService_ServiceLocator();
		org.talend.mdm.webservice.TMDMService_PortType tmdmWS_<%=cid %> = null;
  	   String globalMdmURL_<%=cid%> = (String) globalMap.get("mdmURL_<%=connection%>");
  		String globalMdmUsername_<%=cid%> = (String) globalMap.get("mdmUsername_<%=connection%>");
 	   String globalMdmPassword_<%=cid%> = (String) globalMap.get("mdmPassword_<%=connection%>");
 	   if(null != globalMdmURL_<%=cid%> && null != globalMdmUsername_<%=cid%> && null != globalMdmPassword_<%=cid%>){
  			tmdmService_<%=cid %>.setTMDMPortEndpointAddress(globalMdmURL_<%=cid%>);
			tmdmWS_<%=cid %> = tmdmService_<%=cid %>.getTMDMPort();    
			((org.talend.mdm.webservice.TMDMServiceSoapBindingStub)tmdmWS_<%=cid %>).setUsername(globalMdmUsername_<%=cid%>);
			((org.talend.mdm.webservice.TMDMServiceSoapBindingStub)tmdmWS_<%=cid %>).setPassword(globalMdmPassword_<%=cid%>);
  	   }
  <%
}%>

org.talend.mdm.webservice.WSDataClusterPK dataCluster_<%=cid %> = new org.talend.mdm.webservice.WSDataClusterPK(<%=dataCluster %> + "<%=isStaging?"#STAGING":""%>");
org.talend.mdm.webservice.WSDataModelPK dataModel_<%=cid %> = new org.talend.mdm.webservice.WSDataModelPK(<%=dataModule %>);

String input_<%=cid %>;

org.talend.mdm.webservice.WSItemPK[] wspks_<%=cid %>;
org.talend.mdm.webservice.WSItemPK wspk_<%=cid %>;
