<%@ jet 
imports="
    org.talend.core.model.process.INode 
    org.talend.core.model.process.ElementParameterParser
    org.talend.designer.codegen.config.CodeGeneratorArgument
	org.talend.core.model.metadata.IMetadataTable
	java.util.List
	java.util.Map
"
%>

<%
CodeGeneratorArgument codeGenArgument = (CodeGeneratorArgument) argument;
INode node = (INode)codeGenArgument.getArgument();

String origin = ElementParameterParser.getValue(node, "__ORIGIN__");
String cid = origin;
boolean isLog4jEnabled = ("true").equals(ElementParameterParser.getValue(node.getProcess(), "__LOG4J_ACTIVATE__"));
if(isLog4jEnabled){%>
	StringBuffer log4jSb_<%=cid%> = new StringBuffer();
<%
	List<IMetadataTable> mestadataTableListOut = node.getMetadataList();

	if (mestadataTableListOut!=null && mestadataTableListOut.size()>0) { // T_InMain_AggR_600
		IMetadataTable metadataTableOutput = mestadataTableListOut.get(0);
		if (metadataTableOutput!=null) { // T_InMain_AggR_601
			List<Map<String, String>> groupbys = (List<Map<String,String>>)ElementParameterParser.getObjectValue(node, "__GROUPBYS__");
			for(int g = 0; g < groupbys.size(); g++){ // T_InMain_AggR_605
				Map<String, String> groupby = groupbys.get(g);
				String inputColumn = groupby.get("INPUT_COLUMN");
				String outputGroupColumn = groupby.get("OUTPUT_COLUMN");
				if(g!=0) {
%>
					log4jSb_<%=cid%>.append(" and ");
<%
				}
%>
				log4jSb_<%=cid%>.append("'<%=inputColumn%>'");
<%
				
			}
		}
	}
}
%>


java.util.Collection<AggOperationStruct_<%=cid %>> values_<%=cid %> = hash_<%=cid %>.values();

globalMap.put("<%=cid %>_NB_LINE", values_<%=cid %>.size());

<%if(isLog4jEnabled){%>
	log.debug("<%=cid%> - Grouping by the columns " + log4jSb_<%=cid%> + ".");
	log.info("<%=cid%> - Retrieving the aggregation results.");
	log4jSb_<%=cid%>.delete(0,log4jSb_<%=cid%>.length());
<%}%>
for(AggOperationStruct_<%=cid %> aggregated_row_<%=cid %> : values_<%=cid %>) { // G_AggR_600


