<%@ jet
imports="
		org.talend.designer.codegen.config.CodeGeneratorArgument
		org.talend.core.model.process.INode
		org.talend.core.model.process.ElementParameterParser
		org.talend.core.model.metadata.IMetadataTable
		org.talend.core.model.metadata.types.JavaTypesManager
		org.talend.core.model.metadata.MappingTypeRetriever
		org.talend.core.model.metadata.MetadataTalendType
		org.talend.core.model.process.IConnection
		java.util.List
		java.util.ArrayList
		java.util.Map
		java.util.HashMap
"
skeleton="../templates/db_output_bulk.skeleton"
%>
<%@ include file="../templates/DB/Output/HelpClass.javajet"%>
<%
	class DBOutputBeginUtil extends DefaultDBOutputUtil{
		private String javaDbType;
		private String javaDbDriver;
		public void beforeComponentProcess(INode node){
			super.beforeComponentProcess(node);
			cid = node.getUniqueName();
			dbmsId = "JDBC";
			String clearTable = ElementParameterParser.getValue(node, "__CLEAR_TABLE__");
			if(("true").equals(clearTable)) {
				tableAction = "CLEAR";
			}
		}
		public String getDirverClassName(INode node){
			String driverJar = ElementParameterParser.getValue(node, "__DRIVER_JAR__");
			String dirverClass = ElementParameterParser.getValue(node, "__DRIVER_CLASS__");
			return dirverClass;
		}
		public void classForName(INode node){
		%>
			String driverClass_<%=cid%> = <%=this.getDirverClassName(node) %>;
			java.lang.Class.forName(driverClass_<%=cid%>);
		<%
		}
		public void setURL(INode node) {
			String jdbcUrl = ElementParameterParser.getValue(node, "__URL__");
		%>
			String url_<%=cid %> = <%=jdbcUrl %>;
		<%
		}
		public void defineOtherParameters(INode node){
		%>
			int tmp_batchUpdateCount_<%=cid%> = 0;
		<%
		}
	}
	dbOutputBeginUtil = new DBOutputBeginUtil();
%>
<%@ include file="../templates/DB/Output/AbstractDBOutputBegin.javajet"%>
