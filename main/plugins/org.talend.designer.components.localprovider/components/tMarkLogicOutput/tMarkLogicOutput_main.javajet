<%@ jet
imports="
        org.talend.core.model.process.INode
        org.talend.core.model.process.ElementParameterParser
        org.talend.designer.codegen.config.CodeGeneratorArgument
        org.talend.core.model.metadata.IMetadataTable
        org.talend.core.model.process.IConnection
        org.talend.core.model.process.IConnectionCategory
        org.talend.core.model.metadata.IMetadataColumn
        java.util.List
"
%>

<%
    CodeGeneratorArgument codeGenArgument = (CodeGeneratorArgument) argument;
    INode node = (INode)codeGenArgument.getArgument();
    String cid = node.getUniqueName();

    String actionType = ElementParameterParser.getValue(node,"__ACTION_TYPE__");

    String docIdPrefix = ElementParameterParser.getValue(node,"__DOC_ID_PREFIX__");
    boolean autoGenerateDocId = "true".equals(ElementParameterParser.getValue(node,"__AUTO_GENERATE_DOC_ID__"));
            autoGenerateDocId = "INSERT".equals(actionType) && autoGenerateDocId;

    List<IMetadataTable> metadataList = node.getMetadataList();
    if((metadataList != null) && (metadataList.size() > 0)){//Tag A
        IMetadataTable metadata = metadataList.get(0);
        if(metadata != null){//Tag B
            List<? extends IConnection> outgoingConns = node.getOutgoingSortedConnections();
            boolean hasOutgoingConn = false;
            for(IConnection conn : outgoingConns){
               if(conn.getLineStyle().hasConnectionCategory(IConnectionCategory.DATA)){
                  hasOutgoingConn = true;
                  break;
               }
            }
            IConnection outputConn = null;
            if(hasOutgoingConn){
                outputConn = outgoingConns.get(0);
            }
            List<? extends IConnection> conns = node.getIncomingConnections();
            for(IConnection conn : conns){//Tag C
                if(conn.getLineStyle().hasConnectionCategory(IConnectionCategory.DATA)){//Tag D
                    String connName = conn.getName();
                    List<IMetadataColumn> columns = metadata.getListColumns();
                    %>
                    String docId_<%= cid %> = <%= connName %>.docId;
                    String docContent_<%= cid %> = null;
                    <%
                    if("DELETE".equals(actionType)){
                    %>
                       docMgr_<%= cid %>.delete(docId_<%= cid %>);
                    <%
                    }else if("INSERT".equals(actionType)){
                    %>
                       docContent_<%= cid %> = <%= connName %>.docContent;
                       com.marklogic.client.io.StringHandle strHandle_<%= cid %> = new com.marklogic.client.io.StringHandle(docContent_<%= cid %>);
                    <%
                        if(autoGenerateDocId){
                        %>
                        com.marklogic.client.document.DocumentUriTemplate docUriTpl_<%= cid %> = docMgr_<%= cid %>.newDocumentUriTemplate(docIdSuffix_<%= cid %>);
                        <%
                        if(docIdPrefix != null && !"".equals(docIdPrefix) && !"\"\"".equals(docIdPrefix)){
                        %>
                           docUriTpl_<%= cid %>.setDirectory((<%= docIdPrefix %>).replace("\\", "/"));
                        <%
                        }
                         %>
                        com.marklogic.client.document.DocumentDescriptor docDesc_<%= cid %> = docMgr_<%= cid %>.create(docUriTpl_<%= cid %>, strHandle_<%= cid %>);
                        docId_<%= cid %> = docDesc_<%= cid %>.getUri();
                        docMgr_<%= cid %>.write(docId_<%= cid %>, strHandle_<%= cid %>);
                        <%
                        }else{
                        %>
                        docMgr_<%= cid %>.write(<%= connName %>.docId, strHandle_<%= cid %>);
                        <%
                        }
                    }else{
                    %>
                       Compile Err: UNSUPPORTED_ACTION_TYPE <%= actionType %>
                    <%
                    }
                    %>
                    <%
                    if(hasOutgoingConn){
                    %>
                       <%= outputConn.getName() %>.docId = docId_<%= cid %>;
                       <%= outputConn.getName() %>.docContent = docContent_<%= cid %>;
                    <%
                    }
                    %>
                    <%
                }//Tag D
            }//Tag C
        }//Tag B
    }//Tag A
%>
