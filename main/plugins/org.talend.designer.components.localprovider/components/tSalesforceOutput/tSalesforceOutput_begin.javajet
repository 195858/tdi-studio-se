<%@ jet
imports="
    	org.talend.core.model.process.INode
    	org.talend.core.model.process.ElementParameterParser
    	org.talend.designer.codegen.config.CodeGeneratorArgument
		"
%>
<%
	CodeGeneratorArgument codeGenArgument = (CodeGeneratorArgument) argument;
	INode node = (INode)codeGenArgument.getArgument();
	String cid = node.getUniqueName();

	String endpoint = ElementParameterParser.getValue(node, "__ENDPOINT__");

	String username = ElementParameterParser.getValue(node, "__USER__");
	String password = ElementParameterParser.getValue(node, "__PASS__");
	String action = ElementParameterParser.getValue(node, "__ACTION__");
	String commitLevel = ElementParameterParser.getValue(node, "__COMMIT_LEVEL__");
	boolean extendedInsert = ("true").equals(ElementParameterParser.getValue(node, "__EXTENDINSERT__"));
	String logFile = ElementParameterParser.getValue(node, "__LOGFILENAME__").trim();
	boolean ceaseForError = ("true").equals(ElementParameterParser.getValue(node, "__CEASE_FOR_ERROR__"));
	boolean needCompression = ("true").equals(ElementParameterParser.getValue(node,"__NEED_COMPRESSION__"));
	boolean useExistingConn = ("true").equals(ElementParameterParser.getValue(node,"__USE_EXISTING_CONNECTION__"));
	String connection = ElementParameterParser.getValue(node,"__CONNECTION__");
	String timeout = ElementParameterParser.getValue(node,"__TIMEOUT__");
	String clientID = ElementParameterParser.getValue(node,"__CLIENT_ID__");
	// if the extended insert is disabled set the commit level to 1
	if (!extendedInsert) commitLevel = "1";

	boolean bulkConnection = false; //for tSalesforceOAuth.javajet

	String apiVersion = ElementParameterParser.getValue(node,"__API_VERSION__");
	String loginType = ElementParameterParser.getValue(node,"__LOGIN_TYPE__");
	boolean useOAuth = "OAUTH".equals(loginType);
	%>
    int nb_line_<%=cid %> = 0;
    int nb_success_<%=cid%> = 0;
    int nb_reject_<%=cid%> = 0;
	System.setProperty("org.apache.commons.logging.Log", "org.apache.commons.logging.impl.NoOpLog");
	org.talend.salesforce.SforceConnection sforceConn_<%=cid%> = null;
    <%
    if(useExistingConn){
    %>
        if(globalMap.get("conn_<%=connection%>") == null){
			throw new RuntimeException("Get null connection from <%=connection%>");
		}
		sforceConn_<%=cid%> = (org.talend.salesforce.SforceConnection)globalMap.get("conn_<%=connection%>");
	<%
	}else{
		if(useOAuth){
			String oauthKey = ElementParameterParser.getValue(node,"__OAUTH_CLIENT_ID__");
    		String oauthSecret = ElementParameterParser.getValue(node,"__OAUTH_CLIENT_SECRET__");
        	String tokenFile = ElementParameterParser.getValue(node,"__OAUTH_TOKEN_FILE__");

    		String callbackHost = ElementParameterParser.getValue(node,"__OAUTH_CALLBACK_HOST__");
    		String callbackPort = ElementParameterParser.getValue(node,"__OAUTH_CALLBACK_PORT__");
			%>
			sforceConn_<%=cid%> =
    			new org.talend.salesforce.SforceOAuthConnection.Builder(<%=endpoint%>, <%=oauthKey%>, <%=oauthSecret%>, <%=apiVersion%>, <%=callbackHost%>, <%=callbackPort%>)
    				<%
    				if(!"".equals(tokenFile) && !"\"\"".equals(tokenFile)){
    				%>
        				.setTokenFilePath(<%=tokenFile%>)
    				<%
    				}
    				%>
    				.setTimeout(<%=timeout%>).needCompression(<%=needCompression%>)
                	<%
                	if(clientID != null && !"".equals(clientID) && !"\"\"".equals(clientID)){
                	%>
                		.setClientID(<%=clientID%>)
                	<%
                	}
                	%>
                	.build();
		<%
		}else{
		%>
    		sforceConn_<%=cid%> =
    			new org.talend.salesforce.SforceBasicConnection.Builder(<%=endpoint%>, <%=username%>, <%=password%>)
    				.setTimeout(<%=timeout%>).needCompression(<%=needCompression%>)
                	<%
                	if(clientID!=null && !"".equals(clientID) && !"\"\"".equals(clientID)){
                	%>
                		.setClientID(<%=clientID%>)
                	<%
                	}
                	%>
                	.build();
    	<%
    	}
    	%>
    <%
    }
    %>
    org.talend.salesforce.SforceManagement sforceManagement_<%=cid%> = new org.talend.salesforce.SforceManagementImpl(sforceConn_<%=cid%>, <%=commitLevel%>, <%=ceaseForError%>, <%=logFile%>);
    <%if("upsert".equals(action)){%>
		org.apache.axiom.om.OMFactory fac_<%=cid%> = org.apache.axiom.om.OMAbstractFactory.getOMFactory();
    <%}%>
