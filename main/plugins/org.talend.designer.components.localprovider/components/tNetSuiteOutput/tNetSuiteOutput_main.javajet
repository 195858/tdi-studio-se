<%@ jet 
	imports="
    	org.talend.core.model.process.INode 
    	org.talend.core.model.process.ElementParameterParser 
		org.talend.core.model.metadata.IMetadataTable 
		org.talend.core.model.metadata.IMetadataColumn
		org.talend.designer.codegen.config.CodeGeneratorArgument
		org.talend.core.model.process.IConnection
		org.talend.core.model.process.IConnectionCategory
		org.talend.core.model.metadata.types.JavaTypesManager
		org.talend.core.model.metadata.types.JavaType
		java.util.List
		java.util.ArrayList
	"
%>

<%
    CodeGeneratorArgument codeGenArgument = (CodeGeneratorArgument) argument;
    INode node = (INode)codeGenArgument.getArgument();
    
    boolean dieonerror = ElementParameterParser.getValue(node,"__CEASE_FOR_ERROR__").equals("true");
    String action = ElementParameterParser.getValue(node, "__ACTION__");
    String modulename = ElementParameterParser.getValue(node, "__MODULENAME__");
%>


<%
    String entitytype=modulename;
    boolean isCustom = false;
    if (modulename.endsWith("CustomRecord")){
    	isCustom=true;
    	entitytype = ElementParameterParser.getValue(node, "__CUSTOMRECORDID__").trim();
    }
    
    boolean ceaseForError = ElementParameterParser.getValue(node, "__CEASE_FOR_ERROR__").equals("true");
    
    List<IMetadataTable> metadatas = node.getMetadataList();
    if ((metadatas!=null)&&(metadatas.size()>0)) {//1
        IMetadataTable metadata = metadatas.get(0);
        if (metadata!=null) {//2
            String cid = node.getUniqueName();
        	List< ? extends IConnection> conns = node.getIncomingConnections();
        	IConnection conn = conns.get(0);
    		if (conn.getLineStyle().hasConnectionCategory(IConnectionCategory.DATA)) {//4
%>
                
                //TODO expand from only InternalId to selecting ExternalId and more??
                //TODO handle upsert when record not found
                //TODO detect Custom Recs and fields with a startsWith("cust")
                
                <%=modulename%> record_<%=cid%> = new <%=modulename%>();
                boolean useExternal_<%=cid%> = false;
                com.netsuite.webservices.platform.messages_2014_2.WriteResponse response_<%=cid%> = null;
                
                // String id_<%=cid%> = <%=conn.getName() %>.InternalId;
                /*String id_<%=cid%> = <%=conn.getName() %>.InternalId;
                if (id_<%=cid%>==null) {
                  id_<%=cid%> = <%=conn.getName() %>.ExternalId;
                  useExternal_<%=cid%>=true;
                }
                
                if (useExternal_<%=cid%>) {
                	record_<%=cid%>.setExternalId(id_<%=cid%>);
                } else {
                	record_<%=cid%>.setInternalId(id_<%=cid%>);
                }*/
                
<%
                if ("insert".equals(action) || "update".equals(action) || "upsert".equals(action)) { //************
                	List<IMetadataColumn> columns = metadata.getListColumns();
                    int sizeColumns = columns.size();
                    for (int i = 0; i < sizeColumns; i++) { //5  			
                    	IMetadataColumn column = columns.get(i);
                    	
                    	//make sure to filter the schema "Id", when updating (but not when upserting)
                  		if("Id".equals(column.getLabel()) && !("upsert".equals(action))) {
                  			continue;
                  		}
                  		
                		JavaType javaType = JavaTypesManager.getJavaTypeFromId(column.getTalendType());
%>

        	    		if (<%=conn.getName() %>.<%=column.getLabel() %> == null) {
        					com.netsuite.webservices.platform.core_2014_2.NullField fl = record_<%=cid%>.getNullFieldList();
        					
        					if (fl==null) {
        						record_<%=cid%>.setNullFieldList(new com.netsuite.webservices.platform.core_2014_2.NullField());
        					}
        					
        					String label = "<%=column.getLabel()%>";
        					String field = label.substring(0, 1).toLowerCase() + label.substring(1);
        					nsMgr_<%=cid%>.setNullFieldValue(record_<%=cid%>.getNullFieldList(), field);
        	    		} else {

<%
        				String pattern = column.getPattern() == null || column.getPattern().trim().length() == 0 ? null : column.getPattern();
    					//TODO For now we will assume initial lower case is a custom field and upper case has getter
    					char first=column.getLabel().charAt(0);
    					if(first<'a' || first>'z'){
        					if (javaType == JavaTypesManager.DATE && pattern != null && pattern.trim().length() != 0) {//Date
%>

        						java.util.Calendar cal_<%=cid%> = java.util.Calendar.getInstance();
        						cal_<%=cid%>.setTime(<%=conn.getName() %>.<%=column.getLabel()%>);
        						record_<%=cid%>.set<%=column.getLabel()%>(cal_<%=cid%>);

<%
							} else if (javaType == JavaTypesManager.BYTE_ARRAY) {//byte[]
%>

								record_<%=cid%>.set<%=column.getLabel()%>(java.nio.charset.Charset.defaultCharset().decode(java.nio.ByteBuffer.wrap(<%=conn.getName() %>.<%=column.getLabel() %>)).toString());

<%
							} else if (javaType == JavaTypesManager.OBJECT) {//byte[]
%>

								nsMgr_<%=cid%>.invokeSetter(record_<%=cid%>,"<%=column.getLabel()%>",<%=conn.getName() %>.<%=column.getLabel()%>);

<%
							} else {//others
%>

								record_<%=cid%>.set<%=column.getLabel()%>(<%=conn.getName() %>.<%=column.getLabel() %>);

<%
							}
						} else {
%>
    						com.netsuite.webservices.platform.core_2014_2.CustomFieldList fl = record_<%=cid%>.getCustomFieldList();
    						if (fl==null) {
    							record_<%=cid%>.setCustomFieldList(new com.netsuite.webservices.platform.core_2014_2.CustomFieldList());
    						}
    						nsMgr_<%=cid%>.setCustomFieldValue(record_<%=cid%>.getCustomFieldList(), "<%=javaType.getNullableClass().getSimpleName()%>", "<%=column.getLabel()%>", <%=conn.getName() %>.<%=column.getLabel() %>);

<%
						}
%>
			
        	    		}//if !=null
				
<%
                    }//5
				}//upsert, insert, update	
%> 

        	try {
 				
<%
 				boolean containsField = false;
 				for(java.lang.reflect.Field field : conn.getClass().getDeclaredFields()){
					if(field.getName().equals("InternalId")){
						containsField = true;
						break;
					}
				}
				
                if ("insert".equals(action)) {
%>

            		response_<%=cid%> = nsMgr_<%=cid%>.insert("<%=entitytype %>", record_<%=cid%>);
            		
            		if (!response_<%=cid%>.getStatus().isIsSuccess()) {
						throw new java.rmi.RemoteException(nsMgr_<%=cid%>.getStatusDetails(response_<%=cid%>.getStatus()));
					}
					
            		java.lang.reflect.Field field = response_<%=cid%>.getBaseRef().getClass().getDeclaredField("internalId");
					field.setAccessible(true);
					String internalId = (String) field.get(response_<%=cid%>.getBaseRef());

<%
 					if(containsField) {
%>
     					<%=conn%>.InternalId = internalId;
<%
 					}
%>
                    globalMap.put("<%=cid%>_CURRENT_INTERNALID", Integer.parseInt(internalId));

<%
				// InternalId no need
				} else if ("update".equals(action)) {
%>

					response_<%=cid%> = nsMgr_<%=cid%>.update("<%=entitytype %>", record_<%=cid%>);
					
					if (!response_<%=cid%>.getStatus().isIsSuccess()) {
						throw new java.rmi.RemoteException(nsMgr_<%=cid%>.getStatusDetails(response_<%=cid%>.getStatus()));
					}
					
					globalMap.put("<%=cid%>_CURRENT_INTERNALID", Integer.parseInt(<%=conn.getName() %>.InternalId));	

<%
				} else if ("upsert".equals(action)) {
%> 

                    String internalId = nsMgr_<%=cid%>.upsert("<%=entitytype %>", record_<%=cid%>);

<%
 					if(containsField) {
%>
     					<%=conn%>.InternalId = internalId;
<%
 					}
%>

                    globalMap.put("<%=cid%>_CURRENT_INTERNALID", internalId);
		
<%
				// InternalId no need
				} else if ("delete".equals(action)) {
%>

					nsMgr_<%=cid%>.delete("<%=entitytype %>", useExternal_<%=cid%>, <%=conn.getName() %>.InternalId);
					globalMap.put("<%=cid%>_CURRENT_INTERNALID", Integer.parseInt(<%=conn.getName() %>.InternalId));	

<%
				}
%>  

        	} catch (Exception e) {

<%
				if(dieonerror){
%>

					throw (e);

<%
				} else {
%>

					System.err.print(e.getMessage());

<%
				}
%>
			}
			
			nb_line_<%=cid %>++; 

<%
    		}//4
    	}//2
	}//1
%>