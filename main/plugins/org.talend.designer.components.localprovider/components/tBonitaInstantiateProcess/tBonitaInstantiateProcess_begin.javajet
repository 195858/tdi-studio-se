<%@ jet 
imports="
			org.talend.core.model.process.INode 
			org.talend.core.model.process.ElementParameterParser 
			org.talend.designer.codegen.config.CodeGeneratorArgument
			java.util.List
			org.talend.core.model.process.IConnection
			org.talend.core.model.process.IConnectionCategory
			org.talend.core.model.metadata.IMetadataColumn
			org.talend.core.model.metadata.IMetadataTable
" 
%>

<%
	CodeGeneratorArgument codeGenArgument = (CodeGeneratorArgument) argument;
	INode node = (INode)codeGenArgument.getArgument();
	String cid = node.getUniqueName();
	
	String processID = ElementParameterParser.getValue(node, "__PROCESS_ID__");
	String userName = ElementParameterParser.getValue(node, "__USERNAME__");
	String password = ElementParameterParser.getValue(node, "__PASSWORD__");

	String use_process_id = ElementParameterParser.getValue(node, "__USE_PROCESS_ID__");

	String process_name = ElementParameterParser.getValue(node, "__PROCESS_NAME__");
	String process_version = ElementParameterParser.getValue(node, "__PROCESS_VERSION__");
	
	boolean dieOnError = ("true").equals(ElementParameterParser.getValue(node, "__DIE_ON_ERROR__"));
	
	String bonitaEnvironmentFile = ElementParameterParser.getValue(node, "__BONITA_ENVIRONMENT_FILE__");
	String jassFile = ElementParameterParser.getValue(node, "__JASS_STANDARD_FILE__");
	String loggingFile = ElementParameterParser.getValue(node, "__LOGGING_FILE__");
	String loginModule = ElementParameterParser.getValue(node, "__LOGIN_MODULE__");
	String dbVersion = ElementParameterParser.getValue(node, "__DB_VERSION__");
	String bonitaHome = ElementParameterParser.getValue(node, "__BONITA_HOME__");
	
	if("BONITA_561".equals(dbVersion)){
%>
	System.setProperty("BONITA_HOME", <%=bonitaHome%>);
<%
	}else if("BONITA_531".equals(dbVersion)||"BONITA_523".equals(dbVersion)){
%>
	System.setProperty("org.ow2.bonita.environment", <%=bonitaEnvironmentFile%> );
<%
	}
%>
	System.setProperty("java.security.auth.login.config", <%=jassFile%> );
	System.setProperty("java.util.logging.config.file", new java.io.File(<%=loggingFile%>).toURI().toURL().toString());
	
	
	org.ow2.bonita.facade.RuntimeAPI runtimeAPI_<%=cid%> = org.ow2.bonita.util.AccessorUtil.getAPIAccessor().getRuntimeAPI();
	javax.security.auth.login.LoginContext loginContext_<%=cid%> = null;
	org.ow2.bonita.facade.uuid.ProcessDefinitionUUID processID_<%=cid%> =null;
	
	String processInstanceUUID_<%=cid%> = null;
	java.util.Map<String, Object> parameters_<%=cid%>=new java.util.HashMap<String, Object>();
	
	try {
			
		loginContext_<%=cid%> = new javax.security.auth.login.LoginContext(<%=loginModule%>, new org.ow2.bonita.util.SimpleCallbackHandler(<%=userName%>, <%=password%>));
		loginContext_<%=cid%>.login();
<%
		if("true".equals(use_process_id)) {
%>
			processID_<%=cid%> = new org.ow2.bonita.facade.uuid.ProcessDefinitionUUID(<%=processID%>);
<%
		} else {
%>
			processID_<%=cid%> = new org.ow2.bonita.facade.uuid.ProcessDefinitionUUID(<%=process_name%>, <%=process_version%>);
<%
		}
%>
	} catch (javax.security.auth.login.LoginException le_<%=cid%>) {//just login exception
<%
	if (dieOnError) {
%>
		throw le_<%=cid%>;		
<%
	} else {
%>
		System.err.println(le_<%=cid%>.getCause().getMessage());
<%	
	}
%>
}
