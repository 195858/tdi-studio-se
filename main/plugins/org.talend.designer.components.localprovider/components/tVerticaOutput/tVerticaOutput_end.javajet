<%@ jet 
imports="
	org.talend.designer.codegen.config.CodeGeneratorArgument
	org.talend.core.model.process.INode
	org.talend.core.model.process.ElementParameterParser
" 
%>

<%
    CodeGeneratorArgument codeGenArgument = (CodeGeneratorArgument) argument;
    INode node = (INode)codeGenArgument.getArgument();
    
    String cid = node.getUniqueName();
    
    String dataAction = ElementParameterParser.getValue(node,"__DATA_ACTION__");
    
    String commitEvery = ElementParameterParser.getValue(node, "__COMMIT_EVERY__");
    
    String dieOnError = ElementParameterParser.getValue(node, "__DIE_ON_ERROR__");
    
     boolean useExistingConnection = "true".equals(ElementParameterParser.getValue(node,"__USE_EXISTING_CONNECTION__"));
%>
<%
	//batch mode
	if (("INSERT").equals(dataAction) || ("UPDATE").equals(dataAction) || ("DELETE").equals(dataAction)) {
%>                
    try {
			pstmt_<%=cid %>.executeBatch();                	
	    	<%if (("INSERT").equals(dataAction)) {
	    	%>
	    		insertedCount_<%=cid%> +=pstmt_<%=cid %>.getUpdateCount(); 
	    	<%
	    	}else if (("UPDATE").equals(dataAction)) {
	    	%>
	    		updatedCount_<%=cid%> += pstmt_<%=cid %>.getUpdateCount();
	    	<%
	    	}else if (("DELETE").equals(dataAction)) {
	    	%>
	    	    deletedCount_<%=cid%> += pstmt_<%=cid %>.getUpdateCount();
	    	<%
	    	}%>            	    
    }catch (java.sql.BatchUpdateException e){
    	<%if(("true").equals(dieOnError)) {
    	%>
    		throw(e);
    	<%
    	}else {
    	%>
    	System.out.println(e.getMessage());
    	<%
    	}%>                	
	}                                  
<%
	}
%>
    <%if(("INSERT_OR_UPDATE").equals(dataAction)){%>
        pstmt_<%=cid %> = conn_<%=cid%>.prepareStatement("COMMIT;");              
        pstmtInsert_<%=cid %> = conn_<%=cid%>.prepareStatement("COMMIT;");   
        pstmtUpdate_<%=cid %> = conn_<%=cid%>.prepareStatement("COMMIT;");   
        pstmt_<%=cid%>.executeUpdate();
        pstmtInsert_<%=cid %>.executeUpdate();
        pstmtUpdate_<%=cid%>.executeUpdate();
    <%}else if(("UPDATE_OR_INSERT").equals(dataAction)){%>         
        pstmtInsert_<%=cid %> = conn_<%=cid%>.prepareStatement("COMMIT;");   
        pstmtUpdate_<%=cid %> = conn_<%=cid%>.prepareStatement("COMMIT;");    
        pstmtInsert_<%=cid %>.executeUpdate();
        pstmtUpdate_<%=cid%>.executeUpdate();      
    <%}else{%>   
    	<%   
    	 if(!useExistingConnection && !"COPY".equals(dataAction))	{
    	 %>
        pstmt_<%=cid %> = conn_<%=cid%>.prepareStatement("COMMIT;");    
        pstmt_<%=cid%>.executeUpdate();
    <%
    	}
    }

    
    if(("INSERT_OR_UPDATE").equals(dataAction)) {
        %>
        if(pstmtUpdate_<%=cid%> != null){

            pstmtUpdate_<%=cid %>.close();
            
        } 
        if(pstmtInsert_<%=cid %> != null){

            pstmtInsert_<%=cid %>.close();
            
        }
        if(pstmt_<%=cid %> != null) {

            pstmt_<%=cid %>.close();
            
        }        
        <%
    } else if(("UPDATE_OR_INSERT").equals(dataAction)) {
        %>
        if(pstmtUpdate_<%=cid%> != null){

            pstmtUpdate_<%=cid %>.close();
            
        } 
        if(pstmtInsert_<%=cid %> != null){

            pstmtInsert_<%=cid %>.close();
            
        }        
        <%
    } else {
       if (!"COPY".equals(dataAction)) {
        %>
	        if(pstmt_<%=cid %> != null) {
	
	            pstmt_<%=cid %>.close();
	            
	        }        
        <%
		}
    }   

	//////////////// Copy Action //////////////////////
	if ("COPY".equals(dataAction)) { // COPY
%>
	if (stmtBuilder_<%=cid%> != null && stmtBuilder_<%=cid%>.length() != 0 ) {
		try {
		    java.io.ByteArrayInputStream bais_<%=cid%> = new ByteArrayInputStream(stmtBuilder_<%=cid%>.toString().getBytes());
		    ((com.vertica.PGStatement)stmt_<%=cid%>).executeCopyIn(template_<%=cid%>, bais_<%=cid%>);
			if (stmt_<%=cid%> != null) {
				stmt_<%=cid%>.close();
				stmt_<%=cid%> = null;
			}
			if (bais_<%=cid%> != null ) {
				bais_<%=cid%>.close();
				bais_<%=cid%> = null;
			}
			stmtBuilder_<%=cid%> = null;
        }catch (java.sql.SQLException e){
        	<%if(("true").equals(dieOnError)) {
        	%>
				throw(e);
        	<%
        	}else {
        	%>
                System.out.println(e.getMessage());
        	<%
        	}%>
        }  
	}
			
<%
	}
	/////// commit end/////////////
	if(!useExistingConnection) {
	    if(!("").equals(commitEvery)&&!("0").equals(commitEvery)){
	        %>
	        conn_<%=cid%>.commit();
	        <%
	    }
	   %>
	     conn_<%=cid%>.close();
	<%
    }
   %>

    nb_line_deleted_<%=cid%>=nb_line_deleted_<%=cid%>+ deletedCount_<%=cid%>;
    nb_line_update_<%=cid%>=nb_line_update_<%=cid%> + updatedCount_<%=cid%>;
    nb_line_inserted_<%=cid%>=nb_line_inserted_<%=cid%> + insertedCount_<%=cid%>;
    nb_line_rejected_<%=cid%>=nb_line_rejected_<%=cid%> + rejectedCount_<%=cid%>;

    globalMap.put("<%=cid %>_NB_LINE",nb_line_<%=cid%>);
    globalMap.put("<%=cid %>_NB_LINE_UPDATED",nb_line_update_<%=cid%>);
    globalMap.put("<%=cid %>_NB_LINE_INSERTED",nb_line_inserted_<%=cid%>);
    globalMap.put("<%=cid %>_NB_LINE_DELETED",nb_line_deleted_<%=cid%>);
    globalMap.put("<%=cid %>_NB_LINE_REJECTED",nb_line_rejected_<%=cid%>);
