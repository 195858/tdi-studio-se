<%@ jet
package="org.talend.designer.codegen.translators"
imports="
    org.talend.core.model.process.INode 
    org.talend.core.model.metadata.IMetadataTable 
    org.talend.designer.codegen.config.CodeGeneratorArgument
    org.talend.core.model.process.ElementParameterParser
    java.util.List
"
class="FileOutputXMLMain"
%>

<%
CodeGeneratorArgument codeGenArgument = (CodeGeneratorArgument) argument;
INode node = (INode)codeGenArgument.getArgument();
boolean stats = codeGenArgument.isStatistics();				

List<IMetadataTable> metadatas = node.getMetadataList();
if ((metadatas!=null)&&(metadatas.size()>0)) {
    IMetadataTable metadata = metadatas.get(0);
    if (metadata!=null) {
        String cid = metadata.getTableName();
        String colnameAsTagname = ElementParameterParser.getValue(node, "__COLNAME_AS_TAGNAME__");
        String split = ElementParameterParser.getValue(node, "__SPLIT__");
        String splitEvery = ElementParameterParser.getValue(node, "__SPLIT_EVERY__");
%>

if (@<%=cid %>) {
<%
        if (colnameAsTagname.equals("true")) {
%>
    my $colnum = 0;
<%
        }
        else {
%>
    my $fieldname = $desc_<%=cid %>{field_tag};
<%
        }
%>
    print {$output_FH_<%=cid %>} (
        '<'.$desc_<%=cid %>{row_tag}.'>', "\n",
        (
            map {
                s/</&lt;/g;
                s/>/&gt;/g;
                s/&/&amp;/g;
<%
        if (colnameAsTagname.equals("true")) {
%>
                my $fieldname = $colnames_<%=cid %>[$colnum++];
                '<'.$fieldname.'>'.$_.'</'.$fieldname.'>'."\n";
<%
        }
        else {
%>
                '<'.$fieldname.'>'.$_.'</'.$fieldname.'>'."\n";
<%
        }
%>
            } @<%=cid %><% if (metadata.getListColumns().size()>0) { %>[0 .. $nb_fields_<%=cid %> - 1]<% } %>
        ),
        '</'.$desc_<%=cid %>{row_tag}.'>', "\n",
    ) or die "can't write to file " . $output_desc_<%=cid %>{filename} . "\n";

<%
        if (stats) {
%>
    UpdateStat('<%=cid %>', 1);
<%
        }
%>
}
else {
    print {$output_FH_<%=cid %>} '<'.$desc_<%=cid %>{row_tag}.'/>', "\n"
        or die "can't write to file " . $output_desc_<%=cid %>{filename} . "\n";
}

$nb_line_<%=cid %>++;

<%
        if (split.equals("true")) {
%>
if ($nb_line_<%=cid %> % <%=splitEvery %> == 0) {
    print {$output_FH_<%=cid %>} (
        (map {'</'.$_.'>'} reverse @{ $desc_<%=cid %>{root_tags} }),
        "\n",
    );

    close($output_FH_<%=cid %>);

    $output_FH_<%=cid %> = new FileHandle;

    my $filenum = $nb_line_<%=cid %>/<%=splitEvery %> + 1;

    if (defined $ext_<%=cid %>) {
        $filename_<%=cid %> = sprintf(
            '%s-%03u.%s',
            $filepath_wo_ext_<%=cid %>,
            $filenum,
            $ext_<%=cid %>,
        );
    }
    else {
        $filename_<%=cid %> = sprintf(
            '%s-%03u.%s',
            $desc_<%=cid %>{filename},
            $filenum,
        );
    }

    open($output_FH_<%=cid %>, '>', $filename_<%=cid %>)
        or die 'cannot open file "' . $filename_<%=cid %> . '"';

    print {$output_FH_<%=cid %>} (
        '<?xml version="1.0" encoding="',
        $desc_<%=cid %>{encoding},
        '"?>',
        "\n"
    );

    print {$output_FH_<%=cid %>} (
        (map {'<'.$_.'>'} @{ $desc_<%=cid %>{root_tags} }),
        "\n",
    );
}
<%
        }
    }
}
%>
