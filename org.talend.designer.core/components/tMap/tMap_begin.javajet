<%@ jet 
package="org.talend.designer.codegen.translators" 
	imports="
	java.util.ArrayList
	java.util.List
	org.talend.designer.codegen.config.CodeGeneratorArgument
	org.talend.core.model.metadata.MetadataTalendType
	org.talend.designer.mapper.MapperMain
	org.talend.designer.mapper.MapperComponent
	org.talend.designer.mapper.external.data.ExternalMapperData 
	org.talend.designer.mapper.external.data.ExternalMapperTable
	org.talend.designer.mapper.external.data.ExternalMapperTableEntry
	org.talend.designer.mapper.language.ILanguage
	org.talend.designer.mapper.language.generation.GenerationManagerFactory
	org.talend.designer.mapper.language.generation.JavaGenerationManager
	org.talend.designer.mapper.language.LanguageProvider
	org.talend.designer.mapper.model.metadata.MapperDataTestGenerator
	" 
	class="MapperBegin" 
%>

<%

	CodeGeneratorArgument codeGenArgument = (CodeGeneratorArgument) argument;
	MapperComponent node = (MapperComponent) codeGenArgument.getArgument();
	boolean stats = codeGenArgument.isStatistics();
	
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

        ExternalMapperData data;
        if (node != null) {
            data = (ExternalMapperData) node.getExternalData();
        } else {
            MapperMain.setStandAloneMode(true);
            MapperDataTestGenerator testGenerator = new MapperDataTestGenerator(LanguageProvider.getCurrentLanguage(), false);
            data = (ExternalMapperData) testGenerator.getExternalData();
        }

        List<ExternalMapperTable> varsTables = data.getVarsTables();

        ILanguage currentLanguage = LanguageProvider.getJavaLanguage();

        JavaGenerationManager gm = (JavaGenerationManager) GenerationManagerFactory.getInstance().getGenerationManager(currentLanguage);

        gm.setVarsTables(varsTables);

        List<ExternalMapperTable> varTablesList = new ArrayList<ExternalMapperTable>(varsTables);

        // constants
        for (ExternalMapperTable table : varTablesList) {
            List<ExternalMapperTableEntry> tableEntries = table.getMetadataTableEntries();
            if (tableEntries == null) {
                continue;
            }
            String tableName = table.getName();
            
            String instanceVarName = tableName + "__" + node.getUniqueName();
            String className = instanceVarName + "__Struct";
            
%>class  <%=className%>  {

<%
            int lstSize = tableEntries.size();
            for (int i = 0; i < lstSize; i++) {
                ExternalMapperTableEntry varTableEntry = (ExternalMapperTableEntry) tableEntries.get(i);
                String javaType = varTableEntry.getType();
                if (javaType == null) {
                    javaType = "String";
                }
%>	public <%= javaType %> <%= varTableEntry.getName() %>;

<%
            }
%>}
<%= className %> <%= instanceVarName %> = new <%= className %>();
<%
        }

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

%>
