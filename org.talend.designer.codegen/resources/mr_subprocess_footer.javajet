<%@ jet 
    imports="
        org.talend.designer.codegen.config.NodesSubTree
        org.talend.core.model.process.INode
        java.util.List
        java.util.HashSet
        java.util.Set
        java.util.Map
        java.util.Vector
        org.talend.core.model.process.IProcess
        org.talend.core.model.process.EConnectionType
        org.talend.core.model.process.IConnection
        org.talend.core.model.metadata.IMetadataTable 
        org.talend.core.model.metadata.IMetadataColumn
        org.talend.designer.codegen.config.CodeGeneratorArgument
        org.talend.core.model.metadata.types.JavaTypesManager
        org.talend.core.model.metadata.types.JavaType
        org.talend.core.model.process.ElementParameterParser
        org.talend.core.model.process.IHashableInputConnections
        org.talend.core.model.process.IHashConfiguration
        org.talend.core.model.process.IHashableColumn
        org.talend.core.model.utils.NodeUtil
        org.talend.core.model.process.IConnectionCategory
        org.talend.core.model.process.AbstractNode
    " 
%>
	<%
    CodeGeneratorArgument codeGenArgument = (CodeGeneratorArgument) argument;
    Vector v = (Vector) codeGenArgument.getArgument();
    INode mrconn = (INode)v.get(0);
    NodesSubTree subTree = (NodesSubTree)v.get(1);

		INode firstNode = subTree.getNode(subTree.getName());
		List< ? extends IConnection> conns = firstNode.getOutgoingSortedConnections();
		String firstConnName = "";
		if(conns != null && conns.size()>0){
			IConnection conn = conns.get(0);
			if (conn.getLineStyle().hasConnectionCategory(IConnectionCategory.DATA)) {
				firstConnName = conn.getName();
			}
		}
		if(!"".equals(firstConnName)){
			if(subTree.getNodes().size() > 1){
				String username = ElementParameterParser.getValue(mrconn,"__USERNAME__");
				String mrDistribution = ElementParameterParser.getValue(mrconn,"__DISTRIBUTION__");
				String mrVersion = ElementParameterParser.getValue(mrconn,"__MR_VERSION__");
				boolean mrUseKrb = false;
				List<String> mrKrbSupportList = java.util.Arrays.asList("APACHE_1_0_0","HDP_1_0","HDP_1_2","HDP_1_3","Cloudera_CDH4","APACHE_1_0_3_EMR");
				if("CUSTOM".equals(mrDistribution) || mrKrbSupportList.contains(mrVersion)){
					mrUseKrb = "true".equals(ElementParameterParser.getValue(mrconn,"__USE_KRB__"));
				}
				if(!(username == null || "".equals(username) || "\"\"".equals(username) || mrUseKrb)){
				%>
						return null;
					}	
				});
				<%
				}
			}
		}
		
	    List<String> beforeSubProcesses = subTree.getBeforeSubProcesses();
	    
	    List<? extends IConnection> outConns = firstNode.getOutgoingConnections();
	    
	    for(IConnection conn : outConns){
	    	
	    	String uniqueNameTargetNode = conn.getTarget().getUniqueName();
	    	
	   		EConnectionType lineStyle = conn.getLineStyle();
	
			if(beforeSubProcesses.indexOf(uniqueNameTargetNode) != -1) {   		
			%>
				<%=uniqueNameTargetNode %>Process(globalMap); 
			<%
	    	}
	    }
		%>
	} catch(Exception e) {	
		throw e;
	} catch(java.lang.Error error) {
		throw error;
	}
}
	

