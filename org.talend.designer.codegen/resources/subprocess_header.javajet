<%@ jet 
	package="org.talend.designer.codegen.translators" 
	imports="
		org.talend.designer.codegen.config.NodesSubTree
		org.talend.core.model.process.INode
		java.util.List
		java.util.HashSet
		org.talend.core.model.process.EConnectionType
		org.talend.core.model.process.IConnection
		org.talend.core.model.metadata.IMetadataTable 
		org.talend.core.model.metadata.IMetadataColumn
		org.talend.designer.codegen.config.CodeGeneratorArgument
	" 
	class="SubProcessHeader"
	skeleton="subprocess_header_java.skeleton"
%>
<%
	CodeGeneratorArgument codeGenArgument = (CodeGeneratorArgument) argument;
	NodesSubTree subTree = (NodesSubTree) codeGenArgument.getArgument();
%>

<%
	HashSet<String> hSet = new HashSet<String>();
	for (INode node : subTree.getNodes()) {
		List<IMetadataTable> metadatas = node.getMetadataList();
		if ((metadatas!=null)&&(metadatas.size()>0)) {
			IMetadataTable metadata = metadatas.get(0);
			if (metadata!=null) {
				List< ? extends IConnection> conns = node.getOutgoingConnections();
				for (IConnection conn : conns) {
					if (conn.getLineStyle().equals(EConnectionType.FLOW_MAIN)) {
						if (!hSet.contains(conn.getName())) {
							hSet.add(conn.getName());
%>

private class <%=conn.getName() %>Struct {
	<%
		for (IMetadataColumn column: metadata.getListColumns()) {
    %>
    	private <%=column.getTalendType() %> <%=column.getLabel() %> = <%=(column.getTalendType().compareTo("int")==0)?"0":"null" %>;
	<%
		}
    %>
}
<%
						}
					}
				}
			}
		}
	}
%>

public void <%=subTree.getName() %>Process() throws TalendException {
	try {
<%
	// Call for RUN AFTER links
	for (String after : subTree.getAfterSubProcesses()) {
%>
		<%=after %>Process();
<%
	}
%>

<%
	List< ? extends IConnection> rootConns = subTree.getRootNode().getOutgoingConnections();
	if ((rootConns!=null)&&(rootConns.size()>0)) {
%>
		<%=createPrivateClassInstance(subTree.getRootNode(), rootConns.get(0).getName())%>
<%
	}
%>