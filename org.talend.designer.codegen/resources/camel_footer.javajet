<%@ jet
	imports="
		org.talend.core.model.process.IProcess
		org.talend.core.model.process.INode
		org.talend.core.model.process.IConnection 
		org.talend.core.model.process.EConnectionType
		org.talend.core.model.process.ElementParameterParser
		org.talend.designer.codegen.config.CodeGeneratorArgument
		java.util.Vector
	"
%>
<%
	CodeGeneratorArgument codeGenArgument = (CodeGeneratorArgument) argument;
	
	boolean stats = codeGenArgument.isStatistics();
%>

		}
			});
						
			getCamelContexts().get(0).start();

<%
			if(stats) {
%>			

			CamelStat runStat = new CamelStat(getCamelContexts().get(0));
						
			runStat.setParams();
			
			runStat.openSocket(true);
			runStat.setAllPID(rootPid, fatherPid, pid, jobName);
			runStat.startThreadStat(clientHost, portStats);
			runStat.updateStatOnJob(RunStat.JOBSTART, "");
			
			MyStatThread statsThread = new MyStatThread(runStat);
			statsThread.run();
<%
			} //if stats
%>

			
		}

		protected void doStop() throws Exception {
			super.doStop();
			getCamelContexts().get(0).stop();
		}

		protected org.apache.camel.ProducerTemplate findOrCreateCamelTemplate() {
			return getCamelContexts().get(0).createProducerTemplate();
		}

		protected java.util.Map<String, org.apache.camel.CamelContext> getCamelContextMap() {
			java.util.Map<String, org.apache.camel.CamelContext> answer = new java.util.HashMap<String, org.apache.camel.CamelContext>();
			answer.put("camel-1", new org.apache.camel.impl.DefaultCamelContext());
			return answer;
		}

		protected org.apache.camel.view.ModelFileGenerator createModelFileGenerator()
				throws javax.xml.bind.JAXBException {
			return null;
		}
	}
	
	CamelImpl camelImplementation = new CamelImpl();
	camelImplementation.enableHangupSupport();
	camelImplementation.run();
	
}