<%@ jet 
package="org.talend.designer.codegen.translators" 
imports="
    org.talend.core.model.process.INode 
    org.talend.core.model.metadata.IMetadataColumn
    org.talend.core.model.process.ElementParameterParser
    org.talend.core.model.metadata.IMetadataTable 
    org.talend.designer.codegen.config.CodeGeneratorArgument
    java.util.List
    java.util.ArrayList
    org.talend.commons.utils.StringUtils
"
class="SybaseOutputMain"
%>

<%
CodeGeneratorArgument codeGenArgument = (CodeGeneratorArgument) argument;
INode node = (INode)codeGenArgument.getArgument();
boolean stats = codeGenArgument.isStatistics();

List<IMetadataTable> metadatas = node.getMetadataList();
if ((metadatas!=null)&&(metadatas.size()>0)) {
    IMetadataTable metadata = metadatas.get(0);
    if (metadata!=null) {
        String cid = metadata.getTableName();

        String commitEvery = ElementParameterParser.getValue(
            node,
            "__COMMIT_EVERY__"
        );

        String dataAction = ElementParameterParser.getValue(
            node,
            "__DATA_ACTION__"
        );

        String positionsString = new String();
        String keyPositionsString = new String();

        if ((dataAction.equals("UPDATE"))
            || (dataAction.equals("UPDATE_OR_INSERT"))
            || (dataAction.equals("INSERT_OR_UPDATE"))
            || (dataAction.equals("DELETE"))) {
            List positions       = new ArrayList();
            List keyPositions    = new ArrayList();
            List updatePositions = new ArrayList();
        
            int i = 0;
            for (IMetadataColumn column: metadata.getListColumns()) {
                if (!column.isKey()) {
                    updatePositions.add(i);
                }
                i++;
            }
        
            i = 0;
            for (IMetadataColumn column: metadata.getListColumns()) {
                if (column.isKey()) {
                    keyPositions.add(i);
                }
                i++;
            }
            
            positions.addAll(updatePositions);
            positions.addAll(keyPositions);

            positionsString  = StringUtils.join(
                positions.toArray(),
                ","
            );

            keyPositionsString = StringUtils.join(
                keyPositions.toArray(),
                ","
            );
        }
%>

# keyPositionsString : <%=keyPositionsString%>
# positionsString    : <%=positionsString%>

my $nb_rows = 0;

<%
        if (dataAction.equals("UPDATE")) {
%>
$nb_rows = $usth_<%=cid %>->execute(@<%=cid%>[<%=positionsString%>])
    or die "can't execute update query\n";
if ($nb_rows) {
    $nb_line_updated_<%=cid%>+= $nb_rows;
}

if (++$nb_line_current_commit_upd_<%=cid%> >= <%=commitEvery %>) {
    $dbh_<%=cid %>->commit() ;
    $nb_line_current_commit_upd_<%=cid%> = 0;
}


<%
        }
        else if (dataAction.equals("INSERT")) {
%>

$isth_<%=cid %>->execute(@<%=cid %>)
    or die "can't execute insert query\n";

$nb_line_inserted_<%=cid%>++;

if (++$nb_line_current_commit_ins_<%=cid%> >= <%=commitEvery %>) {
    $dbh_<%=cid %>->commit() ;
    $nb_line_current_commit_ins_<%=cid%> = 0;
}

<%
        }
        else if (dataAction.equals("INSERT_OR_UPDATE")) {
%>
$isth_<%=cid %>->{PrintError} = 0;
eval {
    $nb_line_inserted_<%=cid%> += $isth_<%=cid %>->execute(@<%=cid%>) ;
} ;
if($@){
    eval {
        $dbh_<%=cid%>->rollback();
        $nb_line_updated_<%=cid%> += $usth_<%=cid %>->execute(@<%=cid%>[<%=positionsString%>]) ;
    	$dbh2_<%=cid %>->commit();
    } ;
    if($@){
        die "can't execute update query\n";
    }
} else {
    if (++$nb_line_current_commit_ins_<%=cid%> >= <%=commitEvery %>) {
        $dbh_<%=cid %>->commit() ;
        $nb_line_current_commit_ins_<%=cid%> = 0;
    }
}
<%
        }
        else if (dataAction.equals("UPDATE_OR_INSERT")) {
%>
$usth_<%=cid %>->{PrintError} = 0;
    $nb_line_updated_<%=cid%> += $usth_<%=cid %>->execute(@<%=cid%>[<%=positionsString%>]) 
        or die "can't execute update query\n";

    if($nb_line_updated_<%=cid%>){
        if (++$nb_line_current_commit_upd_<%=cid%> >= <%=commitEvery %>) {
            $dbh2_<%=cid %>->commit() ;
            $nb_line_current_commit_upd_<%=cid%> = 0;
        }
    }
    else {
        $nb_line_inserted_<%=cid%> += $isth_<%=cid %>->execute(@<%=cid%>)
            or die "can't execute insert query\n"  ;
    	$dbh_<%=cid %>->commit();
    }
<%
        }
        else if (dataAction.equals("DELETE")) {
%>
$nb_rows = $dsth_<%=cid %>->execute(@<%=cid%>[<%=keyPositionsString%>])
    or die "can't execute delete query\n";

if ($nb_rows) {
    $nb_line_deleted_<%=cid%>+= $nb_rows;
}
<%
        }
%>

my $new_nb_line_<%=cid%> =
    $nb_line_updated_<%=cid %>
    + $nb_line_inserted_<%=cid %>
    + $nb_line_deleted_<%=cid %>
;
 
<%
        if (stats) {
%>
if ($new_nb_line_<%=cid%> > $nb_line_<%=cid%>) {
    UpdateStat('<%=cid %>', 1);
}
<%
        }
%>
$nb_line_<%=cid%> = $new_nb_line_<%=cid%>;

<%
    }
}
%>
