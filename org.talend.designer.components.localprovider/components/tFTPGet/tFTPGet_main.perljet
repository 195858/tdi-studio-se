<%@ jet 
imports="
    org.talend.core.model.process.INode 
    org.talend.core.model.metadata.IMetadataTable 
    org.talend.core.model.process.ElementParameterParser
    org.talend.designer.codegen.config.CodeGeneratorArgument
    java.util.List
    java.util.Map
"
%>

<%
CodeGeneratorArgument codeGenArgument = (CodeGeneratorArgument) argument;
INode node = (INode)codeGenArgument.getArgument();
String cid = node.getUniqueName();
%>

<%
String localdir    = ElementParameterParser.getValue(node, "__LOCALDIR__");
String remotedir   = ElementParameterParser.getValue(node, "__REMOTEDIR__");

List<Map<String, String>> files =
    (List<Map<String,String>>)ElementParameterParser.getObjectValue(
        node,
        "__FILES__"
    );
%>

# keep all "my" variables local to the block, thus we can use several
# tFTP components in the same process
{
    my $localdir  = <%=localdir%>;
    my $remotedir = <%=remotedir%>;
    my @files = (
<%
  for (int i=0; i<files.size(); i++) {
    Map<String, String> line = files.get(i);
%>
        {
            filemask => <%= line.get("FILEMASK") %>,
            newname  => <%= line.get("NEWNAME") %>,
        },
<%
  }
%>
    );
    my $ftp = $ftp_<%=cid%>;

    chdir($localdir)
        or die "Cannot change local working directory to $localdir ", $@;

    $ftp->cwd($remotedir)
        or die "Cannot change remote working directory ", $ftp->message;

    foreach my $file (@files) {
        my $dir     = dirname($file->{filemask});
        my $pattern = filemaskToRegex(basename($file->{filemask}));
    
        $ftp->cwd($dir)
            or die "Cannot change remote working directory to $dir", $ftp->message;
     
        my @raw_filelist = $ftp->ls()
            or die "ls failed", $ftp->message;
    
        my @filelist = grep(
            /$pattern/,
            @raw_filelist
        );
    
        foreach my $file (@filelist) {
            $ftp->get($file)
                or die "get failed ", $ftp->message;
        }
    }
} # block end
