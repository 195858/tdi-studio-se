<%@ jet 
	imports="
		org.talend.core.model.process.INode 
		org.talend.core.model.process.ElementParameterParser
		org.talend.core.model.metadata.IMetadataTable
		org.talend.designer.codegen.config.CodeGeneratorArgument
		java.util.List
	"
%>

<%
	CodeGeneratorArgument codeGenArgument = (CodeGeneratorArgument) argument;
	INode node = (INode)codeGenArgument.getArgument();
	String cid = node.getUniqueName();
	String useExistingConn = ElementParameterParser.getValue(node,"__USE_EXISTING_CONNECTION__");
	
	boolean sftp = ElementParameterParser.getValue(node, "__SFTP__").equals("true");
		%>
		}
 
	nb_file_<%=cid%> = getter_<%=cid %>.count;
		<%
	if(sftp){
%>
		msg_<%=cid%>.add(getter_<%=cid%>.count + " files have been downloaded.");    	    
    	globalMap.put("<%=cid%>_TRANSFER_MESSAGES", (String[]) msg_<%=cid%>.toArray(new String[0]));
    	session_<%=cid%>.disconnect(); 
    	
    } catch (com.jcraft.jsch.JSchException e){
    	// 1. host address is error - [java.net.ConnectException: Connection timed out: connect]
        // 2. service has closed - [java.net.ConnectException: Connection refused: connect], etc.
        System.err.println(e.getMessage());
    } catch (Exception e){
    	e.printStackTrace();
    }    
    
<%}else{%>
	msg_<%=cid%>.add(ftp_<%=cid%>.getDownloadCount() + " files have been downloaded.");
	globalMap.put("<%=cid%>_TRANSFER_MESSAGES", msg_<%=cid%>.getAll());
	
<%
	if(!useExistingConn.equals("true"))
	{
		%>

	ftp_<%=cid %>.quit();
	<%}%>
	
} catch (java.net.ConnectException e){
	System.err.println("can not connect to ftp");
} catch (com.enterprisedt.net.ftp.FTPException e){
	System.err.println(e.getMessage());
} catch (java.io.IOException e){
	System.err.println("local directory not found");
} catch (Exception e){
	e.printStackTrace();
}
<%}%>

globalMap.put("<%=cid %>_NB_FILE",nb_file_<%=cid%>);