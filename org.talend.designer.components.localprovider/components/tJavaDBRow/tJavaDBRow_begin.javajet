<%@ jet 
imports="
			org.talend.core.model.process.INode 
			org.talend.core.model.process.ElementParameterParser 
			org.talend.designer.codegen.config.CodeGeneratorArgument
" 
%>

<%
	CodeGeneratorArgument codeGenArgument = (CodeGeneratorArgument) argument;
	
	INode node = (INode)codeGenArgument.getArgument();
	
	String cid = node.getUniqueName();
	
	String frameworkType = ElementParameterParser.getValue(node,"__FRAMEWORK_TYPE__");
		
	String dbhost = ElementParameterParser.getValue(node, "__HOST__");
	
	String dbport = ElementParameterParser.getValue(node, "__PORT__");
	
	String dbname= ElementParameterParser.getValue(node, "__DBNAME__");
		
	String dbRootPath = ElementParameterParser.getValue(node, "__DBPATH__");	
	
	String dbuser= ElementParameterParser.getValue(node, "__USER__");
	
	String dbpwd= ElementParameterParser.getValue(node, "__PASS__");
	
    String commitEvery = ElementParameterParser.getValue(node, "__COMMIT_EVERY__");

    String dbquery= ElementParameterParser.getValue(node, "__QUERY__");
	       
    	   dbquery = org.talend.core.model.utils.NodeUtil.replaceCRLFInMEMO_SQL(dbquery);
    
	boolean usePrepareStatement = "true".equals(ElementParameterParser.getValue(node,"__USE_PREPAREDSTATEMENT__"));
%>

String jdbcDriver_<%=cid%> = null;
String url_<%=cid%> = null;
<%
if(("EMBEDED").equals(frameworkType))
{
	%>
	jdbcDriver_<%=cid%> = "org.apache.derby.jdbc.EmbeddedDriver";
	url_<%=cid%> = "jdbc:derby:" + <%=dbname%>;
	//set the root path of the database
	System.setProperty("derby.system.home",<%=dbRootPath%>);
	<%
}
else
{
	if(("JCCJDBC").equals(frameworkType))
	{
		%>
		jdbcDriver_<%=cid%> = "com.ibm.db2.jcc.DB2Driver";
		url_<%=cid%> = "jdbc:derby:net://" + <%=dbhost%> + ":" + <%=dbport%> + "/" + <%=dbname%>;
		<%
	}
	else
	{
		%>
		jdbcDriver_<%=cid%> = "org.apache.derby.jdbc.ClientDriver";
		url_<%=cid%> = "jdbc:derby://" + <%=dbhost%> + ":" + <%=dbport%> + "/" + <%=dbname%>;
		<%
	}
	%>
	<%
	String connectionFlag = ElementParameterParser.getValue(node, "__CONNECTION_FLAG__");
	if(("false").equals(connectionFlag))
	{
	%>
    	org.apache.derby.drda.NetworkServerControl serverControl_<%=cid%>;
    	serverControl_<%=cid%> = new org.apache.derby.drda.NetworkServerControl(java.net.InetAddress.getByName(<%=dbhost%>),Integer.parseInt(<%=dbport%>));
    	//start server
    	serverControl_<%=cid%>.start(new java.io.PrintWriter(System.out,true));
    	boolean isServerUp_<%=cid%> = false;
    	int timeOut_<%=cid%> = 5;
    	while(!isServerUp_<%=cid%> && timeOut_<%=cid%> > 0)
    	{
    		try
    		{
    			timeOut_<%=cid%>--;
    			/*
    			* testing for connection to see if the network server is up and running.
    			* if server is not ready yet, this method will throw an exception.		
    			*/
    			serverControl_<%=cid%>.ping();
    			isServerUp_<%=cid%> = true;
    		}
    		catch(java.lang.Exception e) {
    			//Unable to obtain a connection to network server, trying again after 3000 ms.
    			Thread.currentThread().sleep(3000);
    		}    				
    	}
    	if(!isServerUp_<%=cid%>)
    	{
    		/*
    		 * can not obtain a connection to network server.
    		 */ 	 
    		throw new java.lang.Exception("Can not obtain a connection to network server");
    	}
    	//derby network server started.
	<%
	}
}
%>
Class.forName(jdbcDriver_<%=cid%>).newInstance();

java.util.Properties properties_<%=cid%> = new java.util.Properties();

properties_<%=cid%>.put("user",<%=dbuser%>);

properties_<%=cid%>.put("password",<%=dbpwd%>);

java.sql.Connection conn_<%=cid%> = java.sql.DriverManager.getConnection(url_<%=cid%>,properties_<%=cid%>);

int nb_line_<%=cid%> = 0;

boolean whetherReject_<%=cid%> = false;

<%
if(!("").equals(commitEvery)&&!("0").equals(commitEvery)){
%>

int commitEvery_<%=cid%> = <%=commitEvery%>;

int commitCounter_<%=cid%> = 0;

conn_<%=cid%>.setAutoCommit(false);
<%
}
%>

<%
	if (usePrepareStatement ) {
%>
	java.sql.PreparedStatement pstmt_<%=cid %> = conn_<%=cid%>.prepareStatement(<%=dbquery%>);	
<%
	} else {
%>
	java.sql.Statement stmt_<%=cid %> = conn_<%=cid %>.createStatement();
<%
	}
%>
String query_<%=cid %> = "";
