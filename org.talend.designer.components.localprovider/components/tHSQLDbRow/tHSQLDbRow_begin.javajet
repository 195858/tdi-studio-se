<%@ jet 
imports="
			org.talend.core.model.process.INode 
			org.talend.core.model.process.ElementParameterParser 
			org.talend.designer.codegen.config.CodeGeneratorArgument
" 
%>

<%
	CodeGeneratorArgument codeGenArgument = (CodeGeneratorArgument) argument;
	INode node = (INode)codeGenArgument.getArgument();
	String cid = node.getUniqueName();
	
	String dbhost = ElementParameterParser.getValue(node, "__HOST__");
	String dbport = ElementParameterParser.getValue(node, "__PORT__");
	String dbalias = ElementParameterParser.getValue(node, "__DATABASE_ALIAS__");
	String dbpath = ElementParameterParser.getValue(node, "__DBPATH__");
	String dbname= ElementParameterParser.getValue(node, "__DBNAME__");
	String dbuser= ElementParameterParser.getValue(node, "__USER__");
	String dbpwd= ElementParameterParser.getValue(node, "__PASS__");
	String dbencoding= ElementParameterParser.getValue(node, "__ENCODING__");
    String commitEvery = ElementParameterParser.getValue(node, "__COMMIT_EVERY__");
    String dbquery= ElementParameterParser.getValue(node, "__QUERY__");
	       dbquery = dbquery.replaceAll("\n"," ");
    	   dbquery = dbquery.replaceAll("\r"," ");
    
	boolean usePrepareStatement = "true".equals(ElementParameterParser.getValue(node,"__USE_PREPAREDSTATEMENT__"));
	
	String dbproperties = ElementParameterParser.getValue(node, "__PROPERTIES__");
%>

String url_<%=cid %> = null;

<%
	String runningMode = ElementParameterParser.getValue(node, "__RUNNING_MODE__");
	String tls = ElementParameterParser.getValue(node, "__TLS__");
	if(("HSQLDB_SERVER").equals(runningMode))
	{
		if(("true").equals(tls))
		{
		%>
			url_<%=cid %> = "jdbc:hsqldb:hsqls://" + <%=dbhost%> + ":" + <%=dbport%> + "/" + <%=dbalias%>;
		<%
		}
		else
		{
		%>
			url_<%=cid %> = "jdbc:hsqldb:hsql://" + <%=dbhost%> + ":" + <%=dbport%> + "/" + <%=dbalias%>;
		<%
		}
	}
	else if(("HSQLDB_WEBSERVER").equals(runningMode))
	{
		if(("true").equals(tls))
		{
		%>
			url_<%=cid %> = "jdbc:hsqldb:https://" + <%=dbhost%> + ":" + <%=dbport%> + "/" + <%=dbalias%>;
		<%
		}
		else
		{
		%>
			url_<%=cid %> = "jdbc:hsqldb:http://" + <%=dbhost%> + ":" + <%=dbport%> + "/" + <%=dbalias%>;
		<%
		}
	}
	else if(("HSQLDB_INPROGRESS_PERSISTENT").equals(runningMode))
	{
		%>
		url_<%=cid %> = "jdbc:hsqldb:file:" + <%=dbpath%> + "/" + <%=dbname%> ;
		<%
	} else if(("HSQLDB_IN_MEMORY").equals(runningMode)) {
		%>
		url_<%=cid %> = "jdbc:hsqldb:mem:" + <%=dbname%> ;
		<%
	}

	if(dbproperties != null && !("\"\"").equals(dbproperties) && !("").equals(dbproperties)) {
%>
		url_<%=cid %> += ";" + <%=dbproperties%>;
<%
	}
	
%>

java.lang.Class.forName("org.hsqldb.jdbcDriver");

String dbUser_<%=cid %> = <%=dbuser%>;
String dbPwd_<%=cid %> = <%=dbpwd%>;

java.sql.Connection conn_<%=cid%> = java.sql.DriverManager.getConnection(url_<%=cid %>,dbUser_<%=cid%>,dbPwd_<%=cid%>);

boolean whetherReject_<%=cid%> = false;

<%
if(!("").equals(commitEvery)&&!("0").equals(commitEvery)){
%>

int commitEvery_<%=cid%> = <%=commitEvery%>;

int commitCounter_<%=cid%> = 0;

conn_<%=cid%>.setAutoCommit(false);
<%
}
%>
<%
	if (usePrepareStatement ) {
%>
	java.sql.PreparedStatement pstmt_<%=cid %> = conn_<%=cid%>.prepareStatement(<%=dbquery%>);	
<%
	} else {
%>
	java.sql.Statement stmt_<%=cid %> = conn_<%=cid %>.createStatement();
<%
	}
%>
String query_<%=cid %> = "";
