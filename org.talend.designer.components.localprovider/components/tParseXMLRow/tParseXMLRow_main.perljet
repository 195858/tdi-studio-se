<%@ jet 
imports="
    org.talend.core.model.process.IConnection
    org.talend.core.model.process.INode 
    org.talend.core.model.process.ElementParameterParser 
    org.talend.core.model.metadata.IMetadataTable 
    org.talend.core.model.metadata.IMetadataColumn 
    org.talend.designer.codegen.config.CodeGeneratorArgument
    java.util.Map
    java.util.List
" 
%>

<%
CodeGeneratorArgument codeGenArgument = (CodeGeneratorArgument) argument;
INode node = (INode)codeGenArgument.getArgument();
String cid = node.getUniqueName();

IMetadataTable metadata = null;
List<IMetadataTable> metadatas = node.getMetadataList();
if ((metadatas!=null)&&(metadatas.size()>0)) {
    metadata = metadatas.get(0);
}

String inputRowName = null;
IConnection inConn = null;
List<? extends IConnection> inConns = node.getIncomingConnections();
if (inConns != null && !inConns.isEmpty()) {
    inConn = inConns.get(0);
    inputRowName = inConn.getName();
}

List<Map<String, String>> mapping =
    (List<Map<String,String>>)ElementParameterParser.getObjectValueXML(
        node,
        "__MAPPING__"
    );

String loopQuery = ElementParameterParser.getValue(
    node,
    "__LOOP_QUERY__"
);

String xmlField = ElementParameterParser.getValue(
    node,
    "__XMLFIELD__"
);

String limit = ElementParameterParser.getValue(
    node,
    "__LIMIT__"
);

if (limit.equals("")) {
    limit = "undef";
}

if (metadata != null && inputRowName != null) {
    IMetadataTable inMetadata = inConn.getMetadataTable();

    int xmlColumnIndex = 0;
    for (IMetadataColumn column: inMetadata.getListColumns()) {
        if (xmlField.equals(column.getLabel())) {
            break;
        }
        xmlColumnIndex++;
    }
%>

my $tree_<%=cid%> = $parser_<%=cid%>->parse_string(
    $<%=inputRowName%>->[<%=xmlColumnIndex%>]
);
my $root_<%=cid%> = $tree_<%=cid%>->getDocumentElement;

foreach my $line_<%=cid%> ($root_<%=cid%>->findnodes(<%=loopQuery%>)) {
    $nb_line_<%=cid%>++;

<%
        if (!limit.equals("undef")) {
%>
    last if $nb_line_<%=cid%> > <%=limit%>;
<%
        }
%>

    my $<%=cid %> = [
<%
        for (int i = 0; i < mapping.size(); i++) {
            Map<String, String> line = mapping.get(i);
%>
        $line_<%=cid%>->findvalue(<%= line.get("QUERY") %>),
<%
        }
%>
    ];

<%
}
%>
