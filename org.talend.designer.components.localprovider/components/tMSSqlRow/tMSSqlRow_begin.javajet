<%@ jet 
imports="
		org.talend.core.model.process.INode 
		org.talend.core.model.process.ElementParameterParser 
		org.talend.designer.codegen.config.CodeGeneratorArgument		
" 
%>

<%
	CodeGeneratorArgument codeGenArgument = (CodeGeneratorArgument) argument;
	INode node = (INode)codeGenArgument.getArgument();
	String cid = node.getUniqueName();
	
	String dbhost = ElementParameterParser.getValue(node, "__HOST__");
	String dbport = ElementParameterParser.getValue(node, "__PORT__");
	String dbname= ElementParameterParser.getValue(node, "__DBNAME__");
	String dbproperties = ElementParameterParser.getValue(node, "__PROPERTIES__");
	String dbuser= ElementParameterParser.getValue(node, "__USER__");
	String dbpwd= ElementParameterParser.getValue(node, "__PASS__");
	String dbencoding= ElementParameterParser.getValue(node, "__ENCODING__");
    String commitEvery = ElementParameterParser.getValue(node, "__COMMIT_EVERY__");
    String dbschema = ElementParameterParser.getValue(node, "__DB_SCHEMA__");
 	String tableName = ElementParameterParser.getValue(node,"__TABLE__");
    String identityInsert = ElementParameterParser.getValue(node, "__IDENTITY_INSERT__");
	
	String useExistingConn = ElementParameterParser.getValue(node,"__USE_EXISTING_CONNECTION__");
	if(useExistingConn.equals("true")) {
		String connection = ElementParameterParser.getValue(node,"__CONNECTION__");
		String conn = "conn_" + connection;
		String schema = "dbschema_" + connection;
		%>
		String dbschema_<%=cid%> = (String)globalMap.get("<%=schema%>");
		java.sql.Connection conn_<%=cid%> = (java.sql.Connection)globalMap.get("<%=conn%>");
		<%
	} else {
	    %>
	    String dbschema_<%=cid%> = <%=dbschema%>;
        java.lang.Class.forName("net.sourceforge.jtds.jdbc.Driver");
        String url_<%=cid %> = "jdbc:jtds:sqlserver://" + <%=dbhost%> + ":" + <%=dbport%> + "//" + <%=dbname%> + ";appName=" + projectName + ";" + <%=dbproperties%>;        
        String dbUser_<%=cid %> = <%=dbuser%>;
        String dbPwd_<%=cid %> = <%=dbpwd%>;
        java.sql.Connection conn_<%=cid%> = java.sql.DriverManager.getConnection(url_<%=cid %>,dbUser_<%=cid%>,dbPwd_<%=cid%>);
        <%
	}
    %>

    <%
    if(!useExistingConn.equals("true")) {
        if(!commitEvery.equals("") && !commitEvery.equals("0")) {
            %>
            conn_<%=cid%>.setAutoCommit(false);            
            int commitEvery_<%=cid%> = <%=commitEvery%>;    
            int commitCounter_<%=cid%> = 0;    
            <%
        }
    }
    %>
    java.sql.Statement stmt_<%=cid %> = conn_<%=cid %>.createStatement();    
    <%
    if(identityInsert.equals("true")) {	
        %>
        String  tableName_<%=cid%> = null;
        if(dbschema_<%=cid%> == null || dbschema_<%=cid%>.trim().length() == 0) {
            tableName_<%=cid%> = <%=tableName%>;
        } else {
            tableName_<%=cid%> = dbschema_<%=cid%> + "].[" + <%=tableName%>;
        }
        stmt_<%=cid %>.execute("SET IDENTITY_INSERT ["+ tableName_<%=cid%> +"] ON");
        <%
    }
    %>
    String query_<%=cid %> = "";
    boolean whetherReject_<%=cid%> = false;    
