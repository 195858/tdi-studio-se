<%@ jet 
imports="
    org.talend.core.model.process.INode 
    org.talend.core.model.process.ElementParameterParser 
    org.talend.core.model.metadata.IMetadataTable 
    org.talend.core.model.metadata.IMetadataColumn
    org.talend.designer.codegen.config.CodeGeneratorArgument
    org.talend.core.model.metadata.MetadataTalendType
    java.util.List
    java.util.Map
    java.util.ArrayList
    org.talend.commons.utils.StringUtils
" 
%>

<%
CodeGeneratorArgument codeGenArgument = (CodeGeneratorArgument) argument;
INode node = (INode)codeGenArgument.getArgument();
boolean stats = codeGenArgument.isStatistics();

List<IMetadataTable> metadatas = node.getMetadataList();
if ((metadatas!=null)&&(metadatas.size()>0)) {
    IMetadataTable metadata = metadatas.get(0);
    if (metadata!=null) {
        String cid = metadata.getTableName();

        String commitEvery = ElementParameterParser.getValue(
            node,
            "__COMMIT_EVERY__"
        );

        String dataAction = ElementParameterParser.getValue(
            node,
            "__DATA_ACTION__"
        );
        String tableAction = ElementParameterParser.getValue(
            node,
            "__TABLE_ACTION__"
        );
        String dbtable = ElementParameterParser.getValue(node, "__TABLE__");
        String dbname = ElementParameterParser.getValue(node, "__DSN__");
        String dbuser = ElementParameterParser.getValue(node, "__USER__");
        String dbpass = ElementParameterParser.getValue(node, "__PASS__");
        String encoding = ElementParameterParser.getValue(
            node,
            "__ENCODING__"
        );

        List<Map<String, String>> addCols =
            (List<Map<String,String>>)ElementParameterParser.getObjectValue(
                node,
                "__ADD_COLS__"
        );

        if (tableAction.equals("DROP_CREATE")
            || tableAction.equals("CREATE")
            || tableAction.equals("CREATE_IF_NOT_EXISTS")) {
            addCols.clear();
        }
%>

use DBI;
use tMSSqlOutput::MSSql;

my %desc_<%=cid %> = (
    dbname        => <%=dbname %>,
    dbtable       => <%=dbtable %>,
    dbuser        => <%=dbuser %>,
    dbpass        => <%=dbpass %>,
    encoding      => <%=encoding %>,
    commit_every  => <%=commitEvery %>,
    schema        => [
<%
        for (IMetadataColumn column: metadata.getListColumns()) {
%>
        {
            name    => '<%=column.getLabel() %>',
            key     => <%=column.isKey() %>,
            type    => '<%=column.getTalendType() %>',
            len     => <%=column.getLength() %>,
            precision => <%=column.getPrecision() %>,
            null    => <%=column.isNullable() %>,
            default => '<%=column.getDefault() %>',
            comment => '<%=column.getComment() %>',
        },
<%
        }
%>
    ],
);

<%
        if (stats) {
%>
    UpdateStat('<%=cid %>', 0);
<%
        }
%>


my $dbh_<%=cid %> = DBI->connect(
    sprintf(
        'DBI:ODBC:%s',
        <%=dbname %>,
    ),
    <%=dbuser %>,
    <%=dbpass %>,
    {
        AutoCommit => 0,
    }
)
    or die "can't connect to database";



my $sth_<%=cid %>;
my $nb_line_current_commit_<%=cid%> = 0;

<%
    }
}
%>
