<%@ jet 
	imports="
		org.talend.core.model.process.INode 
		org.talend.core.model.process.ElementParameterParser 
		org.talend.designer.codegen.config.CodeGeneratorArgument
	" 
%>
<% 
    CodeGeneratorArgument codeGenArgument = (CodeGeneratorArgument) argument;
    INode node = (INode)codeGenArgument.getArgument();
    String cid = node.getUniqueName();	

	String host = ElementParameterParser.getValue(node, "__HOST__");
	String port = ElementParameterParser.getValue(node, "__PORT__");
	String taskType = ElementParameterParser.getValue(node, "__TASKTYPE__");
	String owner = ElementParameterParser.getValue(node,"__OWNER__");
	String tag = ElementParameterParser.getValue(node, "__TAG__");
	String startDate = ElementParameterParser.getValue(node, "__START_DATETIME__");
	String endDate = ElementParameterParser.getValue(node, "__END_DATETIME__");
	String starRanking = ElementParameterParser.getValue(node, "__STAR_RANKING__");
	String limit = ElementParameterParser.getValue(node,"__LIMIT__");
	String status = ElementParameterParser.getValue(node,"__STATUS__");
	String username = ElementParameterParser.getValue(node, "__USERNAME__");
	String password = ElementParameterParser.getValue(node, "__PASSWORD__");
	boolean targetRecordOnly = ("true").equals(ElementParameterParser.getValue(node,"__TARGET_RECORD_ONLY__"));
			
%>
		int nb_line_<%=cid%> = 0;	
        java.net.Authenticator.setDefault(new java.net.Authenticator() {
            protected java.net.PasswordAuthentication getPasswordAuthentication() {
            	return new java.net.PasswordAuthentication(<%=username%>, <%=password%>.toCharArray());
        }});
		
		java.net.URL wsdlUrl_<%=cid%> = new java.net.URL("http://"+<%=host%>+":"+<%=port%>+"/org.talend.datastewardship/services/TDSCWS?wsdl");
		org.talend.datastewardship.server.ws.TDSCWS_Service service_<%=cid%> = new org.talend.datastewardship.server.ws.TDSCWS_Service(wsdlUrl_<%=cid%>);
		org.talend.datastewardship.server.ws.TDSCWS TDSCWS_<%=cid%> = service_<%=cid%>.getTDSCWSImplPort();
		
		String startDateString_<%=cid%> = <%=startDate.equals("")?null:startDate%>;
		String endDateString_<%=cid%> = <%=endDate.equals("")?null:endDate%>;
    	com.sun.org.apache.xerces.internal.jaxp.datatype.XMLGregorianCalendarImpl startXMLGregorianCalendar_<%=cid%> = null;
    	com.sun.org.apache.xerces.internal.jaxp.datatype.XMLGregorianCalendarImpl endXMLGregorianCalendar_<%=cid%> = null;
    	if(startDateString_<%=cid%>!=null && !startDateString_<%=cid%>.equals("")){
    		java.text.SimpleDateFormat startdf_<%=cid%> = new java.text.SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
			startdf_<%=cid%>.parse(startDateString_<%=cid%>);
			java.util.Calendar startCal_<%=cid%> = startdf_<%=cid%>.getCalendar();
			java.util.GregorianCalendar startDate_<%=cid%> = (java.util.GregorianCalendar) startCal_<%=cid%>;
			startXMLGregorianCalendar_<%=cid%> = new com.sun.org.apache.xerces.internal.jaxp.datatype.XMLGregorianCalendarImpl(startDate_<%=cid%>);
		}
    	if(endDateString_<%=cid%>!=null && !endDateString_<%=cid%>.equals("")){
        	java.text.SimpleDateFormat enddf_<%=cid%> = new java.text.SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
            enddf_<%=cid%>.parse(endDateString_<%=cid%>);
            java.util.Calendar endCal_<%=cid%> = enddf_<%=cid%>.getCalendar();
            java.util.GregorianCalendar endDate_<%=cid%> = (java.util.GregorianCalendar) endCal_<%=cid%>;
			endXMLGregorianCalendar_<%=cid%> = new com.sun.org.apache.xerces.internal.jaxp.datatype.XMLGregorianCalendarImpl(endDate_<%=cid%>);
		}
		
		nb_line_<%=cid%> = TDSCWS_<%=cid%>.deleteTasks(<%=taskType%>,<%=owner.equals("")?null:owner%>,<%=tag.equals("")?null:tag%>,startXMLGregorianCalendar_<%=cid%>,endXMLGregorianCalendar_<%=cid%>,<%=starRanking%>,<%=limit%>,<%=status.equals("null")?null:"\""+status+"\""%>);
		
		globalMap.put("<%=cid %>_NB_LINE",nb_line_<%=cid%>);
