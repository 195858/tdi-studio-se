<%@ jet 
package="org.talend.designer.codegen.translators" 
imports="
    org.talend.core.model.process.INode 
    org.talend.core.model.metadata.IMetadataTable 
    org.talend.designer.codegen.config.CodeGeneratorArgument
    org.talend.core.model.process.ElementParameterParser
    java.util.List    
"
class="FileOutputXMLEnd"
%>

<%
CodeGeneratorArgument codeGenArgument = (CodeGeneratorArgument) argument;
INode node = (INode)codeGenArgument.getArgument();
boolean stats = codeGenArgument.isStatistics();
String split = ElementParameterParser.getValue(node, "__SPLIT__");

List<IMetadataTable> metadatas = node.getMetadataList();
if ((metadatas!=null)&&(metadatas.size()>0)) {
    IMetadataTable metadata = metadatas.get(0);
    if (metadata!=null) {
    
    String fileName = ElementParameterParser.getValue(node, "__FILENAME__");
	String encoding = ElementParameterParser.getValue(node, "__ENCODING__");
	String fileNameNoExtension =  fileName.substring(0,fileName.indexOf(".xml"));
    
if(split.equals("true")){
%>
java.io.FileOutputStream fos = new java.io.FileOutputStream(<%=fileNameNoExtension%>"+splitedFileNo+".xml");
	try{
	java.io.BufferedWriter out = new java.io.BufferedWriter(
	                                new java.io.OutputStreamWriter(fos, <%=encoding%>));                              
	   
    for (int i = rootTag_<%=node.getUniqueName()%>.length-1; i >=0 ; i--) {
			strBuffer_<%=node.getUniqueName()%>.append("</"+rootTag_<%=node.getUniqueName()%>[i]+">");		            
   		}
    	out.write(strBuffer_<%=node.getUniqueName()%>.toString());   
		out.flush();
		out.close();
	
	}catch(java.io.UnsupportedEncodingException err){
	err.printStackTrace();
	}
<%
}

if (!split.equals("true")) {
%>
		for (int i = 0; i < rootTag_<%=node.getUniqueName()%>.length; i++) {
			strBuffer_<%=node.getUniqueName()%>.append("</"+rootTag_<%=node.getUniqueName()%>[i]+">");		            
   		}
    	out.write(strBuffer_<%=node.getUniqueName()%>.toString());   
		out.flush();
		out.close();
	
	}catch(java.io.UnsupportedEncodingException err){
	err.printStackTrace();
	}
<%
}
if (stats) {
%>
//Statistic function had not implemented yet! :)
<%
}
    }
}
%>
