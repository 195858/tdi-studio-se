<%@ jet 
package="org.talend.designer.codegen.translators" 
imports="
    org.talend.core.model.process.INode 
    org.talend.designer.codegen.config.CodeGeneratorArgument
    org.talend.core.model.process.ElementParameterParser
"
class="FileOutputXMLEnd"
%>

<%
CodeGeneratorArgument codeGenArgument = (CodeGeneratorArgument) argument;
INode node = (INode)codeGenArgument.getArgument();

String split = ElementParameterParser.getValue(node, "__SPLIT__");
String fileName = ElementParameterParser.getValue(node, "__FILENAME__");
String encoding = ElementParameterParser.getValue(node, "__ENCODING__");
String fileNameNoExtension =  fileName.substring(0,fileName.indexOf(".xml"));
String cid = node.getUniqueName();
    
if(split.equals("true")){
%>
java.io.FileOutputStream fos_<%=cid%> = new java.io.FileOutputStream(<%=fileNameNoExtension%>"+splitedFileNo_<%=cid%>+".xml");
java.io.BufferedWriter out_<%=cid%> = new java.io.BufferedWriter(
	                                new java.io.OutputStreamWriter(fos_<%=cid%>, <%=encoding%>));                              
	   
    for (int i = rootTag_<%=cid%>.length-1; i >=0 ; i--) {
			strBuffer_<%=cid%>.append("</"+rootTag_<%=cid%>[i]+">");		            
   		}
    	out_<%=cid%>.write(strBuffer_<%=cid%>.toString());   
		out_<%=cid%>.flush();
		out_<%=cid%>.close();
<%
}

if (!split.equals("true")) {
%>
		for (int i = 0; i < rootTag_<%=cid%>.length; i++) {
			strBuffer_<%=cid%>.append("</"+rootTag_<%=cid%>[i]+">");		            
   		}
    	out_<%=cid%>.write(strBuffer_<%=cid%>.toString());   
		out_<%=cid%>.flush();
		out_<%=cid%>.close();	

<%
}
%>

globalMap.put("<%=cid %>",nb_line_<%=cid %>);