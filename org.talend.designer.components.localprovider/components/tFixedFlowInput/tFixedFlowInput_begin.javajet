<%@ jet 
imports="
   org.talend.core.model.process.INode 
   org.talend.core.model.process.ElementParameterParser 
   org.talend.core.model.process.IConnection
   org.talend.core.model.process.IConnectionCategory    
   org.talend.designer.codegen.config.CodeGeneratorArgument
   org.talend.core.model.metadata.IMetadataTable 
   org.talend.core.model.metadata.IMetadataColumn
   org.talend.core.model.metadata.types.JavaTypesManager
   java.util.List
   java.util.Map
" 
%>

<%
	CodeGeneratorArgument codeGenArgument = (CodeGeneratorArgument) argument;
	INode node = (INode)codeGenArgument.getArgument();
	String cid = node.getUniqueName();

	String nbRows = ElementParameterParser.getValue(node, "__NB_ROWS__");

	List<Map<String, String>> tableValues =
    (List<Map<String,String>>)ElementParameterParser.getObjectValue(
        node,
        "__VALUES__"
    );
    
    boolean use_inTable = ("true").equals(ElementParameterParser.getValue(node, "__USE_INTABLE__"));
    
	List<Map<String, String>> inTableValues =
    (List<Map<String,String>>)ElementParameterParser.getObjectValue(
        node,
        "__INTABLE__"
    );
    
	List<IMetadataTable> metadatas = node.getMetadataList();
	IMetadataTable metadata = null;
	if ((metadatas!=null)&&(metadatas.size()>0)) {
		metadata = metadatas.get(0);    
    }
    
	List< ? extends IConnection> conns = node.getOutgoingSortedConnections();
	
//************** the original part that get only one value for each column ********************
	if(!use_inTable){
		if(tableValues != null && tableValues.size() > 0 && conns != null && conns.size() > 0) {
	    %>
	    globalMap.put("NB_LINE", <%=nbRows%>);
	    for (int i_<%=cid%> = 0 ; i_<%=cid%> < <%=nbRows%> ; i_<%=cid%>++) {
	        <%
    	    for(IConnection conn : conns) {
    	        if(conn.getLineStyle().hasConnectionCategory(IConnectionCategory.DATA)) {    	        	
    	            for(Map<String, String> tableValue : tableValues) {
    	            	String lable = tableValue.get("SCHEMA_COLUMN");
        	            String value = tableValue.get("VALUE");
        	            if(value == null || value.length() == 0){ //use the default value
        	            	IMetadataColumn column = metadata.getColumn(lable);
    	            		String typeToGenerate = JavaTypesManager.getTypeToGenerate(column.getTalendType(), column.isNullable());
    	            		String defaultValue = JavaTypesManager.getDefaultValueFromJavaType(typeToGenerate, column.getDefault());
    	            		%>        	            	
        	            		<%=conn.getName()%>.<%=lable %> = <%=defaultValue %>;        	            	
        	            	<%
        	            }else{
        	            	%>        	            	
        	            		<%=conn.getName()%>.<%=lable %> = <%=value %>;
        	            	<%
        	            }
    	            }
    	        }
    	    }
		}
//***************************the original part end ***************************************
	}else{
//******************the new part ---get several values for each column*********************
		if(inTableValues != null && inTableValues.size() > 0 && conns != null && conns.size() > 0) {
%>
	int nb_line_<%=cid %> = 0;
<%
    	    for(IConnection conn : conns) {
    	        if(conn.getLineStyle().hasConnectionCategory(IConnectionCategory.DATA)) {
%>
	List<<%=conn.getName()%>Struct> cacheList_<%=cid %> = new java.util.ArrayList<<%=conn.getName()%>Struct>();
<%    	        	
    	            for(Map<String, String> tableValue : inTableValues) {
%>
	<%=conn.getName()%> = new <%=conn.getName()%>Struct();
<%
    	            	for(IMetadataColumn column: metadata.getListColumns()){
    	            		String label = column.getLabel();
	    	            	String value = tableValue.get(label);
	        	            if(value == null || value.length() == 0){ //use the default value
	    	            		String typeToGenerate = JavaTypesManager.getTypeToGenerate(column.getTalendType(), column.isNullable());
	    	            		String defaultValue = JavaTypesManager.getDefaultValueFromJavaType(typeToGenerate, column.getDefault());
%>        	            	
    <%=conn.getName()%>.<%=label %> = <%=defaultValue %>;        	            	
<%
        	            	}else{
%>        	            	
	<%=conn.getName()%>.<%=label %> = <%=value %>;
<%
        	            	}
        	            }
%>
	cacheList_<%=cid %>.add(<%=conn.getName()%>);
<%
    	            }
%>
	for (int i_<%=cid%> = 0 ; i_<%=cid%> < <%=nbRows%> ; i_<%=cid%>++) {
		for(<%=conn.getName()%>Struct tmpRow_<%=cid %> : cacheList_<%=cid %>){
	
			nb_line_<%=cid %> ++;		
			<%=conn.getName()%> = tmpRow_<%=cid %>;
<%
    	        }
    	    }
		}
//********************the new part end*****************************************************
	}
%>