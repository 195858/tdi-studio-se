<%@ jet
imports="
	org.talend.designer.codegen.config.CodeGeneratorArgument
	org.talend.core.model.process.INode
	org.talend.core.model.process.ElementParameterParser
	org.talend.core.model.process.IConnection
	org.talend.core.model.metadata.IMetadataTable
	org.talend.core.model.metadata.types.JavaTypesManager
	org.talend.core.model.metadata.MappingTypeRetriever
	org.talend.core.model.metadata.MetadataTalendType
	org.talend.core.model.process.IConnectionCategory
	java.util.List
	java.util.ArrayList
	java.util.Map
	java.util.HashMap
	"
skeleton="../templates/db_output_bulk.skeleton"
%>
<%@ include file="../templates/DB/Output/HelpClass.javajet"%>
<%
	class DBOutputMainUtil extends DefaultDBOutputUtil{
		public void beforeComponentProcess(INode node){
			super.beforeComponentProcess(node);
		}
		public boolean addBatch(){
			boolean addBatch = rejectConnName == null  && useBatchSize && !("true").equals(useExistingConn);
			return addBatch;
		}
		public void executeBatch(INode node){
			if (addBatch() && executeBatch) {
			%>
				if ( batchSize_<%=cid%> <= batchSizeCounter_<%=cid%>) {
					int[] status_<%=cid%> = null;
					int countSum_<%=cid%> = 0;
					try {
						batchSizeCounter_<%=cid%> = 0;
						<%log4jCodeGenerateUtil.logInfo(node,"debug",cid+" - Executing the "+dataAction+" batch.");%>
						for(int countEach_<%=cid%>: pstmt_<%=cid %>.executeBatch()) {
							countSum_<%=cid%> += (countEach_<%=cid%> < 0 ? 0 : countEach_<%=cid%>);
						}
						<%log4jCodeGenerateUtil.logInfo(node,"debug",cid+" - The "+dataAction+" batch execution has succeeded.");%>
					}catch (java.sql.BatchUpdateException e_<%=cid%>){
						<%if(("true").equals(dieOnError)) {
							log4jCodeGenerateUtil.logError(node,"fatal","e_"+cid);
							%>
							throw(e_<%=cid%>);
						<%
						}else {
							log4jCodeGenerateUtil.logError(node,"error","e_"+cid);
						%>
							for(int countEach_<%=cid%>: e_<%=cid%>.getUpdateCounts()) {
								countSum_<%=cid%> += (countEach_<%=cid%> < 0 ? 0 : countEach_<%=cid%>);
							}
							System.err.println(e_<%=cid%>.getMessage());
						<%
						}
						%>
					}
					try {
						tmp_batchUpdateCount_<%=cid%> = pstmt_<%=cid %>.getUpdateCount();
					}catch (java.sql.SQLException e){
						<%log4jCodeGenerateUtil.logError(node,"warn");%>
					}
					tmp_batchUpdateCount_<%=cid%> = tmp_batchUpdateCount_<%=cid%> > countSum_<%=cid%> ? tmp_batchUpdateCount_<%=cid%> : countSum_<%=cid%>;
					<%if (("INSERT").equals(dataAction)) {
					%>
						insertedCount_<%=cid%> += tmp_batchUpdateCount_<%=cid%>;
					<%
					}else if (("UPDATE").equals(dataAction)) {
					%>
						updatedCount_<%=cid%> += tmp_batchUpdateCount_<%=cid%>;
					<%
					}else if (("DELETE").equals(dataAction)) {
					%>
						deletedCount_<%=cid%> += tmp_batchUpdateCount_<%=cid%>;
					<%
					}%>
				}
			<%
			}
		}
	}
	dbOutputBeginUtil = new DBOutputMainUtil();
%>
<%@ include file="../templates/DB/Output/AbstractDBOutputMain.javajet"%>
