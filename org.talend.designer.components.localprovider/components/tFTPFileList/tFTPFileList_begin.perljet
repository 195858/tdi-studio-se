<%@ jet 
imports="
    org.talend.core.model.process.INode 
    org.talend.core.model.process.ElementParameterParser
    org.talend.core.model.metadata.IMetadataTable
    org.talend.designer.codegen.config.CodeGeneratorArgument
    java.util.List
    java.util.Map
"
%>

<%
CodeGeneratorArgument codeGenArgument = (CodeGeneratorArgument) argument;
INode node = (INode)codeGenArgument.getArgument();
String cid = node.getUniqueName();

String host = ElementParameterParser.getValue(node, "__HOST__");
String port = ElementParameterParser.getValue(node, "__PORT__");
String user = ElementParameterParser.getValue(node, "__USERNAME__");
String pass = ElementParameterParser.getValue(node, "__PASSWORD__");
String mode = ElementParameterParser.getValue(node, "__MODE__");

String remotedir   = ElementParameterParser.getValue(node, "__REMOTEDIR__");

List<Map<String, String>> files =
    (List<Map<String,String>>)ElementParameterParser.getObjectValue(
        node,
        "__FILES__"
    );
%>

use Net::FTP;
use File::Basename;

use talend::filesOp;

my $ftp_<%=cid%> = Net::FTP->new(
    <%=host%>,
    Debug => 0,
    Port  => <%=port%>
)
    or die "Cannot connect to <%= host %> on port <%= port %>: $@";

$ftp_<%=cid%>->login(<%=user%>, <%=pass%>)
    or die "Cannot login ", $ftp_<%=cid%>->message;

<%
if (mode.equals("binary")) {
%>
$ftp_<%=cid%>->binary;
<%
}
%>

my @filenames_<%=cid%> = ();

# keep all "my" variables local to the block, thus we can use several
# tFTP components in the same process
{
    my $remotedir = <%=remotedir%>;
    my @filemasks = (
<%
  for (int i=0; i<files.size(); i++) {
    Map<String, String> line = files.get(i);
%>
        <%= line.get("FILEMASK") %>,
<%
  }
%>
    );
    my $ftp = $ftp_<%=cid%>;

    $ftp->cwd($remotedir)
        or die "Cannot change remote working directory ", $ftp->message;

    foreach my $filemask (@filemasks) {
        my $dir     = dirname($filemask);
        my $pattern = filemaskToRegex(basename($filemask));
    
        $ftp->cwd($dir)
            or die "Cannot change remote working directory to $dir", $ftp->message;
     
        my @raw_filelist = $ftp->ls();

        @filenames_<%=cid%> = grep(
            /$pattern/,
            @raw_filelist
        );
    }
} # block end

foreach my $filename (@filenames_<%=cid%>) {
    my $<%=cid%> = [$filename];
