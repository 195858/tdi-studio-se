<%@ jet 
	package="org.talend.designer.codegen.translators" 
	imports="
		org.talend.core.model.process.INode 
		org.talend.core.model.process.ElementParameterParser 
		org.talend.designer.codegen.config.CodeGeneratorArgument
		
		java.util.List
	" 
	class="DBSQLRowBegin" 
%>

<%
	CodeGeneratorArgument codeGenArgument = (CodeGeneratorArgument) argument;
	INode node = (INode)codeGenArgument.getArgument();
	String cid = node.getUniqueName();
	
	String dbtypeDefinition = ElementParameterParser.getValue(node, "__TYPE__");
    String[] dbtypes = dbtypeDefinition.split(";");
    String javaDbtype   = dbtypes[0];
    String javaDbDriver   = dbtypes[1];
    
	String dbhost = ElementParameterParser.getValue(node, "__HOST__");
	String dbport = ElementParameterParser.getValue(node, "__PORT__");
	String dbname= ElementParameterParser.getValue(node, "__DBNAME__");
	String dbuser= ElementParameterParser.getValue(node, "__USER__");
	String dbpwd= ElementParameterParser.getValue(node, "__PASS__");
	String dbencoding= ElementParameterParser.getValue(node, "__ENCODING__");
	String dbquery= ElementParameterParser.getValue(node, "__QUERY__");    
    	   dbquery = dbquery.replaceAll("\n"," ");
    	   dbquery = dbquery.replaceAll("\r"," ");
%>
java.lang.Class.forName("<%=javaDbDriver %>");
<%
if(javaDbtype.equals("undef")){
%>
String url_<%=cid %> = "jdbc:odbc:"+<%=dbname%>;
<%
}else if(javaDbtype.equals("mssql")){
%>
String url_<%=cid %> = "jdbc:odbc:"+<%=dbname%>;
<%
}else if(javaDbtype.equals("oracle")){
String dbSchema = ElementParameterParser.getValue(node, "__SCHEMA_DB__");
%>
String url_<%=cid %> = "jdbc:oracle:thin:@"+<%=dbhost%>+":"+<%=dbport%>+":"+<%=dbname%>;
<%
}else if(javaDbtype.equals("postgresql")){
%>
String url_<%=cid %> = "jdbc:postgresql://"+<%=dbhost%>+":"+<%=dbport%>+"/"+<%=dbname%>;
<%
}else if(javaDbtype.equals("mysql")){
%>
String url_<%=cid %> = "jdbc:mysql://"+<%=dbhost%>+":"+<%=dbport%>+"/"+<%=dbname%>;
<%
}
%>
String dbUser_<%=cid %> = <%=dbuser%>;
String dbPwd_<%=cid %> = <%=dbpwd%>;

java.sql.Connection conn_<%=cid%> = java.sql.DriverManager.getConnection(url_<%=cid %>,dbUser_<%=cid%>,dbPwd_<%=cid%>);

java.sql.PreparedStatement pstmt_<%=cid %> = conn_<%=cid%>.prepareStatement(<%=dbquery%>);

globalMap.put("<%=cid %>_QUERY",<%=dbquery%>);


