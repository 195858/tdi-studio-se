<%@ jet 
imports="
    org.talend.core.model.process.INode 
    org.talend.core.model.process.ElementParameterParser 
    org.talend.core.model.metadata.IMetadataTable 
    org.talend.core.model.metadata.IMetadataColumn 
    org.talend.core.model.process.IConnection
    org.talend.designer.codegen.config.CodeGeneratorArgument
    org.talend.core.model.process.IConnectionCategory
    java.util.List
    java.util.Map
    org.talend.core.model.utils.TalendTextUtils
" 
class="MomConnection"
%>

<%
	CodeGeneratorArgument codeGenArgument = (CodeGeneratorArgument) argument;
	INode node = (INode)codeGenArgument.getArgument();
	String cid = node.getUniqueName();
	String host=ElementParameterParser.getValue(node, "__SERVERADDRESS__");
	String port=ElementParameterParser.getValue(node, "__SERVERPORT__");
	String to = ElementParameterParser.getValue(node, "__TO__");
	String deliverMode = ElementParameterParser.getValue(node, "__DELIVERY_MODE__");
	
	boolean transacted = "true".equals(ElementParameterParser.getValue(node, "__IS_TRANSACTED__"));
	String acknowledgmentMode = ElementParameterParser.getValue(node, "__ACKNOWLEDGMENT_MODE__");
	
	boolean failover =  ("true").equals(ElementParameterParser.getValue(node, "__FAILOVER__"));
	List<Map<String,String>> servers = (List<Map<String,String>>)ElementParameterParser.getObjectValue(node, "__SERVERS__");

	String dbuser= ElementParameterParser.getValue(node, "__USER__");
	String dbpwd= ElementParameterParser.getValue(node, "__PASS__");
		
	IMetadataTable metadata=null;
	List<IMetadataTable> metadatas = node.getMetadataList();
		if ((metadatas!=null)&&(metadatas.size()>0)) {
			metadata = metadatas.get(0);
		}
%>
	java.util.Hashtable props_<%=cid%>=new java.util.Hashtable();

	/*---------------------------------------1.initial jms connection factry---------------------------------*/ 

			// BS
			String url_<%=cid%> ="";
      <% if(failover) {
				StringBuilder sbServers=new StringBuilder();
				int i=0;
				for(Map<String, String> serversMap : servers) {
					String strHost = TalendTextUtils.removeQuotes(serversMap.get("SERVERS_HOST"));
					String strPort = TalendTextUtils.removeQuotes(serversMap.get("SERVERS_PORT"));
					if(i>0)sbServers.append(",");
					sbServers.append("tcp://");
					sbServers.append(strHost);
					sbServers.append(":");
					sbServers.append(strPort);
					i++;
				}
				%>
				// BS
				url_<%=cid %> = "failover:(<%=sbServers.toString()%>)?randomize=false";
			<% } else { %>
				url_<%=cid %> = "tcp://"+<%=host%>+":"+<%=port%>;
			<% } %>			
			
			System.out.println("Connecting to URL: " + url_<%=cid %>);

			
			org.apache.activemq.ActiveMQConnectionFactory factory_<%=cid %> = 
				new org.apache.activemq.ActiveMQConnectionFactory(url_<%=cid %>);
<%
		
		/*---------------------------------------2.create Queue Or Topic from connection ---------------------------------*/ 
%>	
				
<%		if(dbuser == null || ("\"\"").equals(dbuser) || ("").equals(dbuser)) { %>
			javax.jms.Connection connection_<%=cid %> = factory_<%=cid %>.createConnection();
<%		} else { %>
			javax.jms.Connection connection_<%=cid %> = factory_<%=cid %>.createConnection(<%=dbuser%>,<%=dbpwd%>);
<%		} %>

                connection_<%=cid %>.start();

		globalMap.put("connection_<%=cid%>", connection_<%=cid %>);
		
		javax.jms.Session session_<%=cid %> = connection_<%=cid %>.createSession(<%=transacted%>, javax.jms.Session.<%=acknowledgmentMode%>);
						
