<%@ jet 
	imports="
			org.talend.core.model.process.INode 
			org.talend.core.model.process.ElementParameterParser 
			org.talend.designer.codegen.config.CodeGeneratorArgument
			org.talend.core.model.metadata.types.JavaTypesManager
			org.talend.core.model.process.AbstractExternalNode
			org.talend.designer.xmlmap.XmlMapComponent
			org.talend.designer.xmlmap.model.emf.xmlmap.XmlMapData
			org.eclipse.emf.common.util.EList
			org.talend.designer.xmlmap.model.emf.xmlmap.VarNode
			org.talend.designer.xmlmap.model.emf.xmlmap.VarTable
			org.talend.designer.xmlmap.model.emf.xmlmap.InputXmlTree
			org.talend.designer.xmlmap.model.emf.xmlmap.OutputXmlTree
			org.talend.designer.xmlmap.model.emf.xmlmap.TreeNode
			org.talend.designer.xmlmap.model.emf.xmlmap.OutputTreeNode
			org.talend.core.model.process.IConnection
			org.talend.core.model.process.EConnectionType
			org.talend.core.model.metadata.IMetadataTable
			org.talend.core.model.metadata.IMetadataColumn
            java.util.Map
            java.util.HashMap
            java.util.List
            java.util.ArrayList
            org.talend.core.model.metadata.types.JavaTypesManager
        	org.talend.core.model.metadata.types.JavaType
"
skeleton="tXMLMap_java.skeleton"
%>
<%
	CodeGeneratorArgument codeGenArgument = (CodeGeneratorArgument) argument;
	XmlMapComponent node = (XmlMapComponent) codeGenArgument.getArgument();
	String cid = node.getUniqueName();
	XmlMapData xmlMapData=(XmlMapData)ElementParameterParser.getObjectValueXMLTree(node);
	boolean isXpath = false;	
	boolean isPlainNode = false;
	EList<OutputXmlTree> outputTables = xmlMapData.getOutputTrees();
	EList<VarTable> varTables = xmlMapData.getVarTables();
	EList<InputXmlTree> inputTables = xmlMapData.getInputTrees();
	InputXmlTree mainInputTable = inputTables.get(0);
	for(TreeNode tmpNode : mainInputTable.getNodes()){
		if(!tmpNode.getType().equals("id_Document"))
			isPlainNode = true;
	}

for (OutputXmlTree table : outputTables) {
	
    
    EList<OutputTreeNode> tableEntries = table.getNodes();
    if (tableEntries == null ) {
        continue;
    }
    for(OutputTreeNode tableEntry : tableEntries) {
        	if(!("id_Document").equals(tableEntry.getType())){

        		String resultExpression = tableEntry.getExpression();
        		if(null !=resultExpression && resultExpression.indexOf("/") != -1)
        		   isXpath = true;        	
			}
	}
}
%>


<% if(!isPlainNode){%>
} // for input xml loop 
<%}%>


