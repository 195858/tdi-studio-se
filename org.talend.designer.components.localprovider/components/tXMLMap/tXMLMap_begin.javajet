<%@ jet 
	imports="
			org.talend.core.model.process.INode 
			org.talend.core.model.process.ElementParameterParser 
			org.talend.designer.codegen.config.CodeGeneratorArgument
			org.talend.core.model.metadata.types.JavaTypesManager
			org.talend.core.model.process.AbstractExternalNode
			org.talend.designer.xmlmap.XmlMapComponent
			org.talend.designer.xmlmap.model.emf.xmlmap.XmlMapData
			org.eclipse.emf.common.util.EList
			org.talend.designer.xmlmap.model.emf.xmlmap.VarNode
			org.talend.designer.xmlmap.model.emf.xmlmap.VarTable
	" 
%>
<%
	System.out.println("start");
	System.out.println(argument.getClass());
	CodeGeneratorArgument codeGenArgument = (CodeGeneratorArgument) argument;
	System.out.println("main");
	XmlMapComponent node = (XmlMapComponent) codeGenArgument.getArgument();
	System.out.println("end");
	Object obj=ElementParameterParser.getObjectValueXMLTree(node);
	if(obj==null){
		System.out.println("bad news");
	}
	XmlMapData xmlMapData = node.getEmfMapData();
	%>
<%
	for (VarTable var : xmlMapData.getVarTables()) {
		String tableName = var.getName();
        String instanceVarName = tableName + "__" + node.getUniqueName();
        String className = instanceVarName + "__Struct";
%>
	class <%=className %> {
<%
            for(VarNode varNode : var.getNodes()){
                String javaType = varNode.getType();
%>	<%= JavaTypesManager.getTypeToGenerate(javaType, varNode.isNullable()) %> <%=varNode.getName() %>;
<%
            }
%>
	}
<%
	}
%>