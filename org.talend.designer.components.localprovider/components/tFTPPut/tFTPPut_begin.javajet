<%@ jet 
	imports="
		org.talend.core.model.process.INode 
		org.talend.core.model.process.ElementParameterParser
		org.talend.core.model.metadata.IMetadataTable
		org.talend.designer.codegen.config.CodeGeneratorArgument
		java.util.List
		java.util.Map
	"
%>

<%
	CodeGeneratorArgument codeGenArgument = (CodeGeneratorArgument) argument;
	INode node = (INode)codeGenArgument.getArgument();	
	String host = ElementParameterParser.getValue(node, "__HOST__");
	String port = ElementParameterParser.getValue(node, "__PORT__");
	String user = ElementParameterParser.getValue(node, "__USERNAME__");
	String pass = ElementParameterParser.getValue(node, "__PASSWORD__");
	String remotedir = ElementParameterParser.getValue(node, "__REMOTEDIR__");
    String encoding = ElementParameterParser.getValue(node, "__ENCODING__");
	boolean sftp = ElementParameterParser.getValue(node, "__SFTP__").equals("true");
	List<Map<String, String>> files = (List<Map<String,String>>)ElementParameterParser.getObjectValue(node, "__FILES__");	
	String cid = node.getUniqueName();
	
	if(sftp){
%>	
	class MyUserInfo implements com.jcraft.jsch.UserInfo, com.jcraft.jsch.UIKeyboardInteractive {
        public String getPassphrase() { return null; } 
        
        public String getPassword() { return null; } 
        
        public boolean promptPassword(String arg0) { return true; } 
        
        public boolean promptPassphrase(String arg0) { return true; } 
        
        public boolean promptYesNo(String arg0) { return true; } 
        
        public void showMessage(String arg0) { } 
        
        public String[] promptKeyboardInteractive(String destination, String name, String instruction, String[] prompt,
                boolean[] echo) {
           String[] password<%=cid%> = {<%=pass%>};
           return password<%=cid%>;
        }
    }; 
    
    final com.jcraft.jsch.UserInfo defaultUserInfo<%=cid%> = new MyUserInfo();
    
    
    class MyProgressMonitor implements com.jcraft.jsch.SftpProgressMonitor {

        public void init(int op, String src, String dest, long max) {}
 		
 		public boolean count(long count) { return true;}

        public void end() {}
    }
    
    com.jcraft.jsch.JSch jsch<%=cid%>=new com.jcraft.jsch.JSch(); 
    com.jcraft.jsch.Session session<%=cid%>=jsch<%=cid%>.getSession(<%=user%>, <%=host%>, <%=port%>); 
	session<%=cid%>.setPassword(<%=pass%>); 
    session<%=cid%>.setUserInfo(defaultUserInfo<%=cid%>); 
    session<%=cid%>.connect(); 
    
    com.jcraft.jsch. Channel channel<%=cid%>=session<%=cid%>.openChannel("sftp"); 
    channel<%=cid%>.connect(); 
    com.jcraft.jsch.ChannelSftp c<%=cid%>=(com.jcraft.jsch.ChannelSftp)channel<%=cid%>; 
    c<%=cid%>.setFilenameEncoding(<%=encoding%>);
    
    com.jcraft.jsch.SftpProgressMonitor monitor<%=cid%> = new MyProgressMonitor();
    
    java.util.List<java.util.Map<String,String>> list<%=cid %> = new java.util.ArrayList<java.util.Map<String,String>>();	
<%
    for (int i=0; i<files.size(); i++) {
       Map<String, String> line = files.get(i);
%>    
	java.util.Map<String,String> map<%=cid %><%=i %> = new java.util.HashMap<String,String>();
	map<%=cid %><%=i %>.put(<%= line.get("FILEMASK") %>,"");
 	list<%=cid %>.add(map<%=cid %><%=i %>);       
<%
  }
%>	

<%}else{%>
	com.enterprisedt.net.ftp.FTPClient ftp<%=cid %> = new com.enterprisedt.net.ftp.FTPClient();
	ftp<%=cid %>.setRemoteHost(<%=host %>);
	ftp<%=cid %>.setRemotePort(<%=port %>);
	ftp<%=cid %>.connect();
    ftp<%=cid %>.login(<%=user %>, <%=pass %>);    
	java.util.List<java.util.Map<String,String>> list<%=cid %> = new java.util.ArrayList<java.util.Map<String,String>>();
<%
    for (int i=0; i<files.size(); i++) {
       Map<String, String> line = files.get(i);
%>    
	java.util.Map<String,String> map<%=cid %><%=i %> = new java.util.HashMap<String,String>();
	map<%=cid %><%=i %>.put(<%= line.get("FILEMASK") %>,"");	
	list<%=cid %>.add(map<%=cid %><%=i %>);       
<%
  }
%>	
	String remotedir<%=cid %> = <%=remotedir%>;
	ftp<%=cid %>.chdir(remotedir<%=cid %>);
<%}%>