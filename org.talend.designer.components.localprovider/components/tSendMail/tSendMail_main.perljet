<%@ jet 
	imports="
		org.talend.core.model.process.INode 
		org.talend.core.model.metadata.IMetadataTable 
		org.talend.core.model.process.ElementParameterParser
		org.talend.designer.codegen.config.CodeGeneratorArgument
		java.util.Map
		java.util.List
	"
%>

<%
	CodeGeneratorArgument codeGenArgument = (CodeGeneratorArgument) argument;
	INode node = (INode)codeGenArgument.getArgument();
String cid = node.getUniqueName();
	
%>

<%
String smtpHost    = ElementParameterParser.getValue(node, "__SMTP_HOST__");
String smtpPort    = ElementParameterParser.getValue(node, "__SMTP_PORT__");
String to          = ElementParameterParser.getValue(node, "__TO__");
String from        = ElementParameterParser.getValue(node, "__FROM__");
String cc          = ElementParameterParser.getValue(node, "__CC__");
String bcc         = ElementParameterParser.getValue(node, "__BCC__");
String subject     = ElementParameterParser.getValue(node, "__SUBJECT__");
String message     = ElementParameterParser.getValue(node, "__MESSAGE__");
List<Map<String, String>> tableValues = (List<Map<String,String>>)ElementParameterParser.getObjectValue(node, "__ATTACHMENTS__");

List<Map<String, String>> headers =
    (List<Map<String,String>>)ElementParameterParser.getObjectValue(
        node,
        "__HEADERS__"
    );

boolean needAuth = ElementParameterParser.getValue(
    node,
    "__NEED_AUTH__"
).equals("true");

String authUsername = ElementParameterParser.getValue(
    node,
    "__AUTH_USERNAME__"
);

String authPassword = ElementParameterParser.getValue(
    node,
    "__AUTH_PASSWORD__"
);

%>

use Net::SMTP;
use MIME::Lite;
use File::Basename;

{
    my $msg = MIME::Lite->new(
        From    => <%=from%>,
        To      => <%=to%>,
<%
if( ! cc.equals("") ){
%>
        Cc      => <%= cc %>,
<%
}
if( ! bcc.equals("") ){
%>
        Bcc     => <%= bcc %>,
<%
}
%>
        Subject => <%= subject %>,
        Data    => <%=message %>,
    );

<%
for (int i = 0; i < headers.size(); i++) {
    Map<String, String> header = headers.get(i);
%>
    $msg->add(<%=header.get("KEY")%>, <%=header.get("VALUE")%>);
<%
}
%>

    my @attachments = (
<%
  for (int i=0; i<tableValues.size(); i++) {
    Map<String, String> lineValue = tableValues.get(i);
%>
        <%= lineValue.get("FILE") %>,
<%
  }
%>
    );

    foreach my $path (@attachments) {
        $msg->attach(
            Type     => 'AUTO',
            Encoding => 'base64',
            Path     => $path,
            Filename => basename($path),
        );
    }

    my $smtp = Net::SMTP->new(
        <%=smtpHost%>,
        Port => <%=smtpPort%>,
    )
      or die $!;
<%
  if (needAuth) {
%>
    use Authen::SASL;

    $smtp->auth(<%=authUsername%>, <%=authPassword%>)
      or die "Could not authenticate $!";
<%
  }
%>    
    $smtp->mail(<%=from%>);
    $smtp->to(<%=to%>);
<%
if( ! cc.equals("") ){
%>
    $smtp->cc(<%= cc %>);
<%
}
if( ! bcc.equals("") ){
%>
    $smtp->bcc(<%= bcc %>);
<%
}
%>    
    $smtp->data();
    $smtp->datasend($msg->as_string());
    $smtp->dataend();
    $smtp->quit;
}
