<%@ jet 
	imports="
		org.talend.core.model.process.INode
		org.talend.core.model.process.ElementParameterParser
		org.talend.designer.codegen.config.CodeGeneratorArgument
		java.util.Map
		java.util.List		
	"
%>

<%
	CodeGeneratorArgument codeGenArgument = (CodeGeneratorArgument) argument;
	INode node = (INode)codeGenArgument.getArgument();

	String smtpHost    = ElementParameterParser.getValue(node, "__SMTP_HOST__");
	String smtpPort    = ElementParameterParser.getValue(node, "__SMTP_PORT__");
	String to          = ElementParameterParser.getValue(node, "__TO__");
	String from        = ElementParameterParser.getValue(node, "__FROM__");
	String cc          = ElementParameterParser.getValue(node, "__CC__");
	String bcc          = ElementParameterParser.getValue(node, "__BCC__");
	String subject     = ElementParameterParser.getValue(node, "__SUBJECT__");
	String message     = ElementParameterParser.getValue(node, "__MESSAGE__");
	List<Map<String, String>> tableValues = (List<Map<String,String>>)ElementParameterParser.getObjectValue(node, "__ATTACHMENTS__");
	List<Map<String, String>> headers = (List<Map<String,String>>)ElementParameterParser.getObjectValue(node, "__HEADERS__");
	
	// component id
	String cid = node.getUniqueName();
	to = to.replace(";",",");
%>
	String smtpHost_<%=cid %> = <%=smtpHost %>;
	String smtpPort_<%=cid %> = "<%=smtpPort %>";
	String from_<%=cid %> = <%=from %>;
    String to_<%=cid %> = <%=to %>;
    String cc_<%=cid %> = <%=(cc==null || "".equals(cc))?null:cc.replace(";",",") %>;
    String bcc_<%=cid %> = <%=(bcc==null || "".equals(bcc))?null:bcc.replace(";",",") %>;
    String subject_<%=cid %> = <%=subject %>;
    String message_<%=cid %> = <%=(message==null || "".equals(message))?"\"\"":message %>;
	
	java.util.List<java.util.Map<String, String>> headers_<%=cid %> = new java.util.ArrayList<java.util.Map<String,String>>();
<%
	for (int i = 0; i < headers.size(); i++) {
   		Map<String, String> header = headers.get(i);
%>
	java.util.Map<String,String> headerMap_<%=cid %>_<%=i %> = new java.util.HashMap<String,String>();
	headerMap_<%=cid %>_<%=i %>.put("KEY", <%=header.get("KEY")%>);
	headerMap_<%=cid %>_<%=i %>.put("VALUE", <%=header.get("VALUE")%>);
	headers_<%=cid %>.add(headerMap_<%=cid %>_<%=i %>);	
<%
}
%>
 
	java.util.List<String> attachments_<%=cid %> = new java.util.ArrayList<String>();
<%
	for (int i = 0; i < tableValues.size(); i++) {
    	Map<String,String> attachment = tableValues.get(i);
%>
	attachments_<%=cid %>.add(<%=attachment.get("FILE") %>);	
<%
}
%> 