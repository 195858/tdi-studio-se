<%@ jet 
	imports="
		org.talend.core.model.process.INode 
		org.talend.designer.codegen.config.CodeGeneratorArgument
		org.talend.core.model.process.ElementParameterParser
	" 
%>

	<%

	CodeGeneratorArgument codeGenArgument = (CodeGeneratorArgument) argument;
	INode node = (INode)codeGenArgument.getArgument();
        boolean isUseConnection = ("true").equals(ElementParameterParser.getValue(node, "__USE_CONNECTION__"));
	String cid = node.getUniqueName();
	cid = cid.replaceAll("_Loop", "");
	String serverType=ElementParameterParser.getValue(node, "__SERVER__");
	String useMsgId=ElementParameterParser.getValue(node, "__IS_USE_MESSAGE_ID__");
	String kListen=ElementParameterParser.getValue(node, "__KEEPLISTENING__");
	String timeOut=ElementParameterParser.getValue(node, "__TIMEOUT__");
	String acknowledgmentMode = ElementParameterParser.getValue(node, "__ACKNOWLEDGMENT_MODE__");
	String msgBobyType =  ElementParameterParser.getValue(node, "__MESSAGE_BODY_TYPE__");
	boolean transacted = "true".equals(ElementParameterParser.getValue(node, "__IS_TRANSACTED__"));	
        String connectionComponentName = ElementParameterParser.getValue(node, "__CONNECTION__");

        boolean isCommitRollback = (!node.getProcess().getNodesOfType("tMomCommit").isEmpty()
	|| !node.getProcess().getNodesOfType("tMomRollback").isEmpty());
 

        if (isUseConnection) {
		for (INode pNode : node.getProcess().getNodesOfType("tMomConnection")) {
			if (pNode.getUniqueName().equals(connectionComponentName)) {
				transacted = "true".equals(ElementParameterParser.getValue(pNode, "__IS_TRANSACTED__")); 
			}	
		}
	}

	if (("JBoss").equals(serverType) || ("ActiveMQ").equals(serverType) || isUseConnection) {
		if ("CLIENT_ACKNOWLEDGE".equals(acknowledgmentMode)) {
		%>
			message_<%=cid%>.acknowledge();
		
		<%	
		}
		if(("true").equals(useMsgId) && !"Map".equals(msgBobyType)){
		%>
				}
			}
		<%
		}
		if(("JBoss").equals(serverType)){
			if("true".equals(kListen)){
			%>
				Thread.sleep(<%=timeOut%>*1000);
			<%		
			}else{
			%>
				break;
			<%			
			}
		}else if(("ActiveMQ").equals(serverType) || isUseConnection) {
			if (("true").equals(ElementParameterParser.getValue(node,"__USEMAX__"))) {
			%>
				}
			<%
			}
		}
		%>
		
		}

		<%	
		if( ("JBoss").equals(serverType) || ( ("ActiveMQ").equals(serverType) && !isCommitRollback) ){
		%>
 		System.out.println("Closing connection");
		<%	// if no commmit or rollback component exists and set transacted - commit session
		if(transacted){
		%>
		session_<%=cid%>.commit();
		<%	
		}
		%> // if no commmit or rollback component exists - close session
                consumer_<%=cid %>.close();
                session_<%=cid %>.close();
                connection_<%=cid %>.close();
		<%	
		}
		%>
		<%if(("ActiveMQ").equals(serverType) && !isCommitRollback && transacted){%>
		}catch(Exception ex){
			System.out.println("A Active MQ error occurred :" + ex);
	                ex.printStackTrace();
			session_<%=cid%>.rollback();
                        consumer_<%=cid %>.close();
                        session_<%=cid %>.close();
                        connection_<%=cid %>.close();
		}
		<%
		}
		%>
	<%		
	}else{
		boolean isCommit = ("true").equals(ElementParameterParser.getValue(node, "__COMMIT__"));
		boolean isBrowse = ("true").equals(ElementParameterParser.getValue(node,"__BROWSE__"));
		boolean isRollback = ("true").equals(ElementParameterParser.getValue(node, "__ROLLBACK__"));
		isRollback = isRollback && ("false".equals(kListen)) && !isCommit && !isBrowse;
		%>
		
			}	
			System.out.println("Closing connection");
			remoteQ<%=cid%>.close();
			<%
			if(isRollback){
			%>
				qMgr<%=cid%>.backout();
			<%
			}
			%>
			qMgr<%=cid%>.disconnect();
		
		}catch(com.ibm.mq.MQException ex){
			System.out.println("A WebSphere MQ error occurred : Completion code " + ex.completionCode + " Reason code " + ex.reasonCode);
			remoteQ<%=cid%>.close();
		}
	<%
	}
	%>
