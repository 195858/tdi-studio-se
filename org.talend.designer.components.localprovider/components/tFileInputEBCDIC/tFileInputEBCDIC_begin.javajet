<%@ jet 
	imports="
        java.util.List
        java.util.Map
        
        org.talend.core.model.metadata.IMetadataColumn
        org.talend.core.model.metadata.IMetadataTable
        org.talend.core.model.metadata.types.JavaType
        org.talend.core.model.metadata.types.JavaTypesManager
        org.talend.core.model.process.ElementParameterParser
        org.talend.core.model.process.IConnection
        org.talend.core.model.process.IConnectionCategory
        org.talend.core.model.process.INode
        org.talend.designer.codegen.config.CodeGeneratorArgument
	" 
%>
<% 
    CodeGeneratorArgument codeGenArgument = (CodeGeneratorArgument) argument;
	INode node = (INode)codeGenArgument.getArgument();
    String cid = node.getUniqueName();
    
	String filename = ElementParameterParser.getValue(node,"__FILENAME__");
	String copybook = ElementParameterParser.getValue(node,"__COPYBOOK__");
%>

	// open file
	javax.xml.bind.JAXBContext jaxbContext_<%=cid %> = javax.xml.bind.JAXBContext.newInstance("net.sf.cobol2j");
	javax.xml.bind.Unmarshaller unmarshaller_<%=cid %> = jaxbContext_<%=cid %>.createUnmarshaller();
	Object o_<%=cid %> = unmarshaller_<%=cid %>.unmarshal(new java.io.FileInputStream(<%= copybook %>));
	net.sf.cobol2j.FileFormat fF_<%=cid %> = (net.sf.cobol2j.FileFormat) o_<%=cid %>;
	net.sf.cobol2j.RecordSet rset_<%=cid %> = new net.sf.cobol2j.RecordSet(new java.io.FileInputStream(<%= filename %>), fF_<%=cid %>);
	java.util.Map recdefs_<%=cid %> = new net.sf.cobol2j.RecordsMap(fF_<%=cid %>);
	
	// read every record, for each record split into column definition
	List inrecord_<%=cid %>;
	while (rset_<%=cid %>.hasNext()){
		inrecord_<%=cid %> = rset_<%=cid %>.next();
		{
			
<%			List< ? extends IConnection> conns = node.getOutgoingSortedConnections();

    		if (conns!=null && conns.size()>0) {
				for (int i=0;i<conns.size();i++) {
					IConnection connTemp = conns.get(i);
					if (connTemp.getLineStyle().hasConnectionCategory(IConnectionCategory.DATA)) {
%>
					<%=connTemp.getName() %> = null;			
<%
					}
				}
    		}
    		
List<Map<String, String>> schemas = (List<Map<String,String>>)ElementParameterParser.getObjectValue(node, "__SCHEMAS__");

for(Map<String, String> schemaMap : schemas) {//------AAA
	String schemaName = schemaMap.get("SCHEMA");
	String code = schemaMap.get("CODE");
	
	IConnection justConn = null; //------->get the right output connection--->to get the columns info
	if(conns != null && conns.size() > 0){
		for(IConnection conn : conns){
			if (conn.getLineStyle().hasConnectionCategory(IConnectionCategory.DATA)) {
				if(schemaName.equals(conn.getMetadataTable().getLabel())){
					justConn = conn;
					break;
				}
			}
		}
	}

if(justConn != null){//------BBB
	
	IMetadataTable justMetadata = justConn.getMetadataTable();
	List<IMetadataColumn> justColumnList = justMetadata.getListColumns();
%>
	if(inrecord_<%=cid %>.get(0).equals("<%=code %>") || recdefs_<%=cid %>.size() == 1 ){
	
		<%=justConn.getName() %> = new <%=justConn.getName() %>Struct();
<%		
		int sizeListColumns = justColumnList.size();
		for (int valueN=0; valueN<sizeListColumns; valueN++) {
			IMetadataColumn column = justColumnList.get(valueN);
			JavaType javaType = JavaTypesManager.getJavaTypeFromId(column.getTalendType());
%>				
		<%=justConn.getName() %>.<%=column.getLabel()%> = (<%=javaType.getLabel() %>)inrecord_<%=cid %>.get(<%=valueN%>);
<%
		}
%>	
	}	
<%
	}//------BBB
}//------AAA
%>