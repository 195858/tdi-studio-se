<%@ jet 
	package="org.talend.designer.codegen.translators" 
	imports="
		org.talend.core.model.process.INode
		org.talend.designer.codegen.config.CodeGeneratorArgument
		org.talend.core.model.process.ElementParameterParser
		java.util.List
		java.util.Map"
	class="FileCopyMain" 
%>	
<%
	CodeGeneratorArgument codeGenArgument = (CodeGeneratorArgument) argument;
	INode node = (INode)codeGenArgument.getArgument();
	String cid = node.getUniqueName();
	String FileName = ElementParameterParser.getValue(node, "__FILENAME__");	
	String destrination  = ElementParameterParser.getValue(node, "__DESTINATION__");
	boolean reFile=ElementParameterParser.getValue(node, "__REMOVE_FILE__").equals("true");
	boolean rpFile=ElementParameterParser.getValue(node,"__REPLACE_FILE__").equals("true");
%>     
        String sfileName_<%=cid %> = <%=FileName %>;
        String directory_<%=cid %> = <%=destrination %>; 
        java.io.File sfile_<%=cid %> = new java.io.File(sfileName_<%=cid %>);
        
        boolean isRemoveOriFile_<%=cid%> = <%=reFile%>;
        boolean isRepalceFile_<%=cid%>=<%=rpFile%>;
        
        if(!directory_<%=cid %>.endsWith("/")){
           directory_<%=cid %> = directory_<%=cid %> + "/";
        }
        String dfileName_<%=cid%>=directory_<%=cid%>+sfile_<%=cid%>.getName();
        java.io.File tFile_<%=cid%>=new java.io.File(dfileName_<%=cid%>);
        if(tFile_<%=cid%>.exists()&& !isRepalceFile_<%=cid%>)
        {
        	System.err.println("The file is exist,can not copy!");
        }else
        {
            java.io.BufferedInputStream in_<%=cid %> = new java.io.BufferedInputStream(new java.io.FileInputStream(sfile_<%=cid %>));
            java.io.BufferedOutputStream out_<%=cid %> = new java.io.BufferedOutputStream(new java.io.FileOutputStream(tFile_<%=cid%>));
            byte[] buf_<%=cid %>=new byte[1024];
            int readLen_<%=cid %>;
            if(!sfileName_<%=cid %>.equals(dfileName_<%=cid%>))
            {
            	
                while ((readLen_<%=cid %> = in_<%=cid %>.read(buf_<%=cid %>,0,1024)) != -1)
                       out_<%=cid %>.write(buf_<%=cid %>, 0, readLen_<%=cid %>);   
            }  
             if(in_<%=cid %> != null){
                   in_<%=cid %>.close(); 
                }     
            if(out_<%=cid %> != null){
                    out_<%=cid %>.close();
                }
           if(isRemoveOriFile_<%=cid%> &&!sfileName_<%=cid %>.equals(dfileName_<%=cid%>))
                {
                	sfile_<%=cid %>.delete();
                }
       	 }
        

      
