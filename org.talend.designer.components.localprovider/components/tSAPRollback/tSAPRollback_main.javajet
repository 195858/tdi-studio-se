<%@ jet 
imports="
    org.talend.core.model.process.INode 
    org.talend.core.model.process.ElementParameterParser 
    org.talend.designer.codegen.config.CodeGeneratorArgument
    java.util.List
" 
%>

<%
    CodeGeneratorArgument codeGenArgument = (CodeGeneratorArgument) argument;
    INode node = (INode)codeGenArgument.getArgument();

    String cid = node.getUniqueName();

    String connection = ElementParameterParser.getValue(node, "__CONNECTION__");

    boolean close = ("true").equals(ElementParameterParser.getValue(node,"__CLOSE__"));
	
    String conn = "conn_" + connection;
    
    String VERSION_SAP2 = "sapjco.jar";
    String VERSION_SAP3 = "sapjco3.jar";
    
    String version = VERSION_SAP2;
    List<? extends INode> nodes = node.getProcess().getGeneratingNodes();
    for(INode targetNode : nodes){
    	if (targetNode.getUniqueName().equals(connection)) {
	      version = ElementParameterParser.getValue(targetNode, "__DB_VERSION__");
	    }
    }
    
%>
<%if(VERSION_SAP2.equals(version)){%>
	com.sap.mw.jco.JCO.Client client_<%=cid %> = (com.sap.mw.jco.JCO.Client)globalMap.get("<%=conn%>");	
	
	if(client_<%=cid %> != null)
	{
		com.sap.mw.jco.IRepository repository_<%=cid %> = com.sap.mw.jco.JCO.createRepository("REPOSITORY", client_<%=cid %>);
	
		com.sap.mw.jco.IFunctionTemplate functionTemplate_<%=cid %> = repository_<%=cid %>.getFunctionTemplate("BAPI_TRANSACTION_ROLLBACK");
	
	    com.sap.mw.jco.JCO.Function function_<%=cid %> = functionTemplate_<%=cid %>.getFunction();
	    
		try{
			client_<%=cid %>.execute(function_<%=cid %>);
	    }catch (java.lang.Exception e_<%=cid%>) {
			com.sap.mw.jco.JCO.releaseClient(client_<%=cid %>);
		    throw new RuntimeException(e_<%=cid%>.getMessage());
		}	
<%}else if(VERSION_SAP3.equals(version)){%>
	com.sap.conn.jco.JCoDestination dest_<%=cid%> = (com.sap.conn.jco.JCoDestination)globalMap.get("<%=conn%>");
	if(dest_<%=cid%> != null)
	{
		com.sap.conn.jco.JCoRepository repository_<%=cid %> = dest_<%=cid%>.getRepository();
		
		com.sap.conn.jco.JCoFunctionTemplate functionTemplate_<%=cid %> = repository_<%=cid %>.getFunctionTemplate("BAPI_TRANSACTION_COMMIT");
		
		com.sap.conn.jco.JCoFunction function_<%=cid %> = functionTemplate_<%=cid %>.getFunction();
		
		try{
			function_<%=cid %>.execute(dest_<%=cid%>);
		}catch (java.lang.Exception e_<%=cid%>) {
			com.sap.conn.jco.JCoContext.end(dest_<%=cid%>);
		    throw new RuntimeException(e_<%=cid%>.getMessage());
		}
<%}%>
		<%if(close){%>
			<%if(VERSION_SAP2.equals(version)){%>
		    	com.sap.mw.jco.JCO.releaseClient(client_<%=cid %>);
		    <%}else if(VERSION_SAP3.equals(version)){%>
				com.sap.conn.jco.JCoContext.end(dest_<%=cid%>);
			<%}%>
		<%}%>
	}

