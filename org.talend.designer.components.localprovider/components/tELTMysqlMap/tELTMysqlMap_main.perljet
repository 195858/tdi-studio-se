<%@ jet 
	imports="
	
	org.talend.designer.codegen.config.CodeGeneratorArgument
	
    java.util.List
	org.talend.core.model.process.AbstractExternalNode
	org.talend.core.model.process.IConnection
	org.talend.core.model.process.IExternalNode
	org.talend.designer.dbmap.MapperMain
	org.talend.designer.dbmap.external.data.ExternalDbMapData
	org.talend.designer.dbmap.external.data.ExternalDbMapTable
	org.talend.designer.dbmap.language.IDbLanguage
	org.talend.designer.dbmap.DbMapComponent

	java.util.HashMap
	java.util.Map

	" 
%>
<%


	CodeGeneratorArgument codeGenArgument = (CodeGeneratorArgument) argument;
	DbMapComponent node = (DbMapComponent) codeGenArgument.getArgument();

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	
        org.talend.designer.dbmap.language.mysql.MysqlGenerationManager gm = new org.talend.designer.dbmap.language.mysql.MysqlGenerationManager();
        String uniqueNameComponent = null;
        IDbLanguage currentLanguage = gm.getLanguage();

        List<IConnection> connections = (List<IConnection>) node.getIncomingConnections();
        List<IConnection> outputConnections = (List<IConnection>) node.getOutgoingConnections();
        ExternalDbMapData data = (ExternalDbMapData) node.getExternalData();
        uniqueNameComponent = node.getUniqueName();

        List<ExternalDbMapTable> outputTables = data.getOutputTables();

        Map<String, IConnection> nameToOutputConnection = new HashMap<String, IConnection>();
        for (IConnection connection : outputConnections) {
            nameToOutputConnection.put(connection.getUniqueName(), connection);
        }

        int lstOutputTablesSize = outputTables.size();
        for (int i = 0; i < lstOutputTablesSize; i++) {
            ExternalDbMapTable outputTable = outputTables.get(i);
            String outputTableName = outputTable.getName();

				IConnection connection = nameToOutputConnection.get(outputTableName);

            if (connection == null) {
            	continue;
            }

            String sqlQuery = gm.buildSqlSelect((DbMapComponent) node, outputTable.getName());
            
%>

$_globals{<%=uniqueNameComponent %>}{QUERY}{<%= connection.getUniqueName() %>} = 
"<%= sqlQuery %>"
;
$branch_<%= outputTable.getTableName() %>_is_active = true;


<%
        }

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
%>
	
