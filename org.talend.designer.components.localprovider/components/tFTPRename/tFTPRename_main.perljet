<%@ jet 
imports="
    org.talend.core.model.process.INode 
    org.talend.core.model.metadata.IMetadataTable 
    org.talend.core.model.process.ElementParameterParser
    org.talend.designer.codegen.config.CodeGeneratorArgument
    java.util.List
    java.util.Map
"
%>

<%
CodeGeneratorArgument codeGenArgument = (CodeGeneratorArgument) argument;
INode node = (INode)codeGenArgument.getArgument();
String cid = node.getUniqueName();
%>

<%
String localdir    = ElementParameterParser.getValue(node, "__LOCALDIR__");
String remotedir   = ElementParameterParser.getValue(node, "__REMOTEDIR__");

List<Map<String, String>> files =
    (List<Map<String,String>>)ElementParameterParser.getObjectValue(
        node,
        "__FILES__"
    );
%>

# keep all "my" variables local to the block, thus we can use several
# tFTP components in the same process
{
    my $localdir  = <%=localdir%>;
    my $remotedir = <%=remotedir%>;
    my @files = (
<%
  for (int i=0; i<files.size(); i++) {
    Map<String, String> line = files.get(i);
%>
        {
            filemask => <%= line.get("FILEMASK") %>,
            newname  => <%= line.get("NEWNAME") %>,
        },
<%
  }
%>
    );
    my $ftp = $ftp_<%=cid%>;

    chdir($localdir)
        or die "Cannot change local working directory to $localdir ", $@;

    $ftp->cwd($remotedir)
        or die "Cannot change remote working directory ", $ftp->message;

    foreach my $file (@files) {
        my $oldname = $file->{filemask};
        my $newname = $file->{newname};

        $ftp->rename($oldname, $newname)
            or die 'Cannot rename file ', $ftp->message;
    }
} # block end
