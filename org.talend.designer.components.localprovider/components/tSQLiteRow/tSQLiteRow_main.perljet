<%@ jet 
imports="
    org.talend.core.model.process.INode 
    org.talend.core.model.metadata.IMetadataTable 
    org.talend.core.model.metadata.IMetadataColumn
    org.talend.core.model.process.IConnection
    org.talend.core.model.process.ElementParameterParser
    org.talend.designer.codegen.config.CodeGeneratorArgument
    java.util.List
    java.util.Map
    java.util.HashMap
"
%>

<%
CodeGeneratorArgument codeGenArgument = (CodeGeneratorArgument) argument;
INode node = (INode)codeGenArgument.getArgument();
String cid = node.getUniqueName();
	
List<IMetadataTable> metadatas = node.getMetadataList();
if ((metadatas!=null)&&(metadatas.size()>0)) {
    IMetadataTable metadata = metadatas.get(0);
    if (metadata!=null) {
        String query = ElementParameterParser.getValue(node, "__QUERY__");
        String preparedStatement = ElementParameterParser.getValue(node, "__PREPARED_STATEMENT__");
         String commitEvery = ElementParameterParser.getValue(
            node,
            "__COMMIT_EVERY__"
        );
        String dieOnError = ElementParameterParser.getValue(
            node,
            "__DIE_ON_ERROR__"
        );

        List<Map<String, String>> statementParams =
            (List<Map<String,String>>)ElementParameterParser.getObjectValue(
                node,
                "__STATEMENT_PARAMS__"
            );

        StringBuffer paramValues = new StringBuffer();
%>


<%
if(preparedStatement.equals("false")){
%>
    my $sth_<%=cid %> = $dbh_<%=cid %>->prepare(
        <%=query %>
    )
    <%
            if (dieOnError.equals("true")) {
    %>
        or die '[<%=cid%>] cannot prepare query '.$DBI::errstr;
    <%
            }
    %>

;
<%
}
else {
    Map<String, Integer> indexOfColumns = new HashMap() ;
    int indx = 0 ;
    for (IMetadataColumn column: metadata.getListColumns()) {
        indexOfColumns.put(column.getLabel(), indx );
        indx++;
    }

    paramValues.append("( ");
    for(int i=0; i<statementParams.size(); i++) {
        Map<String, String> statementParam = statementParams.get(i);
        paramValues.append("$");
        paramValues.append(cid);
        paramValues.append("->[");
        paramValues.append(indexOfColumns.get(statementParam.get("INPUT_COLUMN")));
        paramValues.append("],");
    }
    paramValues.append(" )");
}
%>

$sth_<%=cid %>->execute(<%=paramValues %>)
<%
        if (dieOnError.equals("true")) {
%>
    or die '[<%=cid%>] cannot execute query '.$DBI::errstr;
<%
   }
%> ;

if ($_context{StoreSQLQuery}) {
    $_globals{<%=cid %>}{QUERY} = <%=query%>;
}

if (++$nb_line_current_commit_<%=cid%> >= <%=commitEvery %>) {
    $nb_line_current_commit_<%=cid%> = 0;
    $dbh_<%=cid %>->commit;
}


<%
    }
}
%>
