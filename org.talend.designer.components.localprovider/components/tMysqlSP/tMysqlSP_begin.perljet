<%@ jet 
imports="
    org.talend.core.model.process.INode 
    org.talend.core.model.process.ElementParameterParser 
    org.talend.core.model.metadata.IMetadataTable 
    org.talend.core.model.metadata.IMetadataColumn
    org.talend.designer.codegen.config.CodeGeneratorArgument
    java.util.List
    java.util.ArrayList
    java.util.Map
    org.talend.commons.utils.StringUtils
" 
%>

<%
CodeGeneratorArgument codeGenArgument = (CodeGeneratorArgument) argument;
INode node = (INode)codeGenArgument.getArgument();
String cid = node.getUniqueName();

String dbhost = ElementParameterParser.getValue(node, "__HOST__");
String dbport = ElementParameterParser.getValue(node, "__PORT__");
String dbname = ElementParameterParser.getValue(node, "__DBNAME__");
String dbuser = ElementParameterParser.getValue(node, "__USER__");
String dbpass = ElementParameterParser.getValue(node, "__PASS__");

String spName = ElementParameterParser.getValue(node, "__SP_NAME__");

List<Map<String, String>> spArgs =
    (List<Map<String,String>>)ElementParameterParser.getObjectValue(
        node,
        "__SP_ARGS__"
);


String encoding = ElementParameterParser.getValue(
    node,
    "__ENCODING__"
);

String useExistingConnection = ElementParameterParser.getValue(
    node,
    "__USE_EXISTING_CONNECTION__"
);

String connection = ElementParameterParser.getValue(
    node,
    "__CONNECTION__"
);

String dbh = "dbh_";
if (useExistingConnection.equals("true")) {
    dbh+= connection;
}
else {
    dbh+= cid;
}
%>

use DBI;

my $sth_<%=cid %>;
my $query;

<%
if (useExistingConnection.equals("false")) {
%>
my $<%=dbh%> = DBI->connect(
    sprintf(
        'DBI:mysql:database=%s;host=%s;port=%s',
        <%=dbname %>,
        <%=dbhost %>,
        <%=dbport %>,
    ),
    <%=dbuser %>,
    <%=dbpass %>,
    {
        AutoCommit => 0,
    }
)
    or die "can't connect to database";

if (<%=encoding%> =~ m/utf-?8/) {
    my $query = '
set names "UTF8"
';
    $sth_<%=cid %> = $<%=dbh%>->prepare($query);
    $sth_<%=cid %>->execute();
    $sth_<%=cid %>->finish();
}
<%
}
%>

$query = 'CALL '.<%=spName%>.'(';
<%
List setVars = new ArrayList();

boolean isFirstArg = true;
for (Map<String, String> spArg : spArgs) {
    String name = spArg.get("COLUMN");
    String type = spArg.get("TYPE");

    String output = "";

    if (isFirstArg) {
        isFirstArg = false;
    }
    else {
        output = ",";
    }

    if (type.equals("IN")) {
        output += "?";
    }

    if (type.equals("INOUT") || type.equals("OUT")) {
        output += "@" + name;
    }

    if (type.equals("INOUT")) {
        setVars.add("@" + name + " = ?");
    }
%>
$query.= '<%=output%>';
<%
}
%>
$query.= ')';

my $sth_<%=cid %> = $<%=dbh%>->prepare($query);

<%
if (setVars.size() > 0) {
    String setVarsString = StringUtils.join(
        setVars.toArray(),
        ", "
        );
%>
# <%=setVarsString%>
$query = 'SET <%=setVarsString%>';
my $sth_set_<%=cid%> = $<%=dbh%>->prepare($query);
<%
}
%>
