<%@ jet 
imports="
    org.talend.core.model.process.INode 
    org.talend.core.model.process.ElementParameterParser
    org.talend.core.model.metadata.IMetadataTable
    org.talend.core.model.metadata.IMetadataColumn
    org.talend.designer.codegen.config.CodeGeneratorArgument
    java.util.List
    java.util.Map
"
%>

<%
CodeGeneratorArgument codeGenArgument = (CodeGeneratorArgument) argument;
INode node = (INode)codeGenArgument.getArgument();
String cid = node.getUniqueName();

List<IMetadataTable> metadatas = node.getMetadataList();
if ((metadatas!=null)&&(metadatas.size()>0)) {
    IMetadataTable metadata = metadatas.get(0);
    if (metadata!=null) {
        List<Map<String, String>> lengths =
            (List<Map<String,String>>)ElementParameterParser.getObjectValue(
                node,
                "__LENGTHS__"
            );

        String useFixedLength = ElementParameterParser.getValue(
            node,
            "__USE_FIXED_LENGTH__"
        );

        String tablePrint = ElementParameterParser.getValue(
            node,
            "__TABLE_PRINT__"
        );

        String encoding = ElementParameterParser.getValue(
            node,
            "__ENCODING__"
        );
%>

my %desc_<%=cid %> = (
    schema        => [
<%
        int i = 0;
        for (IMetadataColumn column: metadata.getListColumns()) {
%>
        {
            name    => '<%=column.getLabel() %>',
<%
        if (useFixedLength.equals("true")) {
%>
            printLength => <%=lengths.get(i++).get("LENGTH") %>,
<%
        }
%>
        },
<%
        }
%>
    ],
);

my @colnames_<%=cid%> = map {$_->{name}} @{ $desc_<%=cid%>{schema} };
my @collengths_<%=cid%> = map {$_->{printLength}} @{ $desc_<%=cid%>{schema} };

<%
        if (!encoding.equals("")) {
%>
binmode(STDOUT, ':encoding('.<%=encoding%>.')');
<%
        }
%>

<%
        if (tablePrint.equals("true")) {
%>
use Text::ASCIITable;

my $table_<%=cid%> = Text::ASCIITable->new({headingText => '<%=cid%>'});
$table_<%=cid%>->setCols(@colnames_<%=cid%>);
<%
        }
    }
}
%>
