<%@ jet 
package="org.talend.designer.codegen.translators" 
imports="
    org.talend.core.model.process.INode 
    org.talend.core.model.process.ElementParameterParser
    org.talend.core.model.metadata.IMetadataTable
    org.talend.core.model.metadata.IMetadataColumn
    org.talend.designer.codegen.config.CodeGeneratorArgument
    java.util.List
    java.util.Map
"
class="SSHBegin"
%>

<%
CodeGeneratorArgument codeGenArgument = (CodeGeneratorArgument) argument;
INode node = (INode)codeGenArgument.getArgument();
boolean stats = codeGenArgument.isStatistics();

List<IMetadataTable> metadatas = node.getMetadataList();
if ((metadatas!=null)&&(metadatas.size()>0)) {
    IMetadataTable metadata = metadatas.get(0);
    if (metadata!=null) {
        String cid = metadata.getTableName();

        String host = ElementParameterParser.getValue(
            node,
            "__HOST__"
        );

        String port = ElementParameterParser.getValue(
            node,
            "__PORT__"
        );

        String user = ElementParameterParser.getValue(
            node,
            "__USER__"
        );

        String authMethod = ElementParameterParser.getValue(
            node,
            "__AUTH_METHOD__"
        );

        String privatekey = ElementParameterParser.getValue(
            node,
            "__PRIVATEKEY__"
        );

        String password = ElementParameterParser.getValue(
            node,
            "__PASSWORD__"
        );
%>
my $ssh_<%=cid%>;

if ($^O =~ m/win/i) {
    require Net::SSH::W32Perl;

    $ssh_<%=cid%> = Net::SSH::W32Perl->new(
        <%=host%>,
        {
            port => <%=port%>,
<%
        if (authMethod.equals("PUBLICKEY")) {
%>
            identity_files => [<%=privatekey%>],
<%
        }
%>
        }
    )
      or die "failed to connect to <%=host%>";
}
else {
    require Net::SSH::Perl;

    $ssh_<%=cid%> = Net::SSH::Perl->new(
        <%=host%>,
        {
            port => <%=port%>,
<%
        if (authMethod.equals("PUBLICKEY")) {
%>
            identity_files => [<%=privatekey%>],
<%
        }
%>
        }
    )
      or die "failed to connect to <%=host%>";
}

$ssh_<%=cid%>->login(
    <%=user%>,
<%
        if (authMethod.equals("PASSWORD")) {
%>
    <%=password%>
<%
        }
%>
)
    or die 'failed to login';
<%
    }
}
%>
