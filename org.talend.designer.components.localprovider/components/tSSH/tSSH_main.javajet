<%@ jet
imports="
    org.talend.core.model.process.INode 
    org.talend.core.model.process.ElementParameterParser
    org.talend.core.model.metadata.IMetadataTable 
    org.talend.designer.codegen.config.CodeGeneratorArgument
    org.talend.core.model.metadata.IMetadataColumn 
    org.talend.core.model.process.IConnection
    org.talend.core.model.process.EConnectionType
    java.util.List
	java.util.Map
	java.lang.StringBuilder
"
%>

<%
CodeGeneratorArgument codeGenArgument = (CodeGeneratorArgument) argument;
INode node = (INode)codeGenArgument.getArgument();
boolean stats = codeGenArgument.isStatistics();
String standardOutput = ElementParameterParser.getValue(node, "__STANDARDOUTPUT__");
String errorOutput = ElementParameterParser.getValue(node, "__ERROROUTPUT__");
List<IMetadataTable> metadatas = node.getMetadataList();
String cid = node.getUniqueName();
if ((metadatas!=null)&&(metadatas.size()>0)) {
    IMetadataTable metadata = metadatas.get(0);
    if (metadata!=null) {
        List<IMetadataColumn> columns = metadata.getListColumns();
        List<? extends IConnection> conns = node.getOutgoingConnections(EConnectionType.FLOW_MAIN);
       	String commandSeparator = ElementParameterParser.getValue(node,"__COMMANDSEPARATOR__");
        List<Map<String, String>> commands =(List<Map<String,String>>)ElementParameterParser.getObjectValue(node,"__COMMANDS__");
        if(commands.size() > 0){
%>
        	StringBuilder command_<%=cid %> = new StringBuilder();
<%  
			for(java.util.Map<String, String> map : commands){
%>
                if(command_<%=cid %>.length() > 0){
                	command_<%=cid %>.append(<%=commandSeparator%>);
                }
                <%String cmd = map.get("COMMAND");%>
       		    command_<%=cid %>.append(<%=cmd %>);
<% 
			}
        }
%>
		/* Create a session */
 		ch.ethz.ssh2.Session sess_<%=cid%> = conn_<%=cid%>.openSession();
		sess_<%=cid%>.execCommand((command_<%=cid %>).toString());
		
		java.io.InputStream stdout_<%=cid%> = sess_<%=cid%>.getStdout();
		java.io.BufferedReader brout_<%=cid%>= new java.io.BufferedReader(new java.io.InputStreamReader(stdout_<%=cid%>));
        String line_<%=cid%> = "";
        StringBuilder stringStdout_<%=cid%> =new StringBuilder();

        if((line_<%=cid%> = brout_<%=cid%>.readLine()) != null){
            stringStdout_<%=cid%>.append(line_<%=cid%>);
        }
		while((line_<%=cid%> = brout_<%=cid%>.readLine()) != null){
			stringStdout_<%=cid%>.append("\n"+line_<%=cid%>);
		}
		
	    brout_<%=cid%>.close();
		stdout_<%=cid%>.close();
		
		java.io.InputStream stderr_<%=cid%> = sess_<%=cid%>.getStderr();
        java.io.BufferedReader breer_<%=cid%>= new java.io.BufferedReader(new java.io.InputStreamReader(stderr_<%=cid%>));
        String line1_<%=cid%> = "";
        StringBuilder stringStderr_<%=cid%> =new StringBuilder();

        if((line1_<%=cid%> = breer_<%=cid%>.readLine()) != null){
        	stringStderr_<%=cid%>.append(line1_<%=cid%>);
        }
		while((line1_<%=cid%> = breer_<%=cid%>.readLine()) != null) {
			stringStderr_<%=cid%>.append("\n"+line1_<%=cid%>);
		}

		breer_<%=cid%>.close();
		stderr_<%=cid%>.close();
		
		 /* Close this session */
		
		sess_<%=cid%>.close();
		
<%
		//-----begin to handle output
		if(standardOutput.equals("TO_CONSOLE")){
%>
			System.out.println(stringStdout_<%=cid%>.toString());
<%
		}else if(standardOutput.equals("TO_GLOBAL_VARIABLE")){
%>
			globalMap.put("<%=cid %>_STDOUT", stringStdout_<%=cid%>.toString());
<%
		}else if(standardOutput.equals("TO_CONSOLE_AND_GLOBAL_VARIABLE")){
%>
			System.out.println(stringStdout_<%=cid%>.toString());
			globalMap.put("<%=cid %>_STDOUT", stringStdout_<%=cid%>.toString());
<%
		}else if(standardOutput.equals("NORMAL_OUTPUT")){
%>
			output_<%=cid%>.add(stringStdout_<%=cid%>.toString());
<%
		}
		if(errorOutput.equals("TO_CONSOLE")){
%>
			System.out.println(stringStderr_<%=cid%>.toString());
<%			
		}else if(errorOutput.equals("TO_GLOBAL_VARIABLE")){
%>
			System.out.println(stringStderr_<%=cid%>.toString());
			globalMap.put("<%=cid %>_STDERR", stringStderr_<%=cid%>.toString());
<%		
		}else if(errorOutput.equals("TO_CONSOLE_AND_GLOBAL_VARIABLE")){
%>
			globalMap.put("<%=cid %>_STDERR", stringStderr_<%=cid%>.toString());
<%		
		}else if(errorOutput.equals("NORMAL_OUTPUT")){
%>
			output_<%=cid%>.add(stringStderr_<%=cid%>.toString());
<%		
		}
		if(errorOutput.equals("NORMAL_OUTPUT") || standardOutput.equals("NORMAL_OUTPUT")){
			if (conns!=null && conns.size()>0) {
				IConnection conn = conns.get(0);
%>
				for(String tmp_<%=cid %>:output_<%=cid%>){
<%
					for(IMetadataColumn column:columns) {
%>
						<%=conn.getName()%>.<%=column.getLabel()%> = tmp_<%=cid %>;				
<%
					}
			}
		}
		//-----end handle output
    }
}
%>
