<%@ jet
imports="
    org.talend.core.model.process.INode 
    org.talend.core.model.process.ElementParameterParser
    org.talend.core.model.metadata.IMetadataTable 
    org.talend.designer.codegen.config.CodeGeneratorArgument
    java.util.List
	java.util.Map
	java.lang.StringBuilder
"
%>

<%
CodeGeneratorArgument codeGenArgument = (CodeGeneratorArgument) argument;
INode node = (INode)codeGenArgument.getArgument();
boolean stats = codeGenArgument.isStatistics();

List<IMetadataTable> metadatas = node.getMetadataList();
String cid = node.getUniqueName();
if ((metadatas!=null)&&(metadatas.size()>0)) {
    IMetadataTable metadata = metadatas.get(0);
    if (metadata!=null) {
        
       	String commandSeparator = ElementParameterParser.getValue(
            node,
            "__COMMANDSEPARATOR__"
        );
                List<Map<String, String>> commands =
            (List<Map<String,String>>)ElementParameterParser.getObjectValue(
                node,"__COMMANDS__");
                
        if(commands.size() > 0)
        {%>
        	StringBuilder command_<%=cid %> = new StringBuilder();
           <% for(java.util.Map<String, String> map : commands)
            {%>
                if(command_<%=cid %>.length() > 0)
                {
                	command_<%=cid %>.append(<%=commandSeparator%>);
                }
                <%String cmd = map.get("COMMAND");%>
       		    command_<%=cid %>.append(<%=cmd %>);
            <% }
       }
%>
			
			/* Create a session */
 			ch.ethz.ssh2.Session sess_<%=cid%> = conn_<%=cid%>.openSession();
			sess_<%=cid%>.execCommand((command_<%=cid %>).toString());
			
			java.io.InputStream stdout_<%=cid%> = sess_<%=cid%>.getStdout();
			java.io.BufferedReader brout_<%=cid%>= new java.io.BufferedReader(new java.io.InputStreamReader(stdout_<%=cid%>));
            String line_<%=cid%> = "";
            StringBuilder stringStdout_<%=cid%> =new StringBuilder();

            if((line_<%=cid%> = brout_<%=cid%>.readLine()) != null)
            {
                stringStdout_<%=cid%>.append(line_<%=cid%>);
            }
			while((line_<%=cid%> = brout_<%=cid%>.readLine()) != null) {
				stringStdout_<%=cid%>.append("\n"+line_<%=cid%>);
			}
			
		    brout_<%=cid%>.close();
			stdout_<%=cid%>.close();
			
			java.io.InputStream stderr_<%=cid%> = sess_<%=cid%>.getStderr();
            java.io.BufferedReader breer_<%=cid%>= new java.io.BufferedReader(new java.io.InputStreamReader(stderr_<%=cid%>));
            String line1_<%=cid%> = "";
            StringBuilder stringStderr_<%=cid%> =new StringBuilder();

            if((line1_<%=cid%> = breer_<%=cid%>.readLine()) != null)
            {
            	stringStderr_<%=cid%>.append(line1_<%=cid%>);
            }
			while((line1_<%=cid%> = breer_<%=cid%>.readLine()) != null) {
				stringStderr_<%=cid%>.append("\n"+line1_<%=cid%>);
			}

			breer_<%=cid%>.close();
			stderr_<%=cid%>.close();
			
			 /* Close this session */
			
			sess_<%=cid%>.close();
			globalMap.put("<%=cid %>_STDOUT",stringStdout_<%=cid%>.toString());
			globalMap.put("<%=cid %>_STDERR",stringStderr_<%=cid%>.toString());
            globalMap.put("<%=cid %>_EXIT_CODE",sess_<%=cid%>.getExitStatus());

<%
    }
}
%>
