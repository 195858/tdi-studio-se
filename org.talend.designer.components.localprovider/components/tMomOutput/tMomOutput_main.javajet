<%@ jet 
imports="
    org.talend.core.model.process.INode 
    org.talend.core.model.process.ElementParameterParser 
    org.talend.core.model.metadata.IMetadataTable 
    org.talend.core.model.metadata.IMetadataColumn 
    org.talend.core.model.process.IConnection
    org.talend.designer.codegen.config.CodeGeneratorArgument
    org.talend.core.model.process.IConnectionCategory
    java.util.List
" 
class="MomInput"
%>

<%
	CodeGeneratorArgument codeGenArgument = (CodeGeneratorArgument) argument;
	INode node = (INode)codeGenArgument.getArgument();
	String cid = node.getUniqueName();
	String serverType=ElementParameterParser.getValue(node, "__SERVER__");
	String useMsgId=ElementParameterParser.getValue(node, "__IS_USE_MESSAGE_ID__");
	boolean useMQFormat = ("true").equals(ElementParameterParser.getValue(node, "__USE_FORMAT__"));
	String wsMQFormat = ElementParameterParser.getValue(node, "__WS_MQ_FORMAT__");
	
	List<IMetadataTable> metadatas = node.getMetadataList();
	if ((metadatas!=null)&&(metadatas.size()>0)) {
		IMetadataTable metadata = metadatas.get(0);
		List<IMetadataColumn> columns = metadata.getListColumns();
		List< ? extends IConnection> conns = node.getIncomingConnections();
		if((conns!=null)&&(conns.size()>0)) {
			IConnection conn = conns.get(0);
			if (conn.getLineStyle().hasConnectionCategory(IConnectionCategory.DATA)){
%>
	String msg_<%=cid%> = <%=conn.getName() %>.<%=((IMetadataColumn)columns.get(0)).getLabel() %>;
<%
				if(("true").equals(useMsgId)){
%>
	String msgID_<%=cid%> = <%=conn.getName() %>.<%=((IMetadataColumn)columns.get(1)).getLabel() %>;
<%
				}
				if(("JBoss").equals(serverType)){ // server judgement
					String msgType = ElementParameterParser.getValue(node, "__MSGTYPE__");
					if(("true").equals(useMsgId)){
%>
	javax.jms.MapMessage messageQ_<%=cid%> = session_<%=cid%>.createMapMessage();
    messageQ_<%=cid%>.setString(msgID_<%=cid%>,msg_<%=cid%>);
<%
					}else{
%>					
    javax.jms.TextMessage messageQ_<%=cid%> = session_<%=cid%>.createTextMessage();
    messageQ_<%=cid%>.setText(msg_<%=cid%>);
<%
					}
                    if(("Queue").equals(msgType)){
%>
    javax.jms.QueueSender queueSender_<%=cid%>=session_<%=cid%>.createSender(type_<%=cid%>);
    queueSender_<%=cid%>.send(type_<%=cid%>,messageQ_<%=cid%>);
<%
                    }else{
%>
	javax.jms.TopicPublisher topicPublisher_<%=cid%>=session_<%=cid%>.createPublisher(type_<%=cid%>);
	topicPublisher_<%=cid%>.publish(type_<%=cid%>,messageQ_<%=cid%>);
<%
					}
				}else if(("ActiveMQ").equals(serverType)){
					if(("true").equals(useMsgId)){
%>
	javax.jms.MapMessage message_<%=cid%> = session_<%=cid%>.createMapMessage();
    message_<%=cid%>.setString(msgID_<%=cid%>,msg_<%=cid%>);
<%
					}else{
%>
	javax.jms.TextMessage message_<%=cid %> = session_<%=cid%>.createTextMessage(msg_<%=cid%>);
<%
					}
%>
	producer_<%=cid %>.send(message_<%=cid %>);
<%
				}else{//server judgement   /***WebSphere MQ*****/
%>
	com.ibm.mq.MQMessage message_<%=cid%> = new com.ibm.mq.MQMessage();
	<% if(useMQFormat) {
	%>
	message_<%=cid%>.format = <%=wsMQFormat%>;
	<%
	}%>	
<%
					if(("true").equals(useMsgId)){
%>
	if (msgID_<%=cid%> != null & !("").equals(msgID_<%=cid%>)) {
		String padding = new String();
       	int padlen = 24;
 
       	int len = Math.abs(padlen) - msgID_<%=cid%>.toString().length();
       	if (len > 0) {
        	for (int i = 0 ; i < len ; i++) {
           		padding = padding + " ";
         	}
        	msgID_<%=cid%> = msgID_<%=cid%> + padding;
        }
	}
	message_<%=cid%>.messageId = msgID_<%=cid%>.getBytes("ISO-8859-15");
<%
					}
%>
    message_<%=cid%>.writeString(msg_<%=cid%>);
    remoteQ_<%=cid%>.put(message_<%=cid%>, opM_<%=cid%>);
<%
				}
			}
		}
	}  
%>
	


		
