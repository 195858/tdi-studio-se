<%@ jet 
imports="
    org.talend.core.model.process.INode 
    org.talend.core.model.process.ElementParameterParser 
    org.talend.core.model.metadata.IMetadataTable 
    org.talend.core.model.metadata.IMetadataColumn 
    org.talend.designer.codegen.config.CodeGeneratorArgument
    java.util.List
" 
%>

<%
CodeGeneratorArgument codeGenArgument = (CodeGeneratorArgument) argument;
INode node = (INode)codeGenArgument.getArgument();
String cid = node.getUniqueName();

String directory = ElementParameterParser.getValue(
    node,
    "__DIRECTORY__"
);

String filemask = ElementParameterParser.getValue(
    node,
    "__FILEMASK__"
);

String case_sensitive = ElementParameterParser.getValue(
    node,
    "__CASE_SENSITIVE__"
);

String include_subdir = ElementParameterParser.getValue(
    node,
    "__INCLUDE_SUBDIR__"
);

String matchDirs = ElementParameterParser.getValue(
    node,
    "__MATCH_DIRS__"
);

String matchFiles = ElementParameterParser.getValue(
    node,
    "__MATCH_FILES__"
);

boolean ifExclude = ElementParameterParser.getValue(
    node,
    "__IFEXCLUDE__"
).equals("true");

String excludeFilemask = ElementParameterParser.getValue(
    node,
    "__EXCLUDEFILEMASK__"
);
%>

use File::Spec;
use File::Basename;
use talend::filesOp;

my @files = getFileList(
    directory      => <%=directory%>,
    filemask       => filemaskToRegex(<%=filemask%>),
    case_sensitive => <%=case_sensitive%>,
    include_subdir => <%=include_subdir%>,
    match_dirs     => <%=matchDirs%>,
    match_files    => <%=matchFiles%>,
<%
if (ifExclude) {
%>
    exclude_filemask => filemaskToRegex(<%=excludeFilemask%>),
<%
}
%>
);

$_globals{<%=cid%>}{NB_FILE} = scalar @files;

for my $filepath (@files) {
    $_globals{<%=cid%>}{CURRENT_FILE} = basename($filepath);
    $_globals{<%=cid%>}{CURRENT_FILEPATH} = $filepath;
