<%@ jet 
	package="org.talend.designer.codegen.translators" 
	imports="
		org.talend.core.model.process.INode 
		org.talend.core.model.metadata.IMetadataTable 
		org.talend.core.model.process.ElementParameterParser
		org.talend.designer.codegen.config.CodeGeneratorArgument
		java.util.List
        java.util.Map
	"
	class="FTPMain"
%>

<%
	CodeGeneratorArgument codeGenArgument = (CodeGeneratorArgument) argument;
	INode node = (INode)codeGenArgument.getArgument();

	String localdir = ElementParameterParser.getValue(node, "__LOCALDIR__");	
	String action = ElementParameterParser.getValue(node, "__ACTION__");
	
	// component id
	String cid = node.getUniqueName();
%>	
	
	
////////////////////////////////////////////
<%
	if (action.equals("get")) {
%>
	{	
	String localdir<%=cid %>  = <%=localdir%>;
	String root<%=cid %> = ftp<%=cid %>.pwd();
	for (java.util.Map<String, String> map<%=cid %> : list<%=cid %>) 
	{
	java.util.Set<String> keySet<%=cid %> = map<%=cid %>.keySet();
   
	for (String key<%=cid %> : keySet<%=cid %>)
	{     
	String filemask<%=cid %> = key<%=cid %>; 
	String dir<%=cid %> = null;
	String mask<%=cid %> = filemask<%=cid %>.replaceAll("\\\\", "/") ;  
	int i<%=cid %> = mask<%=cid %>.lastIndexOf('/');   
	if (i<%=cid %>!=-1)
	{
	dir<%=cid %> = mask<%=cid %>.substring(0, i<%=cid %>); 
	mask<%=cid %> = mask<%=cid %>.substring(i<%=cid %>+1);  
    }
    if (dir<%=cid %>!=null && !"".equals(dir<%=cid %>)) ftp<%=cid %>.chdir(dir<%=cid %>);
    
  	mask<%=cid %> = mask<%=cid %>.replaceAll("\\.", "\\\\.").replaceAll("\\*", ".*");
  
	String[] listings<%=cid %> = ftp<%=cid %>.dir(".", false);
    for (int m<%=cid %> = 0; m<%=cid %> < listings<%=cid %>.length; m<%=cid %>++)
     { 
      if (listings<%=cid %>[m<%=cid %>].matches(mask<%=cid %>))
      {
      ftp<%=cid %>.get(localdir<%=cid %> + "/" + listings<%=cid %>[m<%=cid %>] ,listings<%=cid %>[m<%=cid %>]);
      }
    }
     
   }
   ftp<%=cid %>.chdir(root<%=cid %>);
 } 
}
<%
	}
	else if (action.equals("put")) {
%>

////////////////////////////////////////////
{
	String localdir<%=cid %>  = <%=localdir%>;	
	for (java.util.Map<String, String> map<%=cid %> : list<%=cid %>) 
	{
   java.util.Set<String> keySet<%=cid %> = map<%=cid %>.keySet();
      
   for (String key<%=cid %> : keySet<%=cid %>)
   {     
	String tempdir<%=cid %> =  localdir<%=cid %>;
	String filemask<%=cid %> = key<%=cid %>; 
	String dir<%=cid %> = null;	
	String mask<%=cid %> = filemask<%=cid %>.replaceAll("\\\\", "/") ;	
	int i<%=cid %> = mask<%=cid %>.lastIndexOf('/');
  
	if (i<%=cid %>!=-1)
	{
	dir<%=cid %> = mask<%=cid %>.substring(0, i<%=cid %>); 
	mask<%=cid %> = mask<%=cid %>.substring(i<%=cid %>+1);	 
    }
    if (dir<%=cid %>!=null && !"".equals(dir<%=cid %>)) tempdir<%=cid %> = tempdir<%=cid %> + "/" + dir<%=cid %>;  
    
  	mask<%=cid %> = mask<%=cid %>.replaceAll("\\.", "\\\\.").replaceAll("\\*", ".*");
    final String finalMask<%=cid %> = mask<%=cid %>;
    java.io.File[] listings<%=cid %> = null;       
        java.io.File file<%=cid %> = new java.io.File(tempdir<%=cid %>);
        if (file<%=cid %>.isDirectory()) {
            listings<%=cid %> = file<%=cid %>.listFiles(new java.io.FileFilter() {
                public boolean accept(java.io.File pathname) {
                    boolean result = false;
                    if (pathname != null && pathname.isFile()) {                      
                            result = java.util.regex.Pattern.compile(finalMask<%=cid %>).matcher(pathname.getName()).find(); 
                    }
                    return result;
                }
            });
        } 
    if(listings<%=cid %> != null)
    {
    for (int m<%=cid %> = 0; m<%=cid %> < listings<%=cid %>.length; m<%=cid %>++)
     { 
      if (listings<%=cid %>[m<%=cid %>].getName().matches(mask<%=cid %>))
      {        
         ftp<%=cid %>.put(tempdir<%=cid %> + "/" + listings<%=cid %>[m<%=cid %>].getName(),listings<%=cid %>[m<%=cid %>].getName());
      }
    }
    }     
   }
 } 
}
<%
 } else if (action.equals("delete")) {
%>
/////////////////////////////////////
{
String root<%=cid %> = ftp<%=cid %>.pwd();
for (java.util.Map<String, String> map<%=cid %> : list<%=cid %>) 
{
   java.util.Set<String> keySet<%=cid %> = map<%=cid %>.keySet(); 
     
   for (String key<%=cid %> : keySet<%=cid %>)
   {     
	String filemask<%=cid %> = key<%=cid %>; 
	String dir<%=cid %> = null;
	String mask<%=cid %> = filemask<%=cid %>.replaceAll("\\\\", "/") ;
	int i<%=cid %> = mask<%=cid %>.lastIndexOf('/');
  
	if (i<%=cid %>!=-1)
	{
	dir<%=cid %> = mask<%=cid %>.substring(0, i<%=cid %>); 
	mask<%=cid %> = mask<%=cid %>.substring(i<%=cid %>+1); 
    }
    if (dir<%=cid %>!=null && !"".equals(dir<%=cid %>)) ftp<%=cid %>.chdir(dir<%=cid %>);
    
  	mask<%=cid %> = mask<%=cid %>.replaceAll("\\.", "\\\\.").replaceAll("\\*", ".*");
  
	String[] listings<%=cid %> = ftp<%=cid %>.dir(".", false);
	for (int m<%=cid %> = 0; m<%=cid %> < listings<%=cid %>.length; m<%=cid %>++)
	{  
	if (listings<%=cid %>[m<%=cid %>].matches(mask<%=cid %>))
	{
	ftp<%=cid %>.delete(listings<%=cid %>[m<%=cid %>]);
	}
	}	     
   }  
   ftp<%=cid %>.chdir(root<%=cid %>);   
 } 
}
<%
	}
	else if (action.equals("rename")) {
%>
//////////////////////////////////
{
	for (java.util.Map<String, String> map<%=cid %> : list<%=cid %>) 
	{  	
    java.util.Set<String> keySet<%=cid %> = map<%=cid %>.keySet();   
   for (String key<%=cid %> : keySet<%=cid %>)
   {     
     ftp<%=cid %>.rename(key<%=cid %>, map<%=cid %>.get(key<%=cid %>));
   }
}
}
<%
}
%>
////////////////////////////////