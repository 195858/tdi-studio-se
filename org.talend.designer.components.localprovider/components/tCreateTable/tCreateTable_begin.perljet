<%@ jet 
imports="
    org.talend.core.model.process.INode 
    org.talend.core.model.process.ElementParameterParser 
    org.talend.core.model.metadata.IMetadataTable 
    org.talend.core.model.metadata.IMetadataColumn
    org.talend.designer.codegen.config.CodeGeneratorArgument
    org.talend.core.model.metadata.MetadataTalendType
    java.util.List
    org.talend.commons.utils.StringUtils
" 
%>
<%
CodeGeneratorArgument codeGenArgument = (CodeGeneratorArgument) argument;
INode node = (INode)codeGenArgument.getArgument();
String cid = node.getUniqueName();

String dbtable = ElementParameterParser.getValue(node, "__TABLE__");

String dbschema = ElementParameterParser.getValue(node, "__DBSCHEMA__");

String tableAction = ElementParameterParser.getValue(
    node,
    "__TABLE_ACTION__"
);

String connection = ElementParameterParser.getValue(
    node,
    "__CONNECTION__"
);

String dbtype = null;
if (connection.startsWith("tMysqlConnection")) {
    dbtype = "mysql";
}
else if (connection.startsWith("tPostgresqlConnection")) {
    dbtype = "postgresql";
}
else if (connection.startsWith("tOracleConnection")) {
    dbtype = "oracle";
}

String perlPackage = null;
if (dbtype.equals("mysql")) {
    perlPackage = "tMysqlOutput::Mysql";
}
else if (dbtype.equals("postgresql")) {
    perlPackage = "tPostgresqlOutput::Postgresql";
}
else if (dbtype.equals("oracle")) {
    perlPackage = "tOracleOutput::Oracle";
}

String dbh = "dbh_" + connection;

IMetadataTable metadata = null;
List<IMetadataTable> metadatas = node.getMetadataList();
if ((metadatas!=null)&&(metadatas.size()>0)) {
    metadata = metadatas.get(0);
}

if (metadata!=null) {
%>

my %desc_<%=cid %> = (
    schema        => [
<%
    for (IMetadataColumn column: metadata.getListColumns()) {
        String colname = column.getLabel();
        if (dbtype.equals("mysql")) {
            colname = StringUtils.getMysqlProtectedColumnName(colname);
        }
        else if (dbtype.equals("postgresql")) {
            colname = StringUtils.getPostgresqlProtectedColumnName(colname);
        }
%>
        {
            name    => '<%=colname%>',
            key     => <%=column.isKey() %>,
            type    => '<%=column.getTalendType() %>',
            len     => <%=column.getLength() %>,
            precision => <%=column.getPrecision() %>,
            null    => <%=column.isNullable() %>,
            default => '<%=column.getDefault() %>',
            comment => '<%=column.getComment() %>',
        },
<%
    }
%>
    ],
);

use <%=perlPackage%>;

$_globals{<%=cid%>}{QUERY} = <%=perlPackage%>::performTableAction(
    tableAction => '<%=tableAction%>',
    dbh => $<%=dbh%>,
    dbtable => <%=dbtable %>,
    component => <%=cid%>,
    schema => $desc_<%=cid %>{schema},
<%
    if (!dbschema.equals("")) {
%>
    dbschema => <%=dbschema%>,
<%
    }
%>
);

<%
}
%>
