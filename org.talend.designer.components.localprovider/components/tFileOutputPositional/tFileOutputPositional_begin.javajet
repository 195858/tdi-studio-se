<%@ jet 
imports="
    org.talend.core.model.process.INode 
    org.talend.core.model.process.ElementParameterParser
    org.talend.core.model.metadata.IMetadataTable
    org.talend.core.model.metadata.IMetadataColumn
    org.talend.designer.codegen.config.CodeGeneratorArgument
    java.util.List
    java.util.Map
" 
%>

<%
CodeGeneratorArgument codeGenArgument = (CodeGeneratorArgument) argument;
INode node = (INode)codeGenArgument.getArgument();

List<IMetadataTable> metadatas = node.getMetadataList();
if ((metadatas!=null)&&(metadatas.size()>0)) {
    IMetadataTable metadata = metadatas.get(0);
    if (metadata!=null) {
    
    	String cid = node.getUniqueName();
    	
    	String encoding = ElementParameterParser.getValue(node, "__ENCODING__");
        if (encoding!=null) {
            if (encoding.equals("")) {
                encoding = "undef";
            }
        }
        
        String separator = ElementParameterParser.getValue(
            node,
            "__ROWSEPARATOR__"
        );
        
        String filename = ElementParameterParser.getValue(
            node,
            "__FILENAME__"
        );

        boolean isIncludeHeader = ElementParameterParser.getValue(
            node,
            "__INCLUDEHEADER__"
        ).equals("true");

        boolean isAppend = ElementParameterParser.getValue(
            node,
            "__APPEND__"
        ).equals("true");
        
        List<Map<String, String>> formats =
            (List<Map<String,String>>)ElementParameterParser.getObjectValue(
                node,
                "__FORMATS__"
            );
%>
		int nb_line_<%=cid%> = 0;
		final java.io.BufferedWriter out<%=cid %> = new java.io.BufferedWriter(new java.io.OutputStreamWriter(
        		new java.io.FileOutputStream(<%=filename %>, <%= isAppend%>),<%= encoding%>));
        
        
<%
        if(isIncludeHeader&&!isAppend){      	
        	
    		List<IMetadataColumn> columns = metadata.getListColumns();
    		int sizeColumns = columns.size();%>
    		
    		String tempStringB<%=cid %>=null;
    		int tempLengthB<%=cid %>=0;
    		<%
    		for (int i = 0; i < sizeColumns; i++) {
    			IMetadataColumn column = columns.get(i);
    			Map<String, String> format=formats.get(i);
    		%>
    			
    			
    			//get  and format output String begin
    			tempStringB<%=cid %>="<%=column.getLabel() %>";
    			tempLengthB<%=cid %>=tempStringB<%=cid %>.length();
    			
            	if (tempLengthB<%=cid %> > <%=format.get("SIZE")%>) {
                    tempStringB<%=cid %> = tempStringB<%=cid %>.substring(0,<%=format.get("SIZE")%>);
                }else if(tempLengthB<%=cid %><<%=format.get("SIZE")%>){
                    StringBuilder result<%=cid %> = new StringBuilder();
                    <%
                    if (format.get("ALIGN").equals("\'L\'")) {
                    %>
                        result<%=cid %>.append(tempStringB<%=cid %>);
                        for(int i<%=cid %>=0; i<%=cid %>< <%=format.get("SIZE")%>-tempLengthB<%=cid %>; i<%=cid %>++){
                            result<%=cid %>.append(" ");
                        }
                        tempStringB<%=cid %> = result<%=cid %>.toString();
                    <%
                    } else if (format.get("ALIGN").equals("\'R\'")) {%>
                        for(int i<%=cid %>=0; i<%=cid %>< <%=format.get("SIZE")%>-tempLengthB<%=cid %>; i<%=cid %>++){
                            result<%=cid %>.append(" ");
                        }
                        result<%=cid %>.append(tempStringB<%=cid %>);
                        tempStringB<%=cid %> = result<%=cid %>.toString();
                    <%
                    } else {%>
                        int temp<%=cid %>= (<%=format.get("SIZE")%>-tempLengthB<%=cid %>)/2;
                        for(int i<%=cid %>=0;i<%=cid %><temp<%=cid %>;i<%=cid %>++){
                            result<%=cid %>.append(" ");
                        }
                        result<%=cid %>.append(tempStringB<%=cid %>);
                        for(int i<%=cid %>=0;i<%=cid %><temp<%=cid %>;i<%=cid %>++){
                            result<%=cid %>.append(" ");
                        }
                        if((temp<%=cid %>+temp<%=cid %>)!=(<%=format.get("SIZE")%>-tempLengthB<%=cid %>)){
                            result<%=cid %>.append(" ");
                        }
                        tempStringB<%=cid %> = result<%=cid %>.toString();
                    <%
                    } %>       
                }
                //get  and format output String end
    			
    			
    			out<%=cid %>.write(tempStringB<%=cid %>);
    		<%
    		}%>
    		out<%=cid %>.write(<%=separator%>);
<%
		}
    }
}
%>
