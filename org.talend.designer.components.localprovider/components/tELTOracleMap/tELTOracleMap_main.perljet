<%@ jet 
	package="org.talend.designer.codegen.translators" 
	imports="
	
	org.talend.designer.codegen.config.CodeGeneratorArgument
	
    java.util.List
	org.talend.core.model.process.AbstractExternalNode
	org.talend.core.model.process.IConnection
	org.talend.core.model.process.IExternalNode
	org.talend.designer.dbmap.MapperMain
	org.talend.designer.dbmap.external.data.ExternalDbMapData
	org.talend.designer.dbmap.external.data.ExternalDbMapTable
	org.talend.designer.dbmap.language.IDbLanguage
	org.talend.designer.dbmap.oracle.OracleMapperComponent
	org.talend.designer.dbmap.oracle.language.OracleGenerationManager
	org.talend.designer.mapper.oracle.model.metadata.OracleDbMapTestGenerator
	" 
	class="DbOracleMapMain" %>
<%


	CodeGeneratorArgument codeGenArgument = (CodeGeneratorArgument) argument;
	OracleMapperComponent node = (OracleMapperComponent) codeGenArgument.getArgument();
	boolean stats = codeGenArgument.isStatistics(); 

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	
        OracleGenerationManager gm = new OracleGenerationManager();
        String uniqueNameComponent = null;
        IDbLanguage currentLanguage = gm.getLanguage();
        List<IConnection> connections;
        ExternalDbMapData data;
        if (node != null) {
            // normal use
            connections = (List<IConnection>) node.getIncomingConnections();
            data = (ExternalDbMapData) node.getExternalData();
            uniqueNameComponent = node.getUniqueName();
        } else {
            // Stand alone / tests
            MapperMain.setStandAloneMode(true);
            OracleDbMapTestGenerator testGenerator = new OracleDbMapTestGenerator(gm, false);
            connections = testGenerator.getConnectionList();
            data = (ExternalDbMapData) testGenerator.getExternalData();
            uniqueNameComponent = "testUniqueNameNode";
        }

        List<ExternalDbMapTable> outputTables = data.getOutputTables();

        int lstOutputTablesSize = outputTables.size();
        for (int i = 0; i < lstOutputTablesSize; i++) {
            ExternalDbMapTable outputTable = outputTables.get(i);
            String sqlQuery = gm.buildSqlSelect((OracleMapperComponent) node, outputTable.getName());
            
%>

$_globals{<%=uniqueNameComponent %>}{QUERY}{<%= outputTable.getName() %>} = "<%= sqlQuery %>";
$branch_<%= outputTable.getName() %>_is_active = true;


<%

        }

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
%>
	