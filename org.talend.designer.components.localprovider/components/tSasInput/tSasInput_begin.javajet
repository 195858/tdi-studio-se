<%@ jet 
imports="
		org.talend.core.model.process.INode 
		org.talend.core.model.process.ElementParameterParser 
		org.talend.core.model.metadata.IMetadataTable 
		org.talend.core.model.metadata.IMetadataColumn
		org.talend.designer.codegen.config.CodeGeneratorArgument
		org.talend.core.model.process.IConnection
		org.talend.core.model.process.IConnectionCategory
		org.talend.core.model.metadata.types.JavaTypesManager
		java.util.Map
		java.util.List
" 
%>
	<%@ include file="../templates/DB/Input/HelpClass.javajet"%>
<%

	class DBInputBeginUtil extends DefaultDBInputUtil{
	    
		public void setURL(INode node) {
%>
			String url_<%=cid %> = "jdbc:sasiom://"+<%=dbhost%>+":"+<%=dbport%>;
<%
		}
		
		public String getDirverClassName(INode node){
			return "com.sas.rio.MVADriver";
		}
		
		public void createConnection(INode node) {
			dbhost = ElementParameterParser.getValue(node, "__HOST__");
	    	dbport = ElementParameterParser.getValue(node, "__PORT__");
			dbname = ElementParameterParser.getValue(node, "__DBNAME__");
			dbuser = ElementParameterParser.getValue(node, "__USER__");
			dbpwd = ElementParameterParser.getValue(node, "__PASS__");
%>
			java.lang.Class.forName("<%=this.getDirverClassName(node) %>");
			
			String dbUser_<%=cid %> = <%=dbuser%>;
			String dbPwd_<%=cid %> = <%=dbpwd%>;
			java.util.Properties property_<%=cid %> = new java.util.Properties();
			
			property_<%=cid %>.setProperty("username", dbUser_<%=cid %>);
			property_<%=cid %>.setProperty("password", dbPwd_<%=cid %>);
			<%this.setURL(node);%>
			conn_<%=cid%> = java.sql.DriverManager.getConnection(url_<%=cid %>, property_<%=cid %>);
<%
			
		}
		
		//-----------according schema type to generate ResultSet
		public void generateStringCharAndCharacterSet(String firstConnName, IMetadataColumn column, int currentColNo,
					String trimMethod, String typeToGenerate, boolean whetherTrimAllCol, boolean whetherTrimCol) {
%>
			if(rs_<%=cid %>.getString(<%if(isDynamic){%>column_index_<%=cid%><%}else{%><%=currentColNo%><%}%>)!=null&&(rs_<%=cid %>.getString(<%if(isDynamic){%>column_index_<%=cid%><%}else{%><%=currentColNo%><%}%>)).length()>0){
				<%=firstConnName%>.<%=column.getLabel()%>=rs_<%=cid %>.getString(<%if(isDynamic){%>column_index_<%=cid%><%}else{%><%=currentColNo%><%}%>).charAt(0);
			}else{			  	
<%
				if(typeToGenerate.equals("Character")){
%>
					if((rs_<%=cid %>.getString(<%if(isDynamic){%>column_index_<%=cid%><%}else{%><%=currentColNo%><%}%>))==null){
			  			<%=firstConnName%>.<%=column.getLabel()%>=null;
			  		}else{
			  			<%=firstConnName%>.<%=column.getLabel()%>='\0';
			  		}
<%
				} else {
%>
			  		
			  		if((rs_<%=cid %>.getString(<%if(isDynamic){%>column_index_<%=cid%><%}else{%><%=currentColNo%><%}%>)).equals("")){
			  			<%=firstConnName%>.<%=column.getLabel()%> = '\0';
			  		}else{
			  			throw new RuntimeException(
							"Value is empty for column : '<%=column.getLabel()%>', value is invalid or this column should be nullable or have a default value.");
					}
			  		
<%
				}
%>
			  
			}		
<%
	    }
	    //---------end according schema type to generate ResultSet
	}//end class
	
	dbInputBeginUtil = new DBInputBeginUtil();
%>
    
	<%@ include file="../templates/DB/Input/AbstractDBInputBegin.javajet"%>
