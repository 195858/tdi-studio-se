<%@ jet 
imports="
    	org.talend.core.model.process.INode 
    	org.talend.core.model.process.ElementParameterParser 
		org.talend.core.model.metadata.IMetadataTable 
		org.talend.core.model.metadata.IMetadataColumn
		org.talend.designer.codegen.config.CodeGeneratorArgument
		org.talend.core.model.process.IConnection
		org.talend.core.model.process.IConnectionCategory
		org.talend.core.model.metadata.types.JavaTypesManager
		org.talend.core.model.metadata.types.JavaType
		java.util.List
		"
%>
<%
CodeGeneratorArgument codeGenArgument = (CodeGeneratorArgument) argument;

INode node = (INode)codeGenArgument.getArgument();

String cid = node.getUniqueName();

List<IMetadataTable> metadatas = node.getMetadataList();
if ((metadatas != null) && (metadatas.size() > 0)) {
	IMetadataTable metadata = metadatas.get(0);
	
	if (metadata != null) {
		List<IMetadataColumn> columnList = metadata.getListColumns();
		int nbSchemaColumns = columnList.size();
			
		List<? extends IConnection> outgoingConns = node.getOutgoingSortedConnections();

		// if output columns are defined
		if (nbSchemaColumns > 0 && outgoingConns != null && outgoingConns.size() > 0){			
			
			boolean bIsManualQuery = ElementParameterParser.getValue(node, "__MANUAL_QUERY__").equals("true");
			String sql = "";
			
			if (bIsManualQuery){

				sql = ElementParameterParser.getValue(node, "__QUERY__");
				sql = sql.replaceAll("\n", " ").replaceAll("\r", " ");

			} else{
				
				String modulename = ElementParameterParser.getValue(node, "__MODULENAME__").trim();
				String customModulename = ElementParameterParser.getValue(node, "__CUSTOM_MODULE__").trim();
				String condition = ElementParameterParser.getValue(node, "__CONDITION__").trim();

				StringBuilder sb = new StringBuilder("\"select ");

				for (IMetadataColumn column: columnList){
					sb.append(column.getLabel());
					sb.append(",");
				}
				sb.deleteCharAt(sb.lastIndexOf(","));
				sb.append(" from ").append((modulename.equals("CustomModule")) ? customModulename.replaceAll("\"","") : modulename);
				if (condition !=null && condition.length() > 3){
					sb.append(" where ").append(condition.substring(1, condition.length() - 1));
				}
				sb.append("\"");
				
				sql = sb.toString();
			}

			for(IConnection outgoingConn : outgoingConns) {
	
				if(outgoingConn.getLineStyle().hasConnectionCategory(IConnectionCategory.DATA)) { // start 1
%>					
					java.util.List<com.sforce.soap.partner.sobject.SObject> list_<%=cid%> = sfMgr_<%=cid%>.query(<%=sql%>);
					
					for (com.sforce.soap.partner.sobject.SObject sobj_<%=cid%> : list_<%=cid%>){
						nb_line_<%=cid%> ++;
						org.apache.axis.message.MessageElement[] fields_<%=cid%> = sobj_<%=cid%>.get_any();
						int len_<%=cid%> = fields_<%=cid%>.length;
<%
						for( int i = 0; i < columnList.size(); i++) {
						
							IMetadataColumn column = columnList.get(i);
							
							String typeToGenerate = JavaTypesManager.getTypeToGenerate(column.getTalendType(), column.isNullable());
							
							JavaType javaType = JavaTypesManager.getJavaTypeFromId(column.getTalendType());
							
							String patternValue = column.getPattern() == null || column.getPattern().trim().length() == 0 ? null : column.getPattern();
%>						
							if (<%=i %> < len_<%=cid%> && fields_<%=cid%>[<%=i%>].getValue() != null){
<%
								if (javaType == JavaTypesManager.STRING || javaType == JavaTypesManager.OBJECT) { // String or Object
%>
									<%=outgoingConn.getName()%>.<%=columnList.get(i).getLabel()%> = fields_<%=cid%>[<%=i%>].getValue();
<%
								} else if(javaType == JavaTypesManager.DATE) { // Date
%>
									<%=outgoingConn.getName()%>.<%=columnList.get(i).getLabel()%> = ParserUtils.parseTo_Date(fields[<%=i%>].getValue(), <%= patternValue %>);
<%
								} else if(javaType == JavaTypesManager.BYTE_ARRAY) { // byte[]
%>
									<%=outgoingConn.getName()%>.<%=columnList.get(i).getLabel()%> = fields_<%=cid%>[<%=i%>].getValue().getBytes();
<%
								} else  { // other
%>						
									<%=outgoingConn.getName()%>.<%=columnList.get(i).getLabel()%> = ParserUtils.parseTo_<%= typeToGenerate %>(fields_<%=cid%>[<%=i%>].getValue());
<%
								}
%>			
							} else {
								<%=outgoingConn.getName()%>.<%=columnList.get(i).getLabel()%> = <%=JavaTypesManager.getDefaultValueFromJavaType(typeToGenerate)%>;
							}
<%
						}
												
					// ending port of for... (move to tSalesforceInput_end.javajet)
					
				}// end 1
			}
		}
	}
}
%>