<%@ jet 
imports="
    	org.talend.core.model.process.INode 
    	org.talend.core.model.process.ElementParameterParser 
		org.talend.core.model.metadata.IMetadataTable 
		org.talend.core.model.metadata.IMetadataColumn
		org.talend.designer.codegen.config.CodeGeneratorArgument
		org.talend.core.model.process.IConnection
		org.talend.core.model.process.IConnectionCategory
		org.talend.core.model.metadata.builder.database.ExtractMetaDataUtils
		org.talend.core.model.metadata.types.JavaTypesManager
		org.talend.core.model.metadata.types.JavaType
		java.util.List
		"
%>
<%
CodeGeneratorArgument codeGenArgument = (CodeGeneratorArgument) argument;
INode node = (INode)codeGenArgument.getArgument();
String cid = node.getUniqueName();
        
String axHost = ElementParameterParser.getValue(node, "__HOST__");
String axDomain = ElementParameterParser.getValue(node, "__DOMAIN__");
String axUser = ElementParameterParser.getValue(node, "__USER__");
String axPwd = ElementParameterParser.getValue(node, "__PASS__");
String axTable = ElementParameterParser.getValue(node, "__TABLE__");
String dbquery = ElementParameterParser.getValue(node, "__QUERY__");
	   dbquery = dbquery.replaceAll("\n"," ");
	   dbquery = dbquery.replaceAll("\r"," ");

List<IMetadataTable> metadatas = node.getMetadataList();
if ((metadatas!=null)&&(metadatas.size()>0)) {
	IMetadataTable metadata = metadatas.get(0);
	if (metadata!=null) {

    	class VariantTool{
    		public String vStr(String value){
    			return "new org.jinterop.dcom.core.JIVariant(new org.jinterop.dcom.core.JIString("+value+"))";
    		}
    		public String vInt(int value){
    			return "new org.jinterop.dcom.core.JIVariant("+value+")";
    		}
    	}
    	VariantTool vTool = new VariantTool();
%>
int nb_line_<%=cid%> = 0;

//connect to com server
org.jinterop.dcom.common.JISystem.setAutoRegisteration(true);
org.jinterop.dcom.core.JISession session_<%=cid%> = org.jinterop.dcom.core.JISession.createSession(<%=axDomain%>, <%=axUser%>, <%=axPwd%>);
org.jinterop.dcom.core.JIClsid clsid_<%=cid%> = org.jinterop.dcom.core.JIClsid.valueOf("71421B8A-81A8-4373-BD8D-E0D83B0B3DAB");
org.jinterop.dcom.core.JIComServer comServer_<%=cid%> = new org.jinterop.dcom.core.JIComServer(clsid_<%=cid%>, <%=axHost%>, session_<%=cid%>);

//get IAxapta3 interface
org.jinterop.dcom.core.IJIComObject comObject_<%=cid%> = comServer_<%=cid%>.createInstance();
org.jinterop.dcom.win32.IJIDispatch  axapta3_<%=cid%> = (org.jinterop.dcom.win32.IJIDispatch) org.jinterop.dcom.win32.ComFactory.createCOMInstance(
                    org.jinterop.dcom.win32.ComFactory.IID_IDispatch, comObject_<%=cid%>);

//logon ax server
axapta3_<%=cid%>.callMethod("Logon", 
	new Object[] { <%=vTool.vStr("\"\"")%>, <%=vTool.vStr("\"\"")%>, <%=vTool.vStr("\"\"")%>, <%=vTool.vStr("\"\"")%> });

//init record
org.jinterop.dcom.core.JIVariant[] results_<%=cid%> = axapta3_<%=cid%>.callMethodA("CreateRecord", new Object[]{<%=vTool.vStr(axTable)%> });
org.jinterop.dcom.win32.IJIDispatch record_<%=cid%> = (org.jinterop.dcom.win32.IJIDispatch) results_<%=cid%>[0].getObjectAsComObject(comObject_<%=cid%>);

//exe the SQL query
String sqlstmt_<%=cid%> = <%=dbquery%>;
org.jinterop.dcom.core.JIVariant sqlStmtVar_<%=cid%> = new org.jinterop.dcom.core.JIVariant(new org.jinterop.dcom.core.JIString(sqlstmt_<%=cid%>));
record_<%=cid%>.callMethod("ExecuteStmt", new Object[] { sqlStmtVar_<%=cid%>});

java.util.Calendar calendar_<%=cid%> = java.util.Calendar.getInstance();
calendar_<%=cid%>.set(0, 0, 0, 0, 0, 0);
java.util.Date year0_<%=cid%> = calendar_<%=cid%>.getTime();
globalMap.put("<%=cid %>_QUERY",<%=dbquery%>);

<%
        List< ? extends IConnection> conns = node.getOutgoingSortedConnections();
        List<IMetadataColumn> columnList = metadata.getListColumns();
%>
//loop record
while(record_<%=cid%>.get("Found").getObjectAsBoolean()){
	nb_line_<%=cid%>++;
<%
        if(conns != null && conns.size()>0){
         	IConnection conn = conns.get(0);
         	String firstConnName = conn.getName();
         	for(IMetadataColumn column:columnList){
             	String typeToGenerate = JavaTypesManager.getTypeToGenerate(column.getTalendType(), column.isNullable());
             	String defVal = JavaTypesManager.getDefaultValueFromJavaType(typeToGenerate);
             	if(conn.getLineStyle().hasConnectionCategory(IConnectionCategory.DATA)){
%> 	
	{
		org.jinterop.dcom.core.JIVariant[] field_<%=cid%> =  record_<%=cid%>.get("field", new Object[] { <%=vTool.vStr("\""+column.getLabel()+"\"")%> });
<%
            		if(typeToGenerate.equals("byte[]")){
            			typeToGenerate = "Bytes";
            		}else if(typeToGenerate.equals("java.util.Date")){
            			typeToGenerate = "Date";
                    }else if(typeToGenerate.equals("Integer")){
                      	typeToGenerate = "Int";
                    }else{
                    	typeToGenerate=typeToGenerate.substring(0,1).toUpperCase()+typeToGenerate.substring(1);
                    }
%>
	 	if(field_<%=cid%>!=null && field_<%=cid%>.length>0 && field_<%=cid%>[0].getObject() != null)
	 	{
<%
	 				if (typeToGenerate.equals("List")) {
%>
			<%=firstConnName%>.<%=column.getLabel()%> = (List)field_<%=cid%>[0].getObjectAsArray().getArrayInstance();
<%
					}else if(typeToGenerate.equals("Object")){
%>
			<%=firstConnName%>.<%=column.getLabel()%> = field_<%=cid%>[0].getObject();
<%
					}else if(typeToGenerate.equals("String")){
%>
			<%=firstConnName%>.<%=column.getLabel()%> = field_<%=cid%>[0].getObjectAsString().getString();
<%
					}else{
%>
	 		<%=firstConnName%>.<%=column.getLabel()%> = field_<%=cid%>[0].getObjectAs<%=typeToGenerate%>();
<%
					}
%>
	 	}else{
<%
    				if(column.isNullable()){
%>
 			<%=firstConnName%>.<%=column.getLabel()%> = null;
<%
		 			}else{
%>    
		 	throw new RuntimeException("Null value in non-Nullable column");
<%
            		}
%>
 		}
 	}	
<%
    			}
 			}
         	if(conns.size()>1){
         		for(int connNO = 1; connNO < conns.size(); connNO++){
        			IConnection conn2 = conns.get(connNO);
        			if((conn2.getName().compareTo(firstConnName)!=0)&&(conn2.getLineStyle().hasConnectionCategory(IConnectionCategory.DATA))){
        				for(IMetadataColumn column:columnList){
%>
 		   	<%=conn2.getName()%>.<%=column.getLabel()%>=<%=firstConnName%>.<%=column.getLabel()%>;
<% 
        				}
        			}
         		}
         	}
		}

	}
}
%>

