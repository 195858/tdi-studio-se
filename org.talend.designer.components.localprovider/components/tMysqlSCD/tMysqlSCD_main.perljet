<%@ jet 
imports="
    org.talend.core.model.process.INode 
    org.talend.core.model.metadata.IMetadataColumn
    org.talend.core.model.process.ElementParameterParser
    org.talend.core.model.metadata.IMetadataTable 
    org.talend.core.model.process.IConnection
    org.talend.designer.codegen.config.CodeGeneratorArgument
    java.util.List
    java.util.ArrayList
    java.util.Map
    java.util.HashMap
    org.talend.commons.utils.StringUtils
"
%>

<%
CodeGeneratorArgument codeGenArgument = (CodeGeneratorArgument) argument;
INode node = (INode)codeGenArgument.getArgument();
String cid = node.getUniqueName();

// searching the incoming schema
IMetadataTable inMetadata = null;
IConnection inConnection = null;

List<? extends IConnection> incomingConnections
    = node.getIncomingConnections();
if (incomingConnections != null && !incomingConnections.isEmpty()) {
    inConnection = incomingConnections.get(0);
    inMetadata = inConnection.getMetadataTable();
}

// searching the outgoing schema
IMetadataTable metadata = null;

List<IMetadataTable> metadatas = node.getMetadataList();
if (metadatas != null && metadatas.size() > 0) {
    metadata = metadatas.get(0);
}

// we only generate output if incoming and outgoing schema are defined
if (inMetadata != null && metadata != null) {
    String inConnName = inConnection.getName();

    String debugString = ElementParameterParser.getValue(node, "__DEBUG__");
    boolean debug = false;
    if (debugString.equals("true")) {
        debug = true;
    }


    String useExistingConnection = ElementParameterParser.getValue(
        node,
        "__USE_EXISTING_CONNECTION__"
    );

    String connection = ElementParameterParser.getValue(
        node,
        "__CONNECTION__"
    );

    String dbh = "dbh_";
    if (useExistingConnection.equals("true")) {
        dbh+= connection;
    }
    else {
        dbh+= cid;
    }

    List<Map<String, String>> sourceKeys =
        (List<Map<String,String>>)ElementParameterParser.getObjectValue(
            node,
            "__SOURCE_KEYS__"
    );

    List<Map<String, String>> l1fields =
        (List<Map<String,String>>)ElementParameterParser.getObjectValue(
            node,
            "__L1_FIELDS__"
    );

    List<Map<String, String>> l2fields =
        (List<Map<String,String>>)ElementParameterParser.getObjectValue(
            node,
            "__L2_FIELDS__"
    );

    String useVersion = ElementParameterParser.getValue(
        node,
        "__USE_L2_VERSION__"
    );

    String versionField = ElementParameterParser.getValue(
        node,
        "__L2_VERSION_FIELD__"
    );

    Map<String, String> typeOfColumn = new HashMap();

    for (Map<String, String> sk : sourceKeys) {
        typeOfColumn.put(sk.get("NAME"), "SK");
    }

    for (Map<String, String> l1field : l1fields) {
        typeOfColumn.put(l1field.get("NAME"), "L1");
    }

    for (Map<String, String> l2field : l2fields) {
        typeOfColumn.put(l2field.get("NAME"), "L2");
    }

    List<Integer> keyColPositions = new ArrayList();
    List<Integer> l1Positions = new ArrayList<Integer>();
    List<Integer> l2Positions = new ArrayList<Integer>();
    
    int colPosition = 0;

    for (IMetadataColumn column: inMetadata.getListColumns()) {
        String colname = column.getLabel();

        if (typeOfColumn.containsKey(colname)) {
            if (typeOfColumn.get(colname).equals("SK")) {
                keyColPositions.add(colPosition);
            }

            if (typeOfColumn.get(colname).equals("L1")) {
                l1Positions.add(colPosition);
            }

            if (typeOfColumn.get(colname).equals("L2")) {
                l2Positions.add(colPosition);
            }

        }

        colPosition++;
    }

    String keyColPositionsString = StringUtils.join(
        keyColPositions.toArray(),
        ", "
    );
%>

{
    my $cache_key = join $;, @$<%=inConnName%>[<%=keyColPositionsString%>];

    if (not exists $cache_<%=cid%>{$cache_key}) {
        $isth_<%=cid%>->execute(
<%
    for (IMetadataColumn column: inMetadata.getListColumns()) {
        String colname = column.getLabel();

        if (typeOfColumn.containsKey(colname)) {
%>
            $<%=inConnName%>->[<%=inConnName%>__<%=colname%>],
<%
        }
    }

    if (useVersion.equals("true")) {
%>
            1,
<%
    }
%>
        )
            or die "[<%=cid%>] cannot insert new source id";
<%
    if (debug) {
%>

        print "[<%=cid%>] new source id inserted\n";
<%
    }
%>
    }
    else {
<%
    if (debug) {
%>
        # print 'cache key: '.$cache_key."\n";
<%
    }
%>
        my @cache_row = split ',', $cache_<%=cid%>{$cache_key};

<%
    if (l1Positions.size() > 0) {
%>
        my $l1sum = md5_hex(
            join(
                $;,
<%
        for (Integer l1Position : l1Positions) {
%>
                $<%=inConnName%>->[<%=l1Position%>],
<%
        }
%>
            )
        );

        if ($l1sum ne $cache_row[0]) {
            $l1sth_<%=cid %>->execute(
<%
        for (Integer l1Position : l1Positions) {
%>
                $<%=inConnName%>->[<%=l1Position%>],
<%
        }

        for (Integer keyColPosition : keyColPositions) {
%>
                $<%=inConnName%>->[<%=keyColPosition%>],
<%
        }
%>
            )
                or die '[<%=cid%>] cannot execute l1 update query';
        }
<%
    }

    if (l2fields.size() > 0) {
%>

        my $l2sum = md5_hex(
            join(
                $;,
<%
        for (Integer l2Position : l2Positions) {
%>
                $<%=inConnName%>->[<%=l2Position%>],
<%
        }
%>
            )
        );

        if ($l2sum ne $cache_row[1]) {
            $l2sth_<%=cid%>->execute(
<%
        for (Map<String, String> sk : sourceKeys) {
%>
                $<%=inConnName%>->[<%=inConnName%>__<%=sk.get("NAME")%>],
<%
        }
%>
            )
                or die '[<%=cid%>] cannot update previous line';

            $isth_<%=cid%>->execute(
<%
        for (IMetadataColumn column: inMetadata.getListColumns()) {
            String colname = column.getLabel();

            if (typeOfColumn.containsKey(colname)) {
%>
                $<%=inConnName%>->[<%=inConnName%>__<%=column.getLabel()%>],
<%
            }
        }

        if (useVersion.equals("true")) {
%>
                $cache_row[2] + 1,
<%
        }
%>
            )
                or die "[<%=cid%>] cannot insert new history line";
        }
<%
        if (debug) {
%>

            print "[<%=cid%>] new history line\n";
<%
        }
    } // if l2 fields
%>
    }
}
<%
} // if metadata
%>
