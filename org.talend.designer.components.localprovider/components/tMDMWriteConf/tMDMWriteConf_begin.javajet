<%@ jet 
imports="
    	org.talend.core.model.process.INode 
    	org.talend.core.model.process.ElementParameterParser
    	org.talend.designer.codegen.config.CodeGeneratorArgument
		"
%>
<%
	CodeGeneratorArgument codeGenArgument = (CodeGeneratorArgument) argument;
	INode node = (INode)codeGenArgument.getArgument();
	String cid = node.getUniqueName();
	String virtualcid = cid;
	String destination = ElementParameterParser.getValue(node, "__DESTINATION__");
	if(destination!=null && !"".equals(destination)){
		cid = destination;
	}

	boolean useExistingConn = ("true").equals(ElementParameterParser.getValue(node,"__USE_EXISTING_CONNECTION__"));
	String connection = ElementParameterParser.getValue(node,"__CONNECTION__");
	String conn = "xtentisWS_" + connection;
	String mdmUrl = ElementParameterParser.getValue(node, "__MDMURL__");
	String username = ElementParameterParser.getValue(node, "__USERNAME__");
	String password = ElementParameterParser.getValue(node, "__PASSWORD__");
	String universe = ElementParameterParser.getValue(node, "__UNIVERSE__");
	String dataModule = ElementParameterParser.getValue(node, "__DATAMODEL__");
	String dataCluster = ElementParameterParser.getValue(node, "__DATACLUSTER__");
	
	boolean withReport = ("true").equals(ElementParameterParser.getValue(node,"__WITHREPORT__"));
	boolean isMassInsert =("true").equals(ElementParameterParser.getValue(node,"__EXTENDINSERT__"));
	
	boolean addTaskID = ("true").equals(ElementParameterParser.getValue(node,"__ADD_TASKID__"));
	boolean usePartialUpdate = ("true").equals(ElementParameterParser.getValue(node,"__USE_PARTIAL_UPDATE__"));
	
	boolean storeFlow = ("true").equals(ElementParameterParser.getValue(node, "__STORE_FLOW__"));
%>       
int nb_line_<%=cid %> = 0;
<%if(!usePartialUpdate){%>
	<%if(addTaskID){%>
		class Util_<%=cid%>{
			public org.talend.mdm.webservice.WSUpdateMetadataItem makeUpdateMeteItm(String taskID,org.talend.mdm.webservice.WSItemPK wspk){
				org.talend.mdm.webservice.WSUpdateMetadataItem wsUpdateMetadataItem = new org.talend.mdm.webservice.WSUpdateMetadataItem();
		        wsUpdateMetadataItem.setTaskId(taskID);
		        wsUpdateMetadataItem.setWsItemPK(wspk);
		        return wsUpdateMetadataItem;
			}
			public org.talend.mdm.webservice.WSUpdateMetadataItem[] makeUpdateMeteItms(java.util.List<String> taskIDs,org.talend.mdm.webservice.WSItemPK[] wspks){
				java.util.List<org.talend.mdm.webservice.WSUpdateMetadataItem> wsUpdateMetadataItems = new java.util.ArrayList<org.talend.mdm.webservice.WSUpdateMetadataItem>();
				int i = 0;
		        for(org.talend.mdm.webservice.WSItemPK wspk : wspks){
		        	wsUpdateMetadataItems.add(makeUpdateMeteItm(taskIDs.get(i),wspk));
		        	i++;
		        }
		        return wsUpdateMetadataItems.toArray(new org.talend.mdm.webservice.WSUpdateMetadataItem[wsUpdateMetadataItems.size()]);
			}
		}
		Util_<%=cid%> util_<%=cid%> = new Util_<%=cid%>();
	<%}%>
	<%if(isMassInsert){
		if(withReport){%>
			java.util.List <org.talend.mdm.webservice.WSPutItemWithReport> miList_<%=cid %> = new java.util.ArrayList<org.talend.mdm.webservice.WSPutItemWithReport>();
	<%	}else{%>
			java.util.List <org.talend.mdm.webservice.WSPutItem> miList_<%=cid %> = new java.util.ArrayList<org.talend.mdm.webservice.WSPutItem>();
	<%
		}
		if(addTaskID){
	%>
			java.util.List<String> taskIDs_<%=cid%> = new java.util.ArrayList<String>();
	<%	
		}
	}
}%>

<%if(!useExistingConn){%>
	org.talend.mdm.webservice.XtentisServiceLocator xtentisService_<%=cid %> = new org.talend.mdm.webservice.XtentisServiceLocator();
	xtentisService_<%=cid %>.setXtentisPortEndpointAddress(<%=mdmUrl %>);
	org.talend.mdm.webservice.XtentisPort xtentisWS_<%=cid %> = xtentisService_<%=cid %>.getXtentisPort();    
	org.talend.mdm.webservice.XtentisBindingStub stub_<%=cid %> = (org.talend.mdm.webservice.XtentisBindingStub)xtentisWS_<%=cid %>;
	
	// Authentification
	<%if(universe==null || ("").equals(universe.trim())){%>
	stub_<%=cid %>.setUsername(<%=username %>);
	<%}else{%>
	stub_<%=cid %>.setUsername(<%=universe%> + "/" + <%=username %>);
	<%}%>
	stub_<%=cid %>.setPassword(<%=password %>);
<%}else{%>
	org.talend.mdm.webservice.XtentisPort xtentisWS_<%=cid %> = (org.talend.mdm.webservice.XtentisPort)globalMap.get("<%=conn%>");
<%}%>

org.talend.mdm.webservice.WSDataClusterPK dataCluster_<%=cid %> = new org.talend.mdm.webservice.WSDataClusterPK(<%=dataCluster %>);
org.talend.mdm.webservice.WSDataModelPK dataModel_<%=cid %> = new org.talend.mdm.webservice.WSDataModelPK(<%=dataModule %>);

String input_<%=cid %>;

org.talend.mdm.webservice.WSItemPK[] wspks_<%=cid %>;
org.talend.mdm.webservice.WSItemPK wspk_<%=cid %>;


<%if(storeFlow){%>
	java.util.List<java.util.Map<String,String>> xmlFlowList_<%=cid%> = (java.util.List<java.util.Map<String,String>>)globalMap.get("flows_<%=virtualcid%>");
	int flowNum_<%=cid%> = 0;
<%}%>

	java.util.Queue<String> queue_<%=cid%> = (java.util.Queue<String>) globalMap.get("queue_<%=virtualcid%>"); 
	do {
		if (!queue_<%=cid%>.isEmpty()) {
