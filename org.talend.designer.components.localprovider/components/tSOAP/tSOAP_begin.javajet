<%@ jet 
imports="
    	org.talend.core.model.process.INode 
    	org.talend.core.model.process.ElementParameterParser 
		org.talend.core.model.metadata.IMetadataTable 
		org.talend.core.model.metadata.IMetadataColumn
		org.talend.designer.codegen.config.CodeGeneratorArgument
		org.talend.core.model.process.IConnection
		org.talend.core.model.process.IConnectionCategory
		org.talend.core.model.metadata.types.JavaTypesManager
		org.talend.core.model.metadata.types.JavaType
        java.util.Map
        java.util.List
        org.talend.core.model.utils.TalendTextUtils
" 
%>

<%
CodeGeneratorArgument codeGenArgument = (CodeGeneratorArgument) argument;
INode node = (INode)codeGenArgument.getArgument();
String cid = node.getUniqueName();

List<IMetadataTable> metadatas = node.getMetadataList();
if ((metadatas!=null)&&(metadatas.size()>0)) {
    IMetadataTable metadata = metadatas.get(0);
    if (metadata!=null) {
       	String endpoint = ElementParameterParser.getValue(node,"__ENDPOINT__");
        String action = ElementParameterParser.getValue(node,"__ACTION__");
        String soapMessageStr = ElementParameterParser.getValue(node,"__SOAPMESSAGE__");
		if (soapMessageStr.startsWith("\"") && soapMessageStr.endsWith("\"")) {
			soapMessageStr = soapMessageStr.replace(System.getProperty("line.separator"),"");
            soapMessageStr = soapMessageStr.substring(1, soapMessageStr.length() - 1);
            soapMessageStr = soapMessageStr.replace("\"", "\\\"");
            soapMessageStr = "\"" + soapMessageStr + "\"";
            soapMessageStr = soapMessageStr.trim();
        }
        String soapVersion = ElementParameterParser.getValue(node,"__SOAP_VERSION__");
        boolean useNTLM = ("true").equals(ElementParameterParser.getValue(node,"__USE_NTLM__"));
        String domain = ElementParameterParser.getValue(node,"__NTLM_DOMAIN__");
        
        boolean needAuth = ("true").equals(ElementParameterParser.getValue(node,"__NEED_AUTH__"));
        String username = ElementParameterParser.getValue(node,"__AUTH_USERNAME__");
        String password = ElementParameterParser.getValue(node,"__AUTH_PASSWORD__");
                
        boolean useProxy = ("true").equals(ElementParameterParser.getValue(node,"__USE_PROXY__"));
        String proxyHost = ElementParameterParser.getValue(node,"__PROXY_HOST__");
        String proxyPort = ElementParameterParser.getValue(node,"__PROXY_PORT__");
        String proxyUser = ElementParameterParser.getValue(node,"__PROXY_USERNAME__");
        String proxyPassword = ElementParameterParser.getValue(node,"__PROXY_PASSWORD__");
        
        boolean needSSLtoTrustServer = ("true").equals(ElementParameterParser.getValue(node,"__NEED_SSL_TO_TRUSTSERVER__"));
        String trustStoreFile = ElementParameterParser.getValue(node,"__SSL_TRUSTSERVER_TRUSTSTORE__");
        String trustStorePassword = ElementParameterParser.getValue(node,"__SSL_TRUSTSERVER_PASSWORD__");
 
    	%>
    	String soapVersion_<%=cid%> = "";
    	<%if("Soap12".equals(soapVersion)){%>
    	soapVersion_<%=cid%> = org.talend.soap.SOAPUtil.SOAP12;
    	<%}else{%>
    	soapVersion_<%=cid%> = org.talend.soap.SOAPUtil.SOAP11;
    	<%}%>
        org.talend.soap.SOAPUtil soapUtil_<%=cid%> = new org.talend.soap.SOAPUtil(soapVersion_<%=cid%>,<%=endpoint%>,<%=action%>);
        <%		
        if (needSSLtoTrustServer) {
        %>   
            System.setProperty("java.protocol.handler.pkgs", "com.sun.net.ssl.internal.www.protocol");
        	System.setProperty("javax.net.ssl.trustStore", <%=trustStoreFile %>);
        	System.setProperty("javax.net.ssl.trustStorePassword", <%=trustStorePassword %>);
        <% 
        }
        if(needAuth&&!useNTLM){
        %>
        	soapUtil_<%=cid%>.setBasicAuth(<%=username%>,<%=password%>);
        <%
        }
        if(needAuth&&useNTLM){
        %>
        	soapUtil_<%=cid%>.setNTLMAuth(<%=domain%>,<%=username%>,<%=password%>);
        <%
        }
        if(useProxy){
        %>
        	soapUtil_<%=cid%>.setProxy(<%=proxyHost%>,<%=proxyPort%>,<%=proxyUser%>,<%=proxyPassword%>);
        <%
        }
        %>
		
    	StringBuilder soapMessage_<%=cid %> = new StringBuilder();
		
		soapMessage_<%=cid %>.append(<%=soapMessageStr%>);
		
		soapUtil_<%=cid%>.setSOAPMessage(soapMessage_<%=cid%>.toString());
		soapUtil_<%=cid%>.invokeSOAP();
		// for output
<%
	List< ? extends IConnection> conns = node.getOutgoingSortedConnections();
	String firstConnName = "";
	if (conns!=null) {//1
		if (conns.size()>0) {//2
			IConnection conn = conns.get(0); //the first connection
			firstConnName = conn.getName();			
			if (conn.getLineStyle().hasConnectionCategory(IConnectionCategory.DATA)) {//3
				List<IMetadataColumn> columns=metadata.getListColumns();
%>		
				<%=conn.getName() %>.Header = soapUtil_<%=cid%>.getReHeaderMessage();
				if(soapUtil_<%=cid%>.hasFault()){
					<%=conn.getName() %>.Fault = soapUtil_<%=cid%>.getReFaultMessage();
				}else{
					<%=conn.getName() %>.Body = soapUtil_<%=cid%>.getReBodyMessage();
				}
<%			
			}//3
		}//2
	}//1
%>
        
<%
	}
}
%> 
