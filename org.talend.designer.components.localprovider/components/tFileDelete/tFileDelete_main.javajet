<%@ jet 
	imports="
		org.talend.core.model.process.INode
		org.talend.designer.codegen.config.CodeGeneratorArgument
		org.talend.core.model.process.ElementParameterParser
		java.util.List
		java.util.Map"
%>
<%
CodeGeneratorArgument codeGenArgument = (CodeGeneratorArgument) argument;
INode node = (INode)codeGenArgument.getArgument();
String cid = node.getUniqueName();
String fileName = ElementParameterParser.getValue(node, "__FILENAME__");
String dirName = ElementParameterParser.getValue(node, "__DIRECTORY__");
String path = ElementParameterParser.getValue(node, "__PATH__");
String failon = ElementParameterParser.getValue(node, "__FAILON__");
boolean ifFolder = ("true").equals(ElementParameterParser.getValue(node, "__FOLDER__"));
boolean either = ("true").equals(ElementParameterParser.getValue(node, "__FOLDER_FILE__"));
%>
class DeleteFolder<%=cid%>{
	 /**
     * delete all the sub-files in 'file'
     * 
     * @param file
     */
	public boolean delete(java.io.File file) {
        java.io.File[] files = file.listFiles();
        for (int i = 0; i < files.length; i++) {
            if (files[i].isFile()) {
                files[i].delete();
            } else if (files[i].isDirectory()) {
                if (!files[i].delete()) {
                    delete(files[i]);
                }
            }
        }
        deleteDirectory(file);
        return file.delete();
    }

    /**
     * delete all the sub-folders in 'file'
     * 
     * @param file
     */
    private void deleteDirectory(java.io.File file) {
        java.io.File[] filed = file.listFiles();
        for (int i = 0; i < filed.length; i++) {
            deleteDirectory(filed[i]);
            filed[i].delete();
        }
    }

}
<%
if(either){
%>
	java.io.File path_<%=cid%>=new java.io.File(<%=path%>);
	if(path_<%=cid%>.exists()){
		if(path_<%=cid%>.isFile()){
	    	if(path_<%=cid%>.delete()){
	    		globalMap.put("<%=cid %>_CURRENT_STATUS", true);
	    	}else{
	    		globalMap.put("<%=cid %>_CURRENT_STATUS", false);
	    	}
		}else if(path_<%=cid%>.isDirectory()){ 
	    	DeleteFolder<%=cid%> df<%=cid%> = new DeleteFolder<%=cid%>();
	    	if(df<%=cid%>.delete(path_<%=cid%>)){
	    		globalMap.put("<%=cid %>_CURRENT_STATUS", true);
	    	}else{
	    		globalMap.put("<%=cid %>_CURRENT_STATUS", false);
	    	}
		}
    }else{
		globalMap.put("<%=cid %>_CURRENT_STATUS", false);

<%
		if(("true").equals(failon)){
%>
    		throw new RuntimeException("the file or path does not exists or is invalid");
<%
		}
%>
    }
    globalMap.put("<%=cid %>_DELETE_PATH",<%=path%>);
<%
}else if(ifFolder){
%>

	java.io.File file<%=cid%> = new java.io.File(<%=dirName%>);

	if(file<%=cid%>.exists()&& file<%=cid%>.isDirectory()){
		DeleteFolder<%=cid%> df<%=cid%> = new DeleteFolder<%=cid%>();
		if(df<%=cid%>.delete(file<%=cid%>)){
    		globalMap.put("<%=cid %>_CURRENT_STATUS", true);
    	}else{
    		globalMap.put("<%=cid %>_CURRENT_STATUS", false);
    	}
	}else{
		globalMap.put("<%=cid %>_CURRENT_STATUS", false);

<%
		if(("true").equals(failon)){
%>
    		throw new RuntimeException("the file or path does not exists or is invalid");
<%
		}
%>
    }
    globalMap.put("<%=cid %>_DELETE_PATH",<%=path%>);
<%
}else{
%>
    java.io.File file_<%=cid%>=new java.io.File(<%=fileName%>);
    if(file_<%=cid%>.exists()&& file_<%=cid%>.isFile()){
    	if(file_<%=cid%>.delete()){
    		globalMap.put("<%=cid %>_CURRENT_STATUS", true);
    	}else{
    		globalMap.put("<%=cid %>_CURRENT_STATUS", false);
    	}
    }else{
    	globalMap.put("<%=cid %>_CURRENT_STATUS", false);
<%
		if(("true").equals(failon)){
%>
    		throw new RuntimeException("File does not exists or is invalid");
<%
		}
%>
	}
	globalMap.put("<%=cid %>_DELETE_PATH",<%=fileName%>);
<%
}
%>
    
     
 
