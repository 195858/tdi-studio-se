<%@ jet 
imports="
        java.util.List
        
        org.talend.core.model.metadata.IMetadataColumn
        org.talend.core.model.metadata.IMetadataTable
        org.talend.core.model.metadata.types.JavaType
        org.talend.core.model.metadata.types.JavaTypesManager
        org.talend.core.model.process.ElementParameterParser
        org.talend.core.model.process.IConnection
        org.talend.core.model.process.IConnectionCategory
        org.talend.core.model.process.INode
        org.talend.designer.codegen.config.CodeGeneratorArgument
        org.talend.core.model.utils.TalendTextUtils	
		"
%>
<%
CodeGeneratorArgument codeGenArgument = (CodeGeneratorArgument) argument;
INode node = (INode)codeGenArgument.getArgument();
String cid = node.getUniqueName();

String endpoint = ElementParameterParser.getValue(node, "__ENDPOINT__");
String username = ElementParameterParser.getValue(node, "__USER__");
String password = ElementParameterParser.getValue(node, "__PASS__");
String timeout = ElementParameterParser.getValue(node,"__TIMEOUT__");
boolean needCompression = ("true").equals(ElementParameterParser.getValue(node,"__NEED_COMPRESSION__"));

boolean useProxy = ("true").equals(ElementParameterParser.getValue(node,"__USE_PROXY__"));
String proxyHost = ElementParameterParser.getValue(node,"__PROXY_HOST__");
String proxyPort = ElementParameterParser.getValue(node,"__PROXY_PORT__");
String proxyUsername = ElementParameterParser.getValue(node,"__PROXY_USERNAME__");
String proxyPassword = ElementParameterParser.getValue(node,"__PROXY_PASSWORD__");

boolean bulkConnection = ("true").equals(ElementParameterParser.getValue(node,"__BULK_CONNECTION__"));
String apiVersion = ElementParameterParser.getValue(node,"__API_VERSION__");
if(bulkConnection){
%>
	org.talend.salesforceBulk.SalesforceBulkAPI sforceBulk_<%=cid%> = new org.talend.salesforceBulk.SalesforceBulkAPI();
	<%if(useProxy){%>
	sforceBulk_<%=cid%>.setProxy(true,<%=proxyHost%>,<%=TalendTextUtils.removeQuotes(proxyPort)%>,<%=proxyUsername%>,<%=proxyPassword%>);
	<%}%>
	sforceBulk_<%=cid%>.login(<%=endpoint%>,<%=username%>,<%=password%>,<%=apiVersion%>);
	globalMap.put("conn_<%=cid %>", sforceBulk_<%=cid%>.getConnection());
<%
}else{
	if(useProxy){
%>
    java.util.Properties props = System.getProperties();
    props.put("socksProxyHost",<%=proxyHost %>);  
    props.put("socksProxyPort",<%=proxyPort %>);
    props.put("java.net.socks.username", <%=proxyUsername %>);
    props.put("java.net.socks.password", <%=proxyPassword %>); 
    
<%
	}
%>


	org.talend.salesforce.SforceManagement sfMgr_<%=cid%> = new org.talend.salesforce.SforceManagementImpl();
	sfMgr_<%=cid%>.setNeedCompression(<%=needCompression%>);
	sfMgr_<%=cid%>.setTimeout(<%=timeout%>);
	sfMgr_<%=cid%>.login(<%=username%>, <%=password%>, <%=endpoint%>);
	
	globalMap.put("binding_<%=cid %>", sfMgr_<%=cid%>.getBinding());
	globalMap.put("sforceService_<%=cid %>", sfMgr_<%=cid%>.getSforceService());
<%}%>			
			

