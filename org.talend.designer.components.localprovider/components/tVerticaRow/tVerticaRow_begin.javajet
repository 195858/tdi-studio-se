<%@ jet 
imports="
			org.talend.core.model.process.INode 
			org.talend.core.model.process.ElementParameterParser 
			org.talend.designer.codegen.config.CodeGeneratorArgument
" 
%>

<%
	CodeGeneratorArgument codeGenArgument = (CodeGeneratorArgument) argument;
	INode node = (INode)codeGenArgument.getArgument();
	String cid = node.getUniqueName();
	
	String dbhost = ElementParameterParser.getValue(node, "__HOST__");
	String dbport = ElementParameterParser.getValue(node, "__PORT__");
	String dbname= ElementParameterParser.getValue(node, "__DBNAME__");
	String dbuser= ElementParameterParser.getValue(node, "__USER__");
    String commitEvery = ElementParameterParser.getValue(node, "__COMMIT_EVERY__");
    String dbquery= ElementParameterParser.getValue(node, "__QUERY__");
	       
    	   dbquery = org.talend.core.model.utils.NodeUtil.replaceCRLFInMEMO_SQL(dbquery);
    
	boolean usePrepareStatement = "true".equals(ElementParameterParser.getValue(node,"__USE_PREPAREDSTATEMENT__"));
%>

		    java.sql.Connection conn_<%=cid%> = null;
		   <%
			    String useExistingConn = ElementParameterParser.getValue(node,"__USE_EXISTING_CONNECTION__");
			    if(useExistingConn.equals("true")) {
			        String connection = ElementParameterParser.getValue(node,"__CONNECTION__");
			        String conn = "conn_" + connection;
		   %>
		        conn_<%=cid%> = (java.sql.Connection)globalMap.get("<%=conn%>");
		   <%
		    } else {
		    	String db_version = ElementParameterParser.getValue(node, "__DB_VERSION__");
				if("VERTICA_6_1_X".equals(db_version) || "VERTICA_6_0".equals(db_version) || "VERTICA_5_1".equals(db_version)){
				%>
					java.lang.Class.forName("com.vertica.jdbc.Driver");
				<%
				}else{
				%>
					java.lang.Class.forName("com.vertica.Driver");
				<%
				}
		   %>
			String url_<%=cid %> = "jdbc:vertica://"+<%=dbhost%>+":"+<%=dbport%>+"/"+<%=dbname%>;
			String dbUser_<%=cid %> = <%=dbuser%>;
			<%
			String passwordFieldName = "__PASS__";
			%>

			<%@ include file="@{org.talend.designer.components.localprovider}/components/templates/password.javajet"%>

			String dbPwd_<%=cid %> = decryptedPassword_<%=cid%>;

			
			conn_<%=cid%> = java.sql.DriverManager.getConnection(url_<%=cid %>,dbUser_<%=cid%>,dbPwd_<%=cid%>);
			<%
			}
			%>
			

boolean whetherReject_<%=cid%> = false;

<%
if(!("").equals(commitEvery)&&!("0").equals(commitEvery)){
%>

int commitEvery_<%=cid%> = <%=commitEvery%>;

int commitCounter_<%=cid%> = 0;

conn_<%=cid%>.setAutoCommit(false);
<%
}
%>
<%
	if (usePrepareStatement ) {
%>
	java.sql.PreparedStatement pstmt_<%=cid %> = conn_<%=cid%>.prepareStatement(<%=dbquery%>);	
<%
	} else {
%>
	java.sql.Statement stmt_<%=cid %> = conn_<%=cid %>.createStatement();
<%
	}
%>
String query_<%=cid %> = "";
