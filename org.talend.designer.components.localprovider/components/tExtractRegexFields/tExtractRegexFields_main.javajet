<%@ jet 
imports="
    org.talend.core.model.process.INode 
    org.talend.core.model.process.IConnection
    org.talend.core.model.process.ElementParameterParser
    org.talend.core.model.process.IConnectionCategory
    org.talend.core.model.metadata.IMetadataTable
    org.talend.core.model.metadata.IMetadataColumn
    org.talend.designer.codegen.config.CodeGeneratorArgument
    org.talend.core.model.metadata.types.JavaTypesManager
    org.talend.core.model.metadata.types.JavaType
    java.util.List
    java.util.ArrayList
"
%>

<%
CodeGeneratorArgument codeGenArgument = (CodeGeneratorArgument) argument;
INode node = (INode)codeGenArgument.getArgument();
String cid = node.getUniqueName();

String field = ElementParameterParser.getValue(node, "__FIELD__");

String dieOnErrorStr = ElementParameterParser.getValue(node, "__DIE_ON_ERROR__");
boolean dieOnError = (dieOnErrorStr!=null&&!("").equals(dieOnErrorStr))?("true").equals(dieOnErrorStr):false;

IConnection inConn = null;
List< ? extends IConnection> inConns = node.getIncomingConnections();
if(inConns!=null){
    for (IConnection conn : inConns) {
    	if (conn.getLineStyle().hasConnectionCategory(IConnectionCategory.DATA)) {
    		inConn = conn;
    		break;
    	}
    }
}

String rejectConnName = "";
List<IMetadataColumn> rejectColumnList = null;
List<? extends IConnection> rejectConns = node.getOutgoingConnections("REJECT");
if(rejectConns != null && rejectConns.size() > 0) {
    IConnection rejectConn = rejectConns.get(0);
    rejectColumnList = rejectConn.getMetadataTable().getListColumns();
    rejectConnName = rejectConn.getName();
}

IConnection outConn = null;
String firstConnName = "";
List< ? extends IConnection> outConns = node.getOutgoingConnections();
if(outConns!=null){
    for (IConnection conn : outConns) {
    	if (conn.getLineStyle().hasConnectionCategory(IConnectionCategory.DATA)) {
    		outConn = conn;
    		firstConnName = outConn.getName();
    		break;
    	}
    }
}

if(outConns!=null){
    for (IConnection conn : outConns) {
    	if (conn.getLineStyle().hasConnectionCategory(IConnectionCategory.DATA)) {
%>
<%=conn.getName() %> = null;
<%
    	}
    }
}

//get field column
if(inConn!=null){
	IMetadataTable inputMetadataTable = inConn.getMetadataTable();
	IMetadataTable outputMetadataTable = outConn.getMetadataTable();
	int outCols = outputMetadataTable.getListColumns().size();
	for (IMetadataColumn inputCol : inputMetadataTable.getListColumns()) {
		if(inputCol.getLabel().equals(field)){
%>
    java.util.regex.Matcher matcher_<%= cid %> = pattern_<%= cid %>.matcher(<%=inConn.getName()%>.<%=field%>);
    int groupCount_<%=cid %> = matcher_<%= cid %>.groupCount();
    while(matcher_<%= cid %>.find()){
    boolean matches_<%=cid %> = true;
    
<%
		}
	}
}

//set original columns
List<IMetadataColumn> newColumnList = new ArrayList<IMetadataColumn>();
if(outConn!=null && inConn!=null){
%>
try{
	<%=outConn.getName() %> = new <%=outConn.getName() %>Struct();
<%
	IMetadataTable outputMetadataTable = outConn.getMetadataTable();
	IMetadataTable inputMetadataTable = inConn.getMetadataTable();
	for (IMetadataColumn outputCol : outputMetadataTable.getListColumns()) {
		if(outputCol.getLabel().equals(field)){
			continue;
		}
		boolean isOirginalColumn = false;
		for (IMetadataColumn inputCol : inputMetadataTable.getListColumns()) {
			if( outputCol.getLabel().equals( inputCol.getLabel()) ){
				isOirginalColumn = true;
%>
	<%=outConn.getName()%>.<%=outputCol.getLabel()%> = <%=inConn.getName()%>.<%=inputCol.getLabel()%>;
<%
				break;
			}
		}
		if(!isOirginalColumn){
			newColumnList.add(outputCol);
		}
	}
%>

String temp_<%=cid%> = null;
<%
    for(int i=0; i<newColumnList.size();i++){
    	IMetadataColumn column = newColumnList.get(i);
    	String typeToGenerate = JavaTypesManager.getTypeToGenerate(column.getTalendType(), column.isNullable());
    	String primitiveTypeToGenerate = JavaTypesManager.getTypeToGenerate(column.getTalendType(), false);
    	JavaType javaType = JavaTypesManager.getJavaTypeFromId(column.getTalendType());
    	String patternValue = column.getPattern() == null || column.getPattern().trim().length() == 0 ? null : column.getPattern();%><%
    	if(javaType == JavaTypesManager.STRING || javaType == JavaTypesManager.OBJECT){
			if(!("").equals(rejectConnName)&&rejectConnName.equals(firstConnName)
				&& (column.getLabel().equals("errorMessage") || column.getLabel().equals("errorCode"))){
			}else{
%>
<%=outConn.getName()%>.<%=column.getLabel() %> = matches_<%=cid %> && groupCount_<%=cid %> <= <%=i %>? "" : matcher_<%= cid %>.group(<%=i + 1 %>);
<%
			}
		}else{
%>
	temp_<%=cid%> = matches_<%=cid %> && groupCount_<%=cid %> <= <%=i %>? "" : matcher_<%= cid %>.group(<%=i %> + 1);
	if(temp_<%=cid %>.length() > 0) {
<%
			if(javaType == JavaTypesManager.STRING || javaType == JavaTypesManager.OBJECT) {
			} else if(javaType == JavaTypesManager.BYTE_ARRAY){ 
%>
		<%=outConn.getName() %>.<%=column.getLabel() %> = temp_<%=cid %>.getBytes();
<%
			}else if(javaType == JavaTypesManager.DATE) { 
%>
		<%=outConn.getName() %>.<%=column.getLabel() %> = ParserUtils.parseTo_Date(temp_<%=cid %>, <%= patternValue %>);
<%
			} else {
%>
		<%=outConn.getName() %>.<%=column.getLabel() %> = ParserUtils.parseTo_<%= typeToGenerate %>(temp_<%=cid %>);
<%
			}
%>
	} else {						
<%
			String defaultValue = JavaTypesManager.getDefaultValueFromJavaType(typeToGenerate, column.getDefault());
			if(defaultValue == null) {
%>
		throw new RuntimeException("Value is empty for column : '<%= column.getLabel() %>' in '<%=outConn.getName() %>' connection, value is invalid or this column should be nullable or have a default value.");
<%
			} else {
%>
		<%=outConn.getName() %>.<%=column.getLabel() %> = <%=defaultValue %>;
<%
			}
%>
	}
<%
    	}
    }
	if(!("").equals(rejectConnName) && rejectConnName.equals(firstConnName)){
%>
	<%=outConn.getName() %> = null;
<%
	}
%>
}catch(Exception ex_<%=cid %>){
<%
	if(dieOnError){
%>
	throw(ex_<%=cid %>);
<%
	}else{
		if(!("").equals(rejectConnName)&&!rejectConnName.equals(firstConnName)&&rejectColumnList != null && rejectColumnList.size() > 0) {
%>
	<%=rejectConnName %> = new <%=rejectConnName %>Struct();
<%
            for(IMetadataColumn column : outConn.getMetadataTable().getListColumns()) {
%>
    <%=rejectConnName%>.<%=column.getLabel()%> = <%=firstConnName %>.<%=column.getLabel() %>;
<%
			}
%>    
    <%=rejectConnName%>.errorMessage = ex_<%=cid %>.getMessage() + " - Line: " + tos_count_<%=node.getUniqueName() %>;
    <%=firstConnName %> = null;
<%
		} else if(("").equals(rejectConnName)){
%>
    System.err.println(ex_<%=cid %>.getMessage());
    <%=firstConnName %> = null;
<%
		} else if(rejectConnName.equals(firstConnName)){
%>
	<%=rejectConnName%>.errorMessage = ex_<%=cid %>.getMessage() + " - Line: " + tos_count_<%=node.getUniqueName() %>;
<%
		}
	}
%>
}
<%
}
%>

	
	