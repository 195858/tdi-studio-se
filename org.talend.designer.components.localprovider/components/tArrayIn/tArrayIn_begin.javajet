<%@ jet 
imports="org.talend.core.model.process.INode 
		org.talend.core.model.process.ElementParameterParser 
		org.talend.core.model.metadata.IMetadataTable 
		org.talend.core.model.metadata.IMetadataColumn 
		org.talend.core.model.process.IConnection
		org.talend.core.model.process.IConnectionCategory
		org.talend.designer.codegen.config.CodeGeneratorArgument
		java.util.List 
" 
%>

<%
CodeGeneratorArgument codeGenArgument = (CodeGeneratorArgument) argument;
INode node = (INode)codeGenArgument.getArgument();
String cid = node.getUniqueName();
List<IMetadataTable> metadatas = node.getMetadataList();
if ((metadatas!=null)&&(metadatas.size()>0)) {
    IMetadataTable metadata = metadatas.get(0);
    if (metadata!=null) {
    
    	boolean linkwith = ("true").equals(ElementParameterParser.getValue(node, "__LINK_WITH__"));
		String linkedtHashOutput = ElementParameterParser.getValue(node, "__LIST__");
		String origin = ElementParameterParser.getValue(node, "__ORIGIN__");
		String originKey = origin; 
		String originStructSuffix = origin; 
		INode rootNode = node;
		
		//if tArrayIn works with tArray together, get the real tArray node. 
		if(linkwith){
    		List<? extends INode> nodeList = node.getProcess().getGeneratingNodes();
    		for(INode n : nodeList){
    			if(n.getUniqueName().equals(linkedtHashOutput)){
    				rootNode = n;
    				break;
    			}
    		}
    		if(rootNode != node){
    			//don't get key from the DESTINATION, use the node UniqueName as key.
    			//origin = ElementParameterParser.getValue(rootNode, "__DESTINATION__");
    			origin = rootNode.getUniqueName();
    			originStructSuffix = "";
    		}
		}

        //get the input connection
        IConnection inputConn = null;
        String inComingName = "";  
        List< ? extends IConnection> connsIn = rootNode.getIncomingConnections();     
        for (IConnection conn : connsIn) {//3
			inputConn = conn;
			break; //only get the first connection
        }//3 
        
        if(inputConn != null){
        	inComingName = inputConn.getName();
        }        
        
        %>
        
        int nb_line_<%= cid %> = 0;
        java.util.List<<%=inComingName %>Struct<%=originStructSuffix %>> list_<%=cid%> = (java.util.List<<%=inComingName %>Struct<%=originStructSuffix %>>)globalMap.get("<%=originKey %>");
        if(list_<%=cid%> == null) {
            list_<%=cid%> = new java.util.ArrayList<<%=inComingName %>Struct<%=originStructSuffix %>>();
        }        
        for(<%=inComingName %>Struct<%=originStructSuffix %> row_<%=cid %> : list_<%=cid%>){
        
            <%
            //begin
            //
    		List< ? extends IConnection> conns = node.getOutgoingSortedConnections();
    		String firstConnName = "";
    		if (conns!=null) {
    			if (conns.size()>0) {
    				IConnection conn = conns.get(0);
    				firstConnName = conn.getName();
    				List<IMetadataColumn> listColumns = metadata.getListColumns();
    				int size = listColumns.size();
    				if (conn.getLineStyle().hasConnectionCategory(IConnectionCategory.DATA)) {
    					for (int i=0; i<size; i++) {
    						IMetadataColumn column = listColumns.get(i);
    						//
    						//end
    						%>					
    						<%=conn.getName() %>.<%=column.getLabel() %> = row_<%=cid %>.<%=column.getLabel() %>;
    						<%
    						//start
    						//
    					}
    				}
    			}
    			if (conns.size()>1) {
    				for (int i=1;i<conns.size();i++) {
    					IConnection connection = conns.get(i);
    					if ((connection.getName().compareTo(firstConnName)!=0)&&(connection.getLineStyle().hasConnectionCategory(IConnectionCategory.DATA))) {
    			    		for (IMetadataColumn column: metadata.getListColumns()) {
    			    		    //
    			    		    //end
    			    		    %>
    			    		    <%=connection.getName() %>.<%=column.getLabel() %> = <%=firstConnName %>.<%=column.getLabel() %>;
    			    		    <%
    			    		    //start
    			    		    //
    						}
    					}
    				}
    			}
    		}
    }
}
%>
