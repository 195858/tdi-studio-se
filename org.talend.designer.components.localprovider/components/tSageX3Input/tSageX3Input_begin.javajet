<%@ jet
	imports="
	java.util.HashMap
	java.util.List
	java.util.Map
	
	org.talend.core.model.metadata.IMetadataColumn
	org.talend.core.model.metadata.IMetadataTable
	org.talend.core.model.metadata.types.JavaType
	org.talend.core.model.metadata.types.JavaTypesManager
	org.talend.core.model.process.ElementParameterParser
	org.talend.core.model.process.IConnection
	org.talend.core.model.process.IConnectionCategory
	org.talend.core.model.process.INode
	org.talend.designer.codegen.config.CodeGeneratorArgument
	"
%>
<%
CodeGeneratorArgument codeGenArgument = (CodeGeneratorArgument) argument;
INode node = (INode)codeGenArgument.getArgument();
String cid = node.getUniqueName();
%>
<%
List<IMetadataTable> metadatas = node.getMetadataList();
if ((metadatas != null) && (metadatas.size() > 0)) { //1
	IMetadataTable metadata = metadatas.get(0);
	if (metadata != null) { //2
		List<IMetadataColumn> columnList = metadata.getListColumns();
		int nbSchemaColumns = columnList.size();			
		List<? extends IConnection> outgoingConns = node.getOutgoingSortedConnections();
		if (nbSchemaColumns > 0 && outgoingConns != null && outgoingConns.size() > 0){ //3

            String endpoint = ElementParameterParser.getValue(node, "__ENDPOINT__");
            String user = ElementParameterParser.getValue(node, "__USER__");
            String password = ElementParameterParser.getValue(node, "__PASSWORD__");
            String language = ElementParameterParser.getValue(node, "__LANGUAGE__");
            String poolAlias = ElementParameterParser.getValue(node, "__POOL_ALIAS__");
            String requestConfig = ElementParameterParser.getValue(node, "__REQUEST_CONFIG__");
            String limit = ElementParameterParser.getValue(node, "__LIMIT_SIZE__");
            
            String publicName = ElementParameterParser.getValue(node,"__PUBLICATION_NAME__");
%>
            org.talend.sage.Client client_<%=cid %> = new org.talend.sage.Client();
            client_<%=cid %>.ConnectService(<%=endpoint%>);
            client_<%=cid %>.setContext(<%=language%>,<%=user%>,<%=password%>,<%=poolAlias%>,<%=requestConfig%>);
            java.util.Map<String,String> keyValues_<%=cid%> = new java.util.HashMap<String,String>();		          
<%
            List<Map<String, String>> keys = (List<Map<String,String>>)ElementParameterParser.getObjectValue(node, "__KEYS__");            
            for(Map<String,String> keyValue:keys){
            	String key = keyValue.get("KEY");
            	String value = keyValue.get("VALUE");
%>

            	keyValues_<%=cid%>.put(<%=key%>,<%=value%>);

<%
			}
			IConnection outgoingConn = outgoingConns.get(0);
			if(outgoingConn.getLineStyle().hasConnectionCategory(IConnectionCategory.DATA)) { 
%>           
			java.util.List<org.talend.sage.Result> results_<%=cid %> = client_<%=cid %>.query(<%=publicName%>,client_<%=cid %>.createCAdxKeyValues(keyValues_<%=cid%>),<%=limit%>);
			for(org.talend.sage.Result result_<%=cid%>:results_<%=cid%>){
<%
			List<Map<String, String>> mappingList = (List<Map<String,String>>)ElementParameterParser.getObjectValue(node, "__MAPPING_INPUT__");
			Map<String,Map<String,String>> resultMapping = new HashMap<String,Map<String,String>>();
			Map<String,String> fldMapping;
			for(Map<String,String> inputMapping:mappingList){	
				fldMapping = new HashMap<String,String>();
				fldMapping.put("gID",inputMapping.get("GROUP_TABLE_ID"));
				fldMapping.put("fID",inputMapping.get("PARAMETER_NAME"));
				resultMapping.put(inputMapping.get("SCHEMA_COLUMN"),fldMapping);
			}
			for( int i = 0; i < columnList.size(); i++) {
			
				IMetadataColumn column = columnList.get(i);
				
				String typeToGenerate = JavaTypesManager.getTypeToGenerate(column.getTalendType(), column.isNullable());
				
				JavaType javaType = JavaTypesManager.getJavaTypeFromId(column.getTalendType());
				
				String patternValue = column.getPattern() == null || column.getPattern().trim().length() == 0 ? null : column.getPattern();
				
				Map<String,String> fieldMapping = resultMapping.get(column.getLabel());
%>
				if(result_<%=cid%>.getValue(<%=fieldMapping.get("gID")%>,<%=fieldMapping.get("fID")%>)!=null){
    			<%	
    				if (javaType == JavaTypesManager.LIST) {	
    			%>
    					<%=outgoingConn.getName()%>.<%=column.getLabel()%> = result_<%=cid%>.getListValue(<%=fieldMapping.get("gID")%>,<%=fieldMapping.get("fID")%>);
    			<%				
    				}else if (javaType == JavaTypesManager.STRING) {
    			%>				
    					<%=outgoingConn.getName()%>.<%=column.getLabel()%> = result_<%=cid%>.getStringValue(<%=fieldMapping.get("gID")%>,<%=fieldMapping.get("fID")%>);
    			<%
    				} else if(javaType == JavaTypesManager.DATE) { // Date
    			%>
    					<%=outgoingConn.getName()%>.<%=column.getLabel()%> = ParserUtils.parseTo_Date(result_<%=cid%>.getStringValue(<%=fieldMapping.get("gID")%>,<%=fieldMapping.get("fID")%>), <%= patternValue %>);
    			<%
    				}  else if(javaType == JavaTypesManager.OBJECT) { // OBJECT
    			%>
    					<%=outgoingConn.getName()%>.<%=column.getLabel()%> = result_<%=cid%>.getValue(<%=fieldMapping.get("gID")%>,<%=fieldMapping.get("fID")%>);
    			<%
    				} else  { // other
    			%>							
    					<%=outgoingConn.getName()%>.<%=columnList.get(i).getLabel()%> = ParserUtils.parseTo_<%= typeToGenerate %>(result_<%=cid%>.getStringValue(<%=fieldMapping.get("gID")%>,<%=fieldMapping.get("fID")%>));	
    			<%
    				}
    			%>
    			}else{
    				<%=outgoingConn.getName()%>.<%=columnList.get(i).getLabel()%> = <%=JavaTypesManager.getDefaultValueFromJavaType(typeToGenerate)%>;
    			}
				
<%
			}
			}
		}//3
	}//2
}//1
%>



        
