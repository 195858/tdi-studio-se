<%@ jet
imports="
		org.talend.designer.codegen.config.CodeGeneratorArgument
		org.talend.core.model.process.INode
		org.talend.core.model.process.ElementParameterParser
		org.talend.core.model.metadata.IMetadataTable
		org.talend.core.model.metadata.types.JavaTypesManager
		org.talend.core.model.metadata.MappingTypeRetriever
		org.talend.core.model.metadata.MetadataTalendType
		org.talend.core.model.process.IConnection
		java.util.List
		java.util.ArrayList
		java.util.Map
		java.util.HashMap
"
skeleton="../templates/db_output_bulk.skeleton"
%>
<%@ include file="../templates/DB/Output/HelpClass.javajet"%>
<%
	class DBOutputBeginUtil extends DefaultDBOutputUtil{
		private boolean convertToUppercase;
		private boolean isLog4jEnabled;
		public void beforeComponentProcess(INode node){
			super.beforeComponentProcess(node);
			cid = node.getUniqueName();
			dbschema = ElementParameterParser.getValue(node,"__TABLESCHEMA__");
			convertToUppercase = ("true").equals(ElementParameterParser.getValue(node, "__CONVERT_COLUMN_TABLE_TO_UPPERCASE__"));
			isLog4jEnabled = ("true").equals(ElementParameterParser.getValue(node.getProcess(), "__LOG4J_ACTIVATE__"));
		}
		public void setURL(INode node) {
			String dbproperties = ElementParameterParser.getValue(node, "__PROPERTIES__");
			if(dbproperties == null || ("\"\"").equals(dbproperties) || ("").equals(dbproperties)) {
			%>
				String url_<%=cid %> = "jdbc:db2://" + <%=dbhost%> + ":" + <%=dbport%> + "/" + <%=dbname%>;
			<%
			} else {
			%>
				String url_<%=cid %> = "jdbc:db2://" + <%=dbhost%> + ":" + <%=dbport%> + "/" + <%=dbname%> + ":" + <%=dbproperties%>;
			<%
			}
		}
		public String getDirverClassName(INode node){
			return "com.ibm.db2.jcc.DB2Driver";
		}
		public void defineConnectionParameter(INode node){
			if(("true").equals(useExistingConn)) {
				String connection = ElementParameterParser.getValue(node,"__CONNECTION__");
				String username = "username_" + connection;
				%>
				String dbUser_<%=cid %> = (String)globalMap.get("<%=username%>");
			<%
			}
		}
		public void defineSchema(INode node,Manager manager){
			defineSchemaTable(node,manager,"tableschema_");
		}

		public void addSchemaToTable(Manager manager){
		%>
			if(dbschema_<%=cid%> == null || dbschema_<%=cid%>.trim().length() == 0) {
				tableName_<%=cid%> = <%=table%><%=convertToUppercase ? ".toUpperCase()" : ""%>;
			} else {
				tableName_<%=cid%> = dbschema_<%=cid%> + "<%=manager.getRProtectedChar()%>.<%=manager.getLProtectedChar()%>" + <%=table%><%=convertToUppercase ? ".toUpperCase()" : ""%>;
			}
		<%
		}

		public void prepareColumn(List<Column> stmtStructure){
			if(convertToUppercase) {
				for(Column column : stmtStructure) {
					if(column.isReplaced()) {
						for (Column replacedColumn : column.getReplacement()) {
							replacedColumn.setColumnName(replacedColumn.getColumnName().toUpperCase());
						}
					} else if(!column.isDynamic()){
						column.setColumnName(column.getColumnName().toUpperCase());
					}
				}
			}
		}
	}
	dbOutputBeginUtil = new DBOutputBeginUtil();
%>
<%@ include file="../templates/DB/Output/AbstractDBOutputBegin.javajet"%>
