<%@ jet 
imports="
    org.talend.core.model.process.INode 
    org.talend.designer.codegen.config.CodeGeneratorArgument
    org.talend.core.model.process.ElementParameterParser
" 
%>

<% 
CodeGeneratorArgument codeGenArgument = (CodeGeneratorArgument) argument;
INode node = (INode)codeGenArgument.getArgument();
String cid = node.getUniqueName();
String fileName = ElementParameterParser.getValue(node,"__FILENAME__");
String encoding = ElementParameterParser.getValue(node,"__ENCODING__");
%>
String fileName_<%=cid%> = <%=fileName%>;

String resultMsg_<%=cid %> = msg_<%=cid %>.encode();
<%
if(("true").equals(ElementParameterParser.getValue(node,"__CREATE__"))){
%>         
String directory_<%=cid%> = null;
if((fileName_<%=cid%>.indexOf("/") != -1)) {  
    directory_<%=cid%> = fileName_<%=cid%>.substring(0, fileName_<%=cid%>.lastIndexOf("/"));            
} else {
    directory_<%=cid%> = "";
}
//create directory only if not exists
if(directory_<%=cid%> != null && directory_<%=cid%>.trim().length() != 0) {
    java.io.File dir_<%=cid%> = new java.io.File(directory_<%=cid%>);
    if(!dir_<%=cid%>.exists()) {
        dir_<%=cid%>.mkdirs();
    }
}
<%
}
%>
java.io.Writer out<%=cid %> = new java.io.BufferedWriter(new java.io.OutputStreamWriter(new java.io.FileOutputStream(fileName_<%=cid%>),<%=encoding%>));
out<%=cid %>.write(resultMsg_<%=cid %>);
out<%=cid %>.close();

