<%@ jet 
imports="
            java.util.List
            java.util.Map
            
            org.talend.core.model.process.EConnectionType
            org.talend.core.model.process.ElementParameterParser
            org.talend.core.model.process.IConnection
            org.talend.core.model.process.INode
            org.talend.designer.codegen.config.CodeGeneratorArgument
" 
%>

<% 
CodeGeneratorArgument codeGenArgument = (CodeGeneratorArgument) argument;
INode node = (INode)codeGenArgument.getArgument();
String cid = node.getUniqueName();

String hl7Version = ElementParameterParser.getValue(node, "__HL7_VER__");

String fileName = ElementParameterParser.getValue(node,"__FILENAME__");
String encoding = ElementParameterParser.getValue(node,"__ENCODING__");
List<Map<String, String>> rootTable = (List<Map<String,String>>)ElementParameterParser.getObjectValue(node, "__ROOT__");
%>
System.setProperty("org.apache.commons.logging.Log", "org.apache.commons.logging.impl.NoOpLog");

String fileName_<%=cid%> = <%=fileName%>;

<%
	List< ? extends IConnection> incomingConns = node.getIncomingConnections();
	for (IConnection incomingConn : incomingConns) {
		if ( incomingConn.getLineStyle().equals(EConnectionType.FLOW_MERGE)) {
%>
int i_<%=incomingConn.getName() %>_<%=cid %> = 0;
<%
		}
	}
%>
ca.uhn.hl7v2.util.Terser terser_<%=cid %> = null;
ca.uhn.hl7v2.model.Message msg_<%=cid %> = null;
<%
	if(("true").equals(ElementParameterParser.getValue(node,"__CREATE__"))){
%>         
String directory_<%=cid%> = null;
if((fileName_<%=cid%>.indexOf("/") != -1)) {  
    directory_<%=cid%> = fileName_<%=cid%>.substring(0, fileName_<%=cid%>.lastIndexOf("/"));            
} else {
    directory_<%=cid%> = "";
}
//create directory only if not exists
if(directory_<%=cid%> != null && directory_<%=cid%>.trim().length() != 0) {
    java.io.File dir_<%=cid%> = new java.io.File(directory_<%=cid%>);
    if(!dir_<%=cid%>.exists()) {
        dir_<%=cid%>.mkdirs();
    }
}
<%
	}
%>
String tmpValue_<%=cid %> = "";
java.io.Writer out<%=cid %> = new java.io.BufferedWriter(new java.io.OutputStreamWriter(new java.io.FileOutputStream(fileName_<%=cid%>),<%=encoding%>));
