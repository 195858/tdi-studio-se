<%@ jet 
imports="
			org.talend.core.model.process.INode 
			org.talend.core.model.process.ElementParameterParser 
			org.talend.designer.codegen.config.CodeGeneratorArgument
		" 
%>

<%
	CodeGeneratorArgument codeGenArgument = (CodeGeneratorArgument) argument;
	
	INode node = (INode)codeGenArgument.getArgument();
	
	String cid = node.getUniqueName();
	
	String dbname= ElementParameterParser.getValue(node, "__DBNAME__");
	
	String username = ElementParameterParser.getValue(node, "__USER__");
	
	String password = ElementParameterParser.getValue(node, "__PASS__");
	
    String commitEvery = ElementParameterParser.getValue(node, "__COMMIT_EVERY__");
    
    String dbversion = ElementParameterParser.getValue(node, "__DB_VERSION__");

    String dbquery= ElementParameterParser.getValue(node, "__QUERY__");
	       dbquery = dbquery.replaceAll("\n"," ");
    	   dbquery = dbquery.replaceAll("\r"," ");
	boolean usePrepareStatement = "true".equals(ElementParameterParser.getValue(node,"__USE_PREPAREDSTATEMENT__"));
	
	String dbproperties = ElementParameterParser.getValue(node, "__PROPERTIES__");
%>
boolean whetherReject_<%=cid%> = false;
java.sql.Connection conn_<%=cid%> = null;
<%
boolean useExistingConnection = "true".equals(ElementParameterParser.getValue(node,"__USE_EXISTING_CONNECTION__"));
if(useExistingConnection) {
	String connection = ElementParameterParser.getValue(node,"__CONNECTION__");
	String conn = "conn_" + connection;
	%>
	conn_<%=cid%> = (java.sql.Connection)globalMap.get("<%=conn%>");
	<%
} else {   
    %>	
java.lang.Class.forName("sun.jdbc.odbc.JdbcOdbcDriver");

<%if ("Access_2003".equalsIgnoreCase(dbversion)) {
%>
	String url_<%=cid %> = "jdbc:odbc:Driver={Microsoft Access Driver (*.mdb)};DBQ=" + <%=dbname%>;
<%
}else if ("Access_2007".equalsIgnoreCase(dbversion)) {
%>
	String url_<%=cid %> = "jdbc:odbc:Driver={Microsoft Access Driver (*.mdb, *.accdb)};DBQ=" + <%=dbname%>;
<%
}%>
	String userName_<%=cid %> = <%=username%>;
	String password_<%=cid %> = <%=password%>;

<%
	if(dbproperties == null || ("\"\"").equals(dbproperties) || ("").equals(dbproperties)) {
%>
	conn_<%=cid%> = java.sql.DriverManager.getConnection(url_<%=cid %>, userName_<%=cid %>, password_<%=cid %>);
<%
	} else {
%>
	String atnParams_<%=cid%> = <%=dbproperties%>;
	atnParams_<%=cid%> = atnParams_<%=cid%>.replaceAll("&", "\n");
	java.util.Properties atnParamsPrope_<%=cid%> = new java.util.Properties();
	atnParamsPrope_<%=cid%>.put("user",userName_<%=cid %>);
	atnParamsPrope_<%=cid%>.put("password",password_<%=cid %>);
	atnParamsPrope_<%=cid%>.load(new java.io.ByteArrayInputStream(atnParams_<%=cid%>.getBytes()));
  
	conn_<%=cid%> =  java.sql.DriverManager.getConnection(url_<%=cid%>, atnParamsPrope_<%=cid%>);
<%
	}
%>

<%
	}
%>
<%
if(!("").equals(commitEvery)&&!("0").equals(commitEvery)){
%>

int commitEvery_<%=cid%> = <%=commitEvery%>;

int commitCounter_<%=cid%> = 0;

conn_<%=cid%>.setAutoCommit(false);
<%
}
%>

<%
	if(usePrepareStatement){
%>
		java.sql.PreparedStatement pstmt_<%=cid %> = conn_<%=cid%>.prepareStatement(<%=dbquery%>);	
<%
	}else{
%>
		java.sql.Statement stmt_<%=cid %> = conn_<%=cid %>.createStatement();
<%
	}
%>
String query_<%=cid %> = "";