<%@ jet 
imports="
    org.talend.core.model.process.INode 
    org.talend.core.model.metadata.IMetadataTable 
    org.talend.core.model.process.ElementParameterParser
    org.talend.designer.codegen.config.CodeGeneratorArgument
    java.util.List
    java.util.Map
"
%>

<%
CodeGeneratorArgument codeGenArgument = (CodeGeneratorArgument) argument;
INode node = (INode)codeGenArgument.getArgument();
String cid = node.getUniqueName();

String directory = ElementParameterParser.getValue(node, "__DIRECTORY__");
String uri = ElementParameterParser.getValue(node, "__URI__");
String filename = ElementParameterParser.getValue(node, "__FILENAME__");

%>
	String fileName<%=cid %> = <%=(filename.compareTo("")!=0)?filename:"\"\""%>;
	
	//open directory
	java.io.File dir<%=cid %> = new java.io.File(<%=directory %>);
        		
    // open url stream
	java.net.URL url<%=cid %> = new java.net.URL(<%=uri %>);
	java.net.URLConnection conn<%=cid %> = url<%=cid %>.openConnection();
	
	//open file dans la directory
	if (fileName<%=cid %>.compareTo("")==0) {
		fileName<%=cid %> = url<%=cid %>.getFile();
		if (fileName<%=cid %>.compareTo("")==0) {
			fileName<%=cid %> = "defaultfilename.txt";
		}
	}
    final java.io.DataOutputStream out<%=cid%>= new java.io.DataOutputStream(new java.io.FileOutputStream(new java.io.File(
            dir<%=cid %>, fileName<%=cid %>))); 
	// copy file
    final java.io.DataInputStream in<%=cid%> = new java.io.DataInputStream(conn<%=cid %>.getInputStream());
	//close opened object
    byte[] buffer<%=cid%> = new byte[1024];
    int count<%=cid%> = 0;
    while ((count<%=cid%> = in<%=cid%>.read(buffer<%=cid%>)) > 0) {
        out<%=cid%>.write(buffer<%=cid%>, 0, count<%=cid%>);
    }
    // close opened object
    in<%=cid%>.close();
    out<%=cid%>.close();
