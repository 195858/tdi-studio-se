<%@ jet 
imports="
    org.talend.core.model.process.INode 
    org.talend.core.model.process.ElementParameterParser 
    org.talend.core.model.metadata.IMetadataTable 
    org.talend.core.model.metadata.IMetadataColumn 
    org.talend.designer.codegen.config.CodeGeneratorArgument
    org.talend.core.model.process.IConnection
    org.talend.core.model.metadata.types.JavaTypesManager
    org.talend.core.model.metadata.types.JavaType    
    java.util.List
" 
%>

<%
CodeGeneratorArgument codeGenArgument = (CodeGeneratorArgument) argument;
INode node = (INode)codeGenArgument.getArgument();
List<IMetadataTable> metadatas = node.getMetadataList();
if ((metadatas!=null)&&(metadatas.size()>0)) {//1
    IMetadataTable metadata = metadatas.get(0);    
    if (metadata!=null) {//2
       
        String cid = node.getUniqueName();
        String normalizeColumn = ElementParameterParser.getValue(node, "__NORMALIZE_COLUMN__");
        String deduplicate = ElementParameterParser.getValue(node, "__DEDUPLICATE__");
        boolean useCSV = ElementParameterParser.getValue(node, "__CSV_OPTION__").equals("true");
        String escapeMode = ElementParameterParser.getValue(node, "__ESCAPE_CHAR__");
        
        String delim = ElementParameterParser.getValue(node, "__ITEMSEPARATOR__");
        if(useCSV){
        	delim = delim.substring(1,delim.length()-1);
        	if(delim.equals("'")){
        		delim = "\\'";
        	}
        }
        
    	String textEnclosure1 = ElementParameterParser.getValue(node, "__TEXT_ENCLOSURE__");
    	String textEnclosure = textEnclosure1.substring(1,textEnclosure1.length()-1);
    	if ("".equals(textEnclosure)) textEnclosure = "\0";
    	if(textEnclosure.equals("'")){
    		textEnclosure = "\\'";
    	}        
        
        String incomingConnName = null;
        String outgoingConnName = null;

        List< ? extends IConnection> inConns = node.getIncomingConnections();
        if (inConns != null && !inConns.isEmpty()) {
            IConnection inConn = inConns.get(0);
            incomingConnName = inConn.getName();
        }
        
        List< ? extends IConnection> outConns = node.getOutgoingConnections();
        if (outConns != null && !outConns.isEmpty()) {
            IConnection outConn = outConns.get(0);
            outgoingConnName = outConn.getName();
        }
        List<IMetadataColumn> metadataColumns = metadata.getListColumns();
        if(incomingConnName != null && outgoingConnName != null && 
                metadataColumns != null && !metadataColumns.isEmpty()) {//3
            %>
            if(<%=incomingConnName %>.<%=normalizeColumn%> != null && <%=incomingConnName %>.<%=normalizeColumn%>.trim().length() > 0) {
                    <%if(useCSV){%> 				
                        com.csvreader.CsvReader reader_<%=cid%> = new com.csvreader.CsvReader(new java.io.StringReader(<%=incomingConnName %>.<%=normalizeColumn%>), '<%=delim %>');
                        reader_<%=cid%>.setEscapeMode(com.csvreader.CsvReader.<%=escapeMode %>);
                        reader_<%=cid%>.setTextQualifier('<%=textEnclosure %>');
                        if (reader_<%=cid%>.readRecord()) {
                            normalizeRecord_tNormalize_1 = reader_<%=cid%>.getValues();
                        } else {
                            normalizeRecord_tNormalize_1 = new String[1];
                        }
                    <% } else { %>
                        	normalizeRecord_<%=cid%> = <%=incomingConnName %>.<%=normalizeColumn%>.split(<%=delim %>);
                    <%
                    }
                    %>               
            } else {
                normalizeRecord_<%=cid%> = new String[1];
            }
            for(int i_<%=cid%> = 0 ; i_<%=cid%> < normalizeRecord_<%=cid%>.length ; i_<%=cid%>++) {
                currentRecord_<%=cid%> = new StringBuilder();               
                <%
                if(deduplicate.equals("true")) {//check deduplicate start
                    for(int i = 0 ; i < metadataColumns.size() ; i++) {
                        IMetadataColumn metadataColumn = (IMetadataColumn)metadataColumns.get(i);
                        JavaType javaType = JavaTypesManager.getJavaTypeFromId(metadataColumn.getTalendType());
                        String typeName = JavaTypesManager.getTypeToGenerate(metadataColumn.getTalendType(), metadataColumn.isNullable());
                        if(!metadataColumn.getLabel().equals(normalizeColumn)) {
                            if(javaType == JavaTypesManager.DATE) {
                                %>
                                tmp_<%=cid%> = <%=incomingConnName%>.<%=metadataColumn.getLabel()%> == null ? null : String.valueOf(<%=incomingConnName%>.<%=metadataColumn.getLabel()%>.getTime());
                                <%
                            } else if(javaType == JavaTypesManager.BYTE || 
                                    javaType == JavaTypesManager.SHORT || 
                                    javaType == JavaTypesManager.FLOAT ||
                                    javaType == JavaTypesManager.DOUBLE ||
                                    javaType == JavaTypesManager.LONG ||
                                    javaType == JavaTypesManager.INTEGER || 
                                    javaType == JavaTypesManager.BOOLEAN) {
                                if(typeName.equals("Byte") || 
                                        typeName.equals("Short") || 
                                        typeName.equals("Float") || 
                                        typeName.equals("Double") || 
                                        typeName.equals("Long") || 
                                        typeName.equals("Integer") || 
                                        typeName.equals("Boolean")) {                    
                                    %>
                                    tmp_<%=cid%> = <%=incomingConnName%>.<%=metadataColumn.getLabel()%> == null ? null : <%=incomingConnName%>.<%=metadataColumn.getLabel()%>.toString();
                                    <%
                                } else {
                                    %>
                                    tmp_<%=cid%> = String.valueOf(<%=incomingConnName%>.<%=metadataColumn.getLabel()%>);
                                    <%
                                }
                            } else if(javaType == JavaTypesManager.BYTE_ARRAY) {
                                %>
                                tmp_<%=cid%> = <%=incomingConnName%>.<%=metadataColumn.getLabel()%> == null ? null : new String(<%=incomingConnName%>.<%=metadataColumn.getLabel()%>);
                                <%
                            } else if(javaType == JavaTypesManager.STRING){
                                %>
                                tmp_<%=cid%> = <%=incomingConnName%>.<%=metadataColumn.getLabel()%> == null ? null : String.valueOf(<%=incomingConnName%>.<%=metadataColumn.getLabel()%>);
                                <%
                            } else {
                                %>
                                tmp_<%=cid%> = String.valueOf(<%=incomingConnName%>.<%=metadataColumn.getLabel()%>);
                                <%
                            }
                            %>
                            if(tmp_<%=cid%> != null){
                                currentRecord_<%=cid%>.append(tmp_<%=cid%> + tmp_<%=cid%>.length());
                            }
                            <%
                        } else {
                            %>
                            if(normalizeRecord_<%=cid%>[i_<%=cid%>] != null) {
                                currentRecord_<%=cid%>.append(normalizeRecord_<%=cid%>[i_<%=cid%>] + normalizeRecord_<%=cid%>[i_<%=cid%>].length());
                            }
                            <%
                        }
                    }
                    %>
                    if(!recordSet_<%=cid%>.contains(currentRecord_<%=cid%>.toString())) {
                        recordSet_<%=cid%>.add(currentRecord_<%=cid%>.toString());
                    } else {
                        continue;
                    }                    
                <%
                }//check deduplicate end                
                for(IMetadataColumn metadataColumn : metadataColumns) {
                    if(metadataColumn.getLabel().equals(normalizeColumn)) {
                        %>
                        <%=outgoingConnName%>.<%=metadataColumn.getLabel()%> = normalizeRecord_<%=cid%>[i_<%=cid%>];
                        <%
                    } else {
                        %>
                        <%=outgoingConnName%>.<%=metadataColumn.getLabel()%> = <%=incomingConnName%>.<%=metadataColumn.getLabel()%>;
                        <%
                    }
                }
                %>

            <%
        }
        //3
    }
    //2    
}
//1
%>