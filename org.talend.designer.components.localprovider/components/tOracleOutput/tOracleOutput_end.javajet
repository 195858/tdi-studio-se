<%@ jet 
imports="
	org.talend.designer.codegen.config.CodeGeneratorArgument
	org.talend.core.model.process.INode
	org.talend.core.model.process.ElementParameterParser
	org.talend.core.model.process.IConnection
    java.util.List
"
%>

<%
	CodeGeneratorArgument codeGenArgument = (CodeGeneratorArgument) argument;
	INode node = (INode)codeGenArgument.getArgument();
	
	String cid = node.getUniqueName();
	
	String dataAction = ElementParameterParser.getValue(node,"__DATA_ACTION__");
	
	String commitEvery = ElementParameterParser.getValue(node, "__COMMIT_EVERY__");
	
	String useExistingConn = ElementParameterParser.getValue(node,"__USE_EXISTING_CONNECTION__");
    String dieOnError = ElementParameterParser.getValue(node, "__DIE_ON_ERROR__");


    String rejectConnName = null;
    List<? extends IConnection> rejectConns = node.getOutgoingConnections("REJECT");
    if(rejectConns != null && rejectConns.size() > 0) {
        IConnection rejectConn = rejectConns.get(0);
        rejectConnName = rejectConn.getName();
    }

	
    if(dataAction.equals("INSERT_OR_UPDATE")) {
        %>
        if(pstmtUpdate_<%=cid%> != null){

            pstmtUpdate_<%=cid %>.close();
            
        } 
        if(pstmtInsert_<%=cid %> != null){

            pstmtInsert_<%=cid %>.close();
            
        }
        if(pstmt_<%=cid %> != null) {

            pstmt_<%=cid %>.close();
            
        }        
        <%
    } else if(dataAction.equals("UPDATE_OR_INSERT")) {
        %>
        if(pstmtUpdate_<%=cid%> != null){

            pstmtUpdate_<%=cid %>.close();
            
        } 
        if(pstmtInsert_<%=cid %> != null){

            pstmtInsert_<%=cid %>.close();
            
        }        
        <%
    } else { // dataAction equals "INSERT" or "UPDATE" or "DELETE" 
        %>
                <%if (rejectConnName==null) {
                %>                
                try {
                	
            	    	<%if (dataAction.equals("INSERT")) {
            	    	%>
            	    		pstmt_<%=cid %>.executeBatch();
            	    		insertedCount_<%=cid%> +=pstmt_<%=cid %>.getUpdateCount(); 
            	    	<%
            	    	}else if (dataAction.equals("UPDATE")) {
            	    	%>
            	    		pstmt_<%=cid %>.executeBatch();
            	    		updatedCount_<%=cid%> += pstmt_<%=cid %>.getUpdateCount();
            	    	<%
            	    	}else if (dataAction.equals("DELETE")) {
            	    	%>
            	    		pstmt_<%=cid %>.executeBatch();
            	    	    deletedCount_<%=cid%> += pstmt_<%=cid %>.getUpdateCount();
            	    	<%
            	    	}%>            	    
                }catch (java.sql.BatchUpdateException e){
                	<%if(dieOnError.equals("true")) {
                	%>
                		throw(e);
                	<%
                	}else {
                	%>
                	System.out.println(e.getMessage());
                	<%
                	}%>                	
            	}                                  
                <%
                }%>        
        if(pstmt_<%=cid %> != null) {
            pstmt_<%=cid %>.close();            
        }        
        <%
    }   
    %>

    <%
	if(!useExistingConn.equals("true"))
	{
		if(!commitEvery.equals("") && !commitEvery.equals("0"))
		{
		    %>
		    
		    
		    conn_<%=cid%>.commit();
		    <%
		}
		%>	
    	conn_<%=cid%> .close();
    	<%
	}
    %>

	nb_line_deleted_<%=cid%>=nb_line_deleted_<%=cid%>+ deletedCount_<%=cid%>;
	nb_line_update_<%=cid%>=nb_line_update_<%=cid%> + updatedCount_<%=cid%>;
	nb_line_inserted_<%=cid%>=nb_line_inserted_<%=cid%> + insertedCount_<%=cid%>;

    globalMap.put("<%=cid %>_NB_LINE",nb_line_<%=cid%>);
    globalMap.put("<%=cid %>_NB_LINE_UPDATED",nb_line_update_<%=cid%>);
    globalMap.put("<%=cid %>_NB_LINE_INSERTED",nb_line_inserted_<%=cid%>);
    globalMap.put("<%=cid %>_NB_LINE_DELETED",nb_line_deleted_<%=cid%>);