<%@ jet 
package="org.talend.designer.codegen.translators" 
imports="
    org.talend.core.model.process.INode 
    org.talend.core.model.metadata.IMetadataTable 
    org.talend.core.model.process.ElementParameterParser
    org.talend.designer.codegen.config.CodeGeneratorArgument
    org.talend.designer.runprocess.ProcessorUtilities
    org.talend.designer.runprocess.ProcessorException
    java.util.List
"
class="RunJobMain"
%>

<%
	CodeGeneratorArgument codeGenArgument = (CodeGeneratorArgument) argument;
	INode node = (INode)codeGenArgument.getArgument();
	String cid = node.getUniqueName();
	
//	String interpreterPath = "<interpreter_path>";
//    if (codeGenArgument.getInterpreterPath() != null) {
//        interpreterPath = codeGenArgument.getInterpreterPath();
//        interpreterPath = interpreterPath.replace("\\","/");
//    }

//    String libPath = "<library_path>";
//    if (codeGenArgument.getLibPath() != null) {
//        libPath = codeGenArgument.getLibPath();
//        libPath = libPath.replace("\\","/");
//    }

//    String runtimeFilePath = "<runtime_path>";
//    if (codeGenArgument.getRuntimeFilePath() != null) {
//        runtimeFilePath = codeGenArgument.getRuntimeFilePath();
//        runtimeFilePath = runtimeFilePath.replace("\\","/");
//    }

//    String currentProjectName = "<project_name>";
//    if (codeGenArgument.getCurrentProjectName() != null) {
//        currentProjectName = codeGenArgument.getCurrentProjectName();
//    }
    
    String process = ElementParameterParser.getValue(node,"__PROCESS_TYPE_PROCESS__");
    String context = ElementParameterParser.getValue(node,"__PROCESS_TYPE_CONTEXT__");
    process = process.replace("'", "");
    context = context.replace("'", "");
    String[] codeOptions = new String[] {"--father_pid=\"+pid+\"", "--root_pid=\"+rootPid+\""};
    String[] commandLine = new String[] {"<command>"};
    try {
    	commandLine = ProcessorUtilities.getCommandLine(true, process, context, codeOptions);
    } catch (ProcessorException e) {
    }
%>

Runtime runtime = Runtime.getRuntime();
final Process ps<%=cid %> = runtime.exec(new String[] {
<%
for (int i=0; i<commandLine.length; i++) {
%>
"<%=commandLine[i] %>"<%if (i <= (commandLine.length -2)) {%>,<%}%>
<%
}
%>
});