<%@ jet 
	imports="
	    org.talend.core.model.process.INode
    	org.talend.designer.codegen.config.CodeGeneratorArgument
    	org.talend.core.model.process.ElementParameterParser
    	org.talend.core.model.metadata.IMetadataTable
		org.talend.core.model.metadata.IMetadataColumn
    	org.talend.core.model.process.IConnection
		java.util.Map
    	java.util.List
	"
%>
<%
CodeGeneratorArgument codeGenArgument = (CodeGeneratorArgument) argument;
INode node = (INode)codeGenArgument.getArgument();

String cid = ElementParameterParser.getValue(node, "__CID__");

String connName = "";
if (node.getIncomingConnections().size()==1) {
	IConnection conn = node.getIncomingConnections().get(0);
	connName = conn.getName();
}

///////////////
List<IMetadataTable> metadatas = node.getMetadataList();
if ((metadatas!=null)&&(metadatas.size()>0) && !connName.equals("")) {//HSS_____0
	IMetadataTable metadata = metadatas.get(0);
    List<IMetadataColumn> columnList = metadata.getListColumns();
%>
            if (rowsInBuffer_1_<%=cid %> > 0) {
                java.util.Arrays.<rowStruct_<%=cid %>> sort(buffer_1_<%=cid %>, 0, rowsInBuffer_1_<%=cid %>, comparator_1_<%=cid %>);
                
                java.io.File file_<%=cid %> = new java.io.File(workDirectory_<%=cid %> + "/TEMP_" + files_1_<%=cid %>.size());
                
                file_<%=cid %>.deleteOnExit();
                
                java.io.ObjectOutputStream rw_<%=cid %> = new java.io.ObjectOutputStream(new java.io.BufferedOutputStream(
                        new java.io.FileOutputStream(file_<%=cid %>)));
                for (int i = 0; i < rowsInBuffer_1_<%=cid %>; i++) {
                    buffer_1_<%=cid %>[i].writeData(rw_<%=cid %>);
                }
                
                rw_<%=cid %>.close();

                files_1_<%=cid %>.add(file_<%=cid %>);

                rowsInBuffer_1_<%=cid %> = 0;
            }
            buffer_1_<%=cid %> = null;
            

            // ////////////////////////////////////
            class FileRowIterator_<%=cid %> implements java.util.Iterator<rowStruct_<%=cid %>> {

                rowStruct_<%=cid %>[] buffer;

                ObjectInputStream ois;

                int count = 0;

                int index = 0;

                public FileRowIterator_<%=cid %>(java.io.File file, int bufferSize) throws IOException {
                    ois = new java.io.ObjectInputStream(new java.io.BufferedInputStream(new java.io.FileInputStream(file)));
                    buffer = new rowStruct_<%=cid %>[bufferSize];
                }

                private void load() {
                    count = 0;
                    index = 0;
                    try {
                        while (ois.available() > 0 && count < buffer.length) {
                            buffer[count] = new rowStruct_<%=cid %>();
                            buffer[count].readData(ois);
                            count++;
                        }
                    } catch (IOException e) {
                        throw new RuntimeException(e);
                    }
                }

                public boolean hasNext() {
                    try {
                        return index < count || ois.available() > 0;
                    } catch (IOException e) {
                        throw new RuntimeException(e);
                    }
                }

                public rowStruct_<%=cid %> next() {
                    if (index >= count) {
                        load();
                    }

                    return buffer[index++];
                }

                public void remove() {
                    throw new UnsupportedOperationException();
                }

                public void close() throws IOException {
                    if (ois != null) {
                        ois.close();
                        ois = null;
                    }
                }
            }

<%
}//HSS_____0
%>