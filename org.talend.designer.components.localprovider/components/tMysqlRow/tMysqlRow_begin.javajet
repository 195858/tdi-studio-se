<%@ jet 
imports="
			org.talend.core.model.process.INode 
			org.talend.core.model.process.ElementParameterParser 
			org.talend.designer.codegen.config.CodeGeneratorArgument
		" 
%>

<%
	CodeGeneratorArgument codeGenArgument = (CodeGeneratorArgument) argument;
	INode node = (INode)codeGenArgument.getArgument();
	String cid = node.getUniqueName();
	
	String dbhost = ElementParameterParser.getValue(node, "__HOST__");
	String dbport = ElementParameterParser.getValue(node, "__PORT__");
	String dbname= ElementParameterParser.getValue(node, "__DBNAME__");
	String dbproperties = ElementParameterParser.getValue(node, "__PROPERTIES__");
	String dbuser= ElementParameterParser.getValue(node, "__USER__");
    String commitEvery = ElementParameterParser.getValue(node, "__COMMIT_EVERY__");
    String dbquery= ElementParameterParser.getValue(node, "__QUERY__");
	       
    	   dbquery = org.talend.core.model.utils.NodeUtil.replaceCRLFInMEMO_SQL(dbquery);
    
	boolean usePrepareStatement = "true".equals(ElementParameterParser.getValue(node,"__USE_PREPAREDSTATEMENT__"));
%>

java.sql.Connection conn_<%=cid%> = null;
<%
String useExistingConn = ElementParameterParser.getValue(node,"__USE_EXISTING_CONNECTION__");
if(("true").equals(useExistingConn)) {
	String connection = ElementParameterParser.getValue(node,"__CONNECTION__");
	String conn = "conn_" + connection;;
	%>
	conn_<%=cid%> = (java.sql.Connection)globalMap.get("<%=conn%>");
<%	
	INode connectionNode = null; 
	for (INode processNode : node.getProcess().getGeneratingNodes()) { 
		if(connection.equals(processNode.getUniqueName())) { 
			connectionNode = processNode; 
			break; 
		} 
	} 
	boolean specify_alias = "true".equals(ElementParameterParser.getValue(connectionNode, "__SPECIFY_DATASOURCE_ALIAS__"));
	if(specify_alias){
		String alias = ElementParameterParser.getValue(connectionNode, "__DATASOURCE_ALIAS__"); 
%> 
		if (null == conn_<%=cid%>) {
			java.util.Map<String, routines.system.TalendDataSource> dataSources_<%=cid%> = (java.util.Map<String, routines.system.TalendDataSource>) globalMap.get(KEY_DB_DATASOURCES); 
			conn_<%=cid%> = dataSources_<%=cid%>.get(<%=(null != alias && !("".equals(alias)))?alias:"\"\""%>).getConnection();
		}
<%
	}
} else {
%>
<%
	boolean specify_alias = "true".equals(ElementParameterParser.getValue(node, "__SPECIFY_DATASOURCE_ALIAS__"));
	if(specify_alias){
		String alias = ElementParameterParser.getValue(node, "__DATASOURCE_ALIAS__");
%>
		java.util.Map<String, routines.system.TalendDataSource> dataSources_<%=cid%> = (java.util.Map<String, routines.system.TalendDataSource>) globalMap.get(KEY_DB_DATASOURCES);
		if (null != dataSources_<%=cid%>) {
			conn_<%=cid %> = dataSources_<%=cid%>.get(<%=(null != alias && !("".equals(alias)))?alias:"\"\""%>).getConnection();
		} else {
<%
	}
	String javaDbDriver   = "org.gjt.mm.mysql.Driver";
%>
			String dbProperties_<%=cid%> = <%=dbproperties%>;
			String url_<%=cid%> = null;
			if(dbProperties_<%=cid%> == null || dbProperties_<%=cid%>.trim().length() == 0) {
				url_<%=cid%> = "jdbc:mysql://" + <%=dbhost%> + ":" + <%=dbport%> + "/" + <%=dbname%>;
			} else {
				url_<%=cid%> = "jdbc:mysql://" + <%=dbhost%> + ":" + <%=dbport%> + "/" + <%=dbname%> + "?" + <%=dbproperties%>;
			}
			String dbUser_<%=cid %> = <%=dbuser%>;
			<%
			String passwordFieldName = "__PASS__";
			%>

			<%@ include file="@{org.talend.designer.components.localprovider}/components/templates/password.javajet"%>

			String dbPwd_<%=cid %> = decryptedPassword_<%=cid%>;
    
			java.lang.Class.forName("<%=javaDbDriver %>");
			conn_<%=cid%> = java.sql.DriverManager.getConnection(url_<%=cid %>, dbUser_<%=cid%>, dbPwd_<%=cid%>);
	<%
	if(specify_alias){
	%>
		}
<%
	}
}
%>

<%
if(!("true").equals(useExistingConn)) {
    if(!("").equals(commitEvery) && !("0").equals(commitEvery)) {
        %>
        if(conn_<%=cid%>.getAutoCommit()) {
            conn_<%=cid%>.setAutoCommit(false);
        }        
        int commitEvery_<%=cid%> = <%=commitEvery%>;
        int commitCounter_<%=cid%> = 0;
        <%
    }
}
%>

<%
	if (usePrepareStatement ) {
%>
	java.sql.PreparedStatement pstmt_<%=cid %> = conn_<%=cid%>.prepareStatement(<%=dbquery%>);	
<%
	} else {
%>
	java.sql.Statement stmt_<%=cid %> = conn_<%=cid %>.createStatement();
<%
	}
%>
String query_<%=cid %> = "";
boolean whetherReject_<%=cid%> = false;
