<%@ jet 
	imports="
        java.util.List
        java.util.Map        
        org.talend.core.model.metadata.IMetadataColumn
        org.talend.core.model.metadata.IMetadataTable
        org.talend.core.model.process.EConnectionType
        org.talend.core.model.process.ElementParameterParser
        org.talend.core.model.process.IConnection
        org.talend.core.model.process.INode
        org.talend.designer.codegen.config.CodeGeneratorArgument
        org.talend.core.model.metadata.types.JavaTypesManager
	"
%>
<%
	CodeGeneratorArgument codeGenArgument = (CodeGeneratorArgument) argument;
	INode node = (INode)codeGenArgument.getArgument();
	String cid = node.getUniqueName();
%>


<%
   boolean autoCast = ElementParameterParser.getValue(node, "__AUTOCAST__").equals("true");
   List<Map<String, String>> manualtable = (List<Map<String,String>>)ElementParameterParser.getObjectValue(node, "__MANUALTABLE__");

   IConnection inMainCon = null;
   List<? extends IConnection> connsIn = node.getIncomingConnections(EConnectionType.FLOW_MAIN);
   if(connsIn == null || connsIn.size() == 0 ){
   	 return "";
   }else{
   	inMainCon = connsIn.get(0);
   }
   
   IConnection outConn = null;
   List< ? extends IConnection> outConns = node.getOutgoingConnections(EConnectionType.FLOW_MAIN);
   if(outConns == null || outConns.size() == 0 ){
   	 return "";
   }else{
   	outConn = outConns.get(0);
   } 
   String outconnName = outConn.getName();   
   String preconnName = inMainCon.getName();
   
   IMetadataTable preMetadata = inMainCon.getMetadataTable();   
   List<IMetadataColumn> preColumns = preMetadata.getListColumns();   
   
   List<IMetadataTable> metadatas = node.getMetadataList();
   IMetadataTable metadata = metadatas.get(0);
   List<IMetadataColumn> columns = metadata.getListColumns();   

%>

<%if(autoCast){
	for(IMetadataColumn col:columns){	

	 String outLabel = col.getLabel();
	 String outPattern = col.getPattern();
	 String outTypeWhole = JavaTypesManager.getTypeToGenerate(col.getTalendType(), col.isNullable());
	 String outType = outTypeWhole.contains(".") ? outTypeWhole.substring(outTypeWhole.lastIndexOf(".")+1) : outTypeWhole;
	 
	 for(IMetadataColumn preCol:preColumns){
	 String preLabel = preCol.getLabel();	 
	 	if(preLabel.equals(outLabel)){	 	
    	 	String inTypeWhole = JavaTypesManager.getTypeToGenerate(preCol.getTalendType(), preCol.isNullable());
    	 	String inType = inTypeWhole.contains(".") ? inTypeWhole.substring(inTypeWhole.lastIndexOf(".")+1) : inTypeWhole;
%>
<%if((outType.equals("Date") && inType.equals("String"))||(outType.equals("String")&& inType.equals("Date"))){%>
	 	<%=outconnName %>.<%=outLabel %> = TypeConvert.<%=inType %>2<%=outType %>(<%=preconnName %>.<%=preLabel %>, <%=outPattern%>);
<%}else{%>
		<%=outconnName %>.<%=outLabel %> = TypeConvert.<%=inType %>2<%=outType %>(<%=preconnName %>.<%=preLabel %>);
		
<%}%>

<%     }
	 }
	}
%>

<%}else{%>

<% 
		for(Map<String, String> manualColumn : manualtable){
			String input = manualColumn.get("INPUT_COLUMN");
			String output = manualColumn.get("OUTPUT_COLUMN");
			IMetadataColumn in = preMetadata.getColumn(input);
			IMetadataColumn out = metadata.getColumn(output);
			String inTypeWhole = JavaTypesManager.getTypeToGenerate(in.getTalendType(), in.isNullable());
			String inType = inTypeWhole.contains(".") ? inTypeWhole.substring(inTypeWhole.lastIndexOf(".")+1) : inTypeWhole;
			String outTypeWhole = JavaTypesManager.getTypeToGenerate(out.getTalendType(), out.isNullable());
			String outType = outTypeWhole.contains(".") ? outTypeWhole.substring(outTypeWhole.lastIndexOf(".")+1) : outTypeWhole;
			String outLabel = out.getLabel();
			String outPattern = out.getPattern();
			String preLabel = in.getLabel();
%>            
<%if((outType.equals("Date") && inType.equals("String"))||(outType.equals("String")&& inType.equals("Date"))){%>
           <%=outconnName %>.<%=outLabel %> = TypeConvert.<%=inType %>2<%=outType %>(<%=preconnName %>.<%=preLabel %>, <%=outPattern %>);
<%}else{%>
		   
		   <%=outconnName %>.<%=outLabel %> = TypeConvert.<%=inType %>2<%=outType %>(<%=preconnName %>.<%=preLabel %>);
<%}%>
<%
		}
%>
<%}%>