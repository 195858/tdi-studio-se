<%@ jet 
	imports="
		org.talend.core.model.process.INode 
		org.talend.core.model.process.ElementParameterParser 
		org.talend.core.model.metadata.IMetadataTable 
		org.talend.core.model.metadata.IMetadataColumn
		org.talend.designer.codegen.config.CodeGeneratorArgument
		java.util.List
	" 
%>

<%
	CodeGeneratorArgument codeGenArgument = (CodeGeneratorArgument) argument;
	INode node = (INode)codeGenArgument.getArgument();
	
	List<IMetadataTable> metadatas = node.getMetadataList();
	if ((metadatas!=null)&&(metadatas.size()>0)) {
		IMetadataTable metadata = metadatas.get(0);
		if (metadata!=null) {
                        String cid = metadata.getTableName();

%>

use DBI;
use talend::dbOp;

my %desc_<%=cid %> = (
    driver        => 'odbc',
    dbname        => <%=ElementParameterParser.getValue(node, "__DSN__") %>,
    dbuser        => <%=ElementParameterParser.getValue(node, "__USER__") %>,
    dbpass        => <%=ElementParameterParser.getValue(node, "__PASS__") %>,
    encoding      => <%=ElementParameterParser.getValue(node, "__ENCODING__") %>,
    query         => <%=ElementParameterParser.getValue(node, "__QUERY__") %>,
    schema        => [
    <%
		for (IMetadataColumn column: metadata.getListColumns()) {
    %>
    	{
            name    => '<%=column.getLabel() %>',
            key     => <%=column.isKey() %>,
            type    => '<%=column.getType() %>',
            len     => <%=column.getLength() %>,
            null    => <%=column.isNullable() %>,
            default => '<%=column.getDefault() %>',
            comment => '<%=column.getComment() %>',
		},
	<%
		}
    %>
    ]
);

my $nb_fields_<%=cid %> = scalar @{ $desc_<%=cid %>{schema} };
my $nb_line_<%=cid%> = 0;

my $dbh_<%=cid %> = DBI->connect(
    getConnectionString(
        driver => $desc_<%=cid %>{driver},
        dbname => $desc_<%=cid %>{dbname},
        dbhost => $desc_<%=cid %>{dbhost},
        dbport => $desc_<%=cid %>{dbport},
    ),
    $desc_<%=cid %>{dbuser},
    $desc_<%=cid %>{dbpass},
)
    or die "can't connect to database";

my $sth_<%=cid %>;



$sth_<%=cid %> = $dbh_<%=cid %>->prepare(
    $desc_<%=cid %>{query}
);

$sth_<%=cid %>->execute()
    or die <%=cid %>, " can't execute input query";

if ($_context{StoreSQLQuery}) {
    $_globals{<%=cid %>}{QUERY} = $desc_<%=cid %>{query};
}

# fetch the N first columns (defined by component schema) from the SQL
# result
while (my @<%=cid %> = ($sth_<%=cid %>->fetchrow_array())[0 .. $nb_fields_<%=cid %> - 1]) {
    $nb_line_<%=cid%>++;
<%
		}
	}
%>

