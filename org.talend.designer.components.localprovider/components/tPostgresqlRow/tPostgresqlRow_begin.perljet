<%@ jet 
imports="
    org.talend.core.model.process.INode 
    org.talend.core.model.process.ElementParameterParser 
    org.talend.core.model.metadata.IMetadataTable 
    org.talend.core.model.metadata.IMetadataColumn
    org.talend.designer.codegen.config.CodeGeneratorArgument
    java.util.List
" 
%>

<%
CodeGeneratorArgument codeGenArgument = (CodeGeneratorArgument) argument;
INode node = (INode)codeGenArgument.getArgument();
String cid = node.getUniqueName();

List<IMetadataTable> metadatas = node.getMetadataList();
if ((metadatas!=null)&&(metadatas.size()>0)) {
    IMetadataTable metadata = metadatas.get(0);
    if (metadata!=null) {

        String dbhost = ElementParameterParser.getValue(node, "__HOST__");
        String dbport = ElementParameterParser.getValue(node, "__PORT__");
        String dbname = ElementParameterParser.getValue(node, "__DBNAME__");
        String dbuser = ElementParameterParser.getValue(node, "__USER__");
        String dbpass = ElementParameterParser.getValue(node, "__PASS__");
        String query  = ElementParameterParser.getValue(node, "__QUERY__");
        String encoding = ElementParameterParser.getValue(
            node,
            "__ENCODING__"
        );
        String commitEvery = ElementParameterParser.getValue(
            node,
            "__COMMIT_EVERY__"
        );

        String useExistingConnection = ElementParameterParser.getValue(
            node,
            "__USE_EXISTING_CONNECTION__"
        );

        String connection = ElementParameterParser.getValue(
            node,
            "__CONNECTION__"
        );

        String dbh = "dbh_";
        if (useExistingConnection.equals("true")) {
            dbh+= connection;
        }
        else {
            dbh+= cid;
        }
%>

use DBI;

my %desc_<%=cid %> = (
    dbhost        => <%=dbhost %>,
    dbport        => <%=dbport %>,
    dbname        => <%=dbname %>,
    dbuser        => <%=dbuser %>,
    dbpass        => <%=dbpass %>,
    encoding      => <%=encoding %>,
    commit_every  => <%=commitEvery %>,
    query         => <%=query %>,
    schema        => [
<%
        for (IMetadataColumn column: metadata.getListColumns()) {
%>
        {
            name    => '<%=column.getLabel() %>',
            key     => <%=column.isKey() %>,
            type    => '<%=column.getType() %>',
            len     => <%=column.getLength() %>,
            null    => <%=column.isNullable() %>,
            default => '<%=column.getDefault() %>',
            comment => '<%=column.getComment() %>',
        },
<%
        }
%>
    ],
);

<%
        if (useExistingConnection.equals("false")) {
%>

my $<%=dbh%> = DBI->connect(
    sprintf(
        'DBI:Pg:dbname=%s;host=%s;port=%s;',
        <%=dbname %>,
        <%=dbhost %>,
        <%=dbport %>,
    ),
    <%=dbuser %>,
    <%=dbpass %>,
    {
        AutoCommit => 0,
    }
)
    or die "can't connect to database";

{
    my $sth_<%=cid %>;
    my $query;
    
    $query = '
    set names \''.<%=encoding %>.'\'
    ';
    $sth_<%=cid %> = $<%=dbh%>->prepare($query);
    $sth_<%=cid %>->execute();
}

<%
        }
%>

my $sth_<%=cid %>;
my $query;
my $nb_line_current_commit_<%=cid%> = 0;

<%
    }
}
%>
