<%@ jet 
imports="
    org.talend.core.model.process.INode 
    org.talend.core.model.metadata.IMetadataTable
    org.talend.core.model.metadata.IMetadataColumn    
    org.talend.core.model.process.ElementParameterParser
    org.talend.core.model.process.IConnection
    org.talend.designer.codegen.config.CodeGeneratorArgument
    java.util.List
    java.util.Map
"
%>

<%
CodeGeneratorArgument codeGenArgument = (CodeGeneratorArgument) argument;
INode node = (INode)codeGenArgument.getArgument();
String cid = node.getUniqueName();
String incomingConnName = null;
List<? extends IConnection> inConns = node.getIncomingConnections();
if(inConns != null && inConns.size() > 0) {
    IConnection inConn = inConns.get(0);
    incomingConnName = inConn.getName();
}
List<IMetadataColumn> columnList = null;
List<IMetadataTable> metadataTables = node.getMetadataList();
if(metadataTables != null && metadataTables.size() > 0) {
    IMetadataTable metadataTable = metadataTables.get(0);
    columnList = metadataTable.getListColumns();
}
List<? extends IConnection> outgoingConns = node.getOutgoingConnections();


if(incomingConnName != null && columnList != null && columnList.size() > 0) {
    String advancedMode = ElementParameterParser.getValue( node, "__ADVANCED_MODE__" );
    String simpleMode = ElementParameterParser.getValue( node, "__SIMPLE_MODE__" );
    
    List<Map<String, String>> patterns = null;
          
    //simple mode Replacement    
    if(("true").equals(simpleMode)) {
        List<Map<String, String>> substitutions = (List<Map<String,String>>)ElementParameterParser.getObjectValue(node,"__SUBSTITUTIONS__");
        if(substitutions != null && substitutions.size() > 0) {
        	int i = 0;
            for(Map<String,String> substitution : substitutions) {            	
                String replaceStr = substitution.get("REPLACE_STRING");
                if(replaceStr != null && !("").equals(replaceStr)) {                	
                    String searchStr = substitution.get("SEARCH_PATTERN");
                    i++;
%>
					String searchStr_<%=cid %>_<%=i %> = <%=searchStr %>;
                <%if(("true").equals(substitution.get("USE_GLOB"))){%>
                    searchStr_<%=cid %>_<%=i %> = org.apache.oro.text.GlobCompiler.globToPerl5(searchStr_<%=cid %>_<%=i %>.toCharArray(), org.apache.oro.text.GlobCompiler.DEFAULT_MASK);
                <%}%>
                <%if(("true").equals(substitution.get("WHOLE_WORD"))){%>
                    searchStr_<%=cid %>_<%=i %> = "^" + searchStr_<%=cid %>_<%=i %> + "$";
                <%}%>                                
                <%if(("false").equals(substitution.get("CASE_SENSITIVE"))){%>
                    searchStr_<%=cid %>_<%=i %> = "(?i)" + searchStr_<%=cid %>_<%=i %>;
                <%}%>
                    <%=incomingConnName%>.<%=substitution.get("INPUT_COLUMN")%> = StringUtils.replaceAll(<%=incomingConnName%>.<%=substitution.get("INPUT_COLUMN")%>, searchStr_<%=cid %>_<%=i %>, <%=replaceStr%>);                    
<%
                }
            }
            %>
            nb_line_ok_<%=cid%>++;
            <%
        }
    }
    
    
    
    //advanced mode Replacement
    if(("true").equals(advancedMode)) {
        patterns = (List<Map<String,String>>)ElementParameterParser.getObjectValue(node,"__ADVANCED_SUBST__");
        if(patterns != null && patterns.size() > 0) {
            for(Map<String,String> pattern:patterns){
                String replacePat = pattern.get("REPLACE_COLUMN");
                if(replacePat != null && !("").equals(replacePat)) {
%>
                    <%=incomingConnName%>.<%=pattern.get("INPUT_COLUMN")%> = StringUtils.replaceAll(<%=incomingConnName%>.<%=pattern.get("INPUT_COLUMN")%>, <%=pattern.get("SEARCH_COLUMN")%>, <%=pattern.get("REPLACE_COLUMN")%>);                
<%
                }
            }
        }
    }  
    
    
    if(outgoingConns != null && outgoingConns.size() > 0) {
        for(IConnection outgoingConn : outgoingConns) {
            for(IMetadataColumn metadataColumn : columnList) {
                %>
                <%=outgoingConn.getName()%>.<%=metadataColumn.getLabel()%> = <%=incomingConnName%>.<%=metadataColumn.getLabel()%>;
                <%
            }
        }
    }
    
    
    %>
    nb_line_<%=cid%>++;
    <%
}
%>
