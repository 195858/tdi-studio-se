<%@ jet 
imports="
    org.talend.core.model.process.INode 
    org.talend.core.model.process.ElementParameterParser
    org.talend.designer.codegen.config.CodeGeneratorArgument
"
%>

<%
CodeGeneratorArgument codeGenArgument = (CodeGeneratorArgument) argument;
INode node = (INode)codeGenArgument.getArgument();
String cid = node.getUniqueName();

String xmlfile = ElementParameterParser.getValue(node, "__XML_FILE__");
String xslfile = ElementParameterParser.getValue(node, "__XSLT_FILE__");
String outputfile = ElementParameterParser.getValue(node, "__OUTPUT_FILE__");
%>

my $source_<%=cid %> = $parser_<%=cid %>->parse_file(<%=xmlfile%>);
my $style_doc_<%=cid %> = $parser_<%=cid %>->parse_file(<%=xslfile%>);

my $stylesheet_<%=cid %> ;

eval {
    $stylesheet_<%=cid %> = $xslt_<%=cid %>->parse_stylesheet($style_doc_<%=cid %>);
};

die '<%=cid%> ', $@ if $@ ;

my $results_<%=cid %> = $stylesheet_<%=cid %>->transform($source_<%=cid %>) if defined $stylesheet_<%=cid %> ;

my $output_FH_<%=cid %> = new FileHandle;

my $mode = '>';

open($output_FH_<%=cid %>, $mode, <%=outputfile%> )
    or die 'cannot open file ' . <%=outputfile%> ;

print $output_FH_<%=cid %> 
    $stylesheet_<%=cid %>->output_string($results_<%=cid %>)
        or die 'can\'t write to file ' . <%=outputfile%>;

close $output_FH_<%=cid %> 
    or die 'cannot close file ' . <%=outputfile%> ;
