<%@ jet
package="org.talend.designer.codegen.translators" 
imports="
    org.talend.core.model.process.INode
    org.talend.core.model.process.ElementParameterParser
    org.talend.core.model.metadata.IMetadataTable 
    org.talend.designer.codegen.config.CodeGeneratorArgument
    java.util.List
    java.util.Map
    java.util.ArrayList
    org.talend.commons.utils.StringUtils
    org.talend.core.model.process.IConnection
    org.talend.core.model.metadata.IMetadataColumn
    	org.talend.core.model.metadata.types.JavaTypesManager
		org.talend.core.model.metadata.types.JavaType
"
class="AddCRCRowMain"
%>
<%
CodeGeneratorArgument codeGenArgument = (CodeGeneratorArgument) argument;
INode node = (INode)codeGenArgument.getArgument();
String crcType = ElementParameterParser.getValue(node,"__CRC_TYPE__");
List<IMetadataTable> metadatas = node.getMetadataList();
if ((metadatas!=null)&&(metadatas.size()>0)) {
    IMetadataTable metadata = metadatas.get(0);
    if (metadata!=null)
     {
        String cid = metadata.getTableName();
        List<Map<String, String>> implication =(List<Map<String,String>>)ElementParameterParser.getObjectValue(node,"__IMPLICATION__");
        List keyCols = new ArrayList();
		for (int i=0; i<implication.size(); i++) {
            Map<String, String> col = implication.get(i);
            if (col.get("USE_IN_CRC").equals("true")) {
                keyCols.add(i);
            }
        }
       List< ? extends IConnection> conns = node.getIncomingConnections();
  %>
   java.util.ArrayList crcTypeList<%=cid%>=new java.util.ArrayList();
  <%
      if(conns!=null){
   		for (int j=0;j<conns.size();j++){
       	List<IMetadataColumn> columns = metadata.getListColumns();
       	IConnection conn =conns.get(j);
    	int sizeColumns = columns.size();
%>
    	StringBuffer strBuffer_<%=cid%> = new StringBuffer();
<%
    	for (int i = 0; i < sizeColumns-1; i++) {
    		IMetadataColumn column = columns.get(i);
    		if(keyCols.contains(i))
    		{
    		
%>
    			strBuffer_<%=cid%>.append(<%=conn.getName() %>.<%=column.getLabel() %>);
    			
<%	
  			}
 %>	
  			 crcTypeList<%=cid%>.add(<%=conn.getName() %>.<%=column.getLabel() %>);		
<%		 
    	}
   			if(crcType.equals("crc32")){%>
   		
    		java.util.zip.CRC32 crc32<%=cid%> = new java.util.zip.CRC32();  
    		crc32<%=cid%>.update(strBuffer_<%=cid%>.toString().getBytes());
    		crcTypeList<%=cid%>.add(Long.toOctalString(crc32<%=cid%>.getValue()));
 		<%	   		
        	}   
       if(crcType.equals("crc8")){
          
   %>
   		
   		int crc8value<%=cid%>=com.dalsemi.onewire.utils.CRC8.compute(strBuffer_<%=cid%>.toString().getBytes());
   		crcTypeList<%=cid%>.add(crc8value<%=cid%>);
   <%       
          }	
          if(crcType.equals("crc16")){
          
    %>      
   		int crc16value<%=cid%>=com.dalsemi.onewire.utils.CRC16.compute(strBuffer_<%=cid%>.toString().getBytes());
   		crcTypeList<%=cid%>.add(crc16value<%=cid%>);
    <%      
          }
      }   
     } 
        List< ? extends IConnection> connsout = node.getOutgoingConnections(); 
           if (connsout!=null) {
			 for (int i=0;i<connsout.size();i++) {
			 	IConnection connout = connsout.get(i);
				List<IMetadataColumn> columnsout = metadata.getListColumns();
    			int sizeColumnsout = columnsout.size();
    			for (int j = 0; j < sizeColumnsout; j++) {
    			   IMetadataColumn columnout=columnsout.get(j);
    			   JavaType javaType = JavaTypesManager.getJavaTypeFromId(columnout.getTalendType());
    			 if(javaType==JavaTypesManager.STRING)
    			   {
    			
    %>
		          
		           <%=connout.getName() %>.<%=columnout.getLabel() %>=crcTypeList<%=cid%>.get(<%=j%>).toString();
		
		<%
		         }
		        else if(javaType==JavaTypesManager.BYTE_ARRAY)
		         {
		%>   
					 <%=connout.getName() %>.<%=columnout.getLabel() %>=(byte[])crcTypeList<%=cid%>.get(<%=j%>);
		<%      
		         }
		       else  if(javaType==JavaTypesManager.OBJECT)
		         {
		   %>
		   		 <%=connout.getName() %>.<%=columnout.getLabel() %>=crcTypeList<%=cid%>.get(<%=j%>);
		   <%      
		         }else
		         {
		   %>
		   		 <%=connout.getName() %>.<%=columnout.getLabel() %>=(<%=javaType.getNullableClass().getSimpleName()%>)crcTypeList<%=cid%>.get(<%=j%>);
		   <%      
		         }
		          }
				}
			}
	}
}
%>
