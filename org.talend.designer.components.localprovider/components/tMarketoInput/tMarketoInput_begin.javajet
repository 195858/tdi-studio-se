<%@ jet
	imports="
	java.util.HashMap
	java.util.List
	java.util.Map
	java.util.ArrayList
	org.talend.core.model.metadata.IMetadataColumn
	org.talend.core.model.metadata.IMetadataTable
	org.talend.core.model.metadata.types.JavaType
	org.talend.core.model.metadata.types.JavaTypesManager
	org.talend.core.model.process.ElementParameterParser
	org.talend.core.model.process.IConnection
	org.talend.core.model.process.IConnectionCategory
	org.talend.core.model.process.INode
	org.talend.designer.codegen.config.CodeGeneratorArgument
	"
%>
<%
CodeGeneratorArgument codeGenArgument = (CodeGeneratorArgument) argument;
INode node = (INode)codeGenArgument.getArgument();
String cid = node.getUniqueName();
%>
int nb_call_<%=cid%> = 0;
<%
List<IMetadataTable> metadatas = node.getMetadataList();
if ((metadatas != null) && (metadatas.size() > 0)) { //1
	IMetadataTable metadata = metadatas.get(0);
	if (metadata != null) { //2
		List<IMetadataColumn> columnList = metadata.getListColumns();
		int nbSchemaColumns = columnList.size();			
		List<? extends IConnection> outgoingConns = node.getOutgoingSortedConnections();
		if (nbSchemaColumns > 0 && outgoingConns != null && outgoingConns.size() > 0){ //3
			IConnection outgoingConn = outgoingConns.get(0);
			if(outgoingConn.getLineStyle().hasConnectionCategory(IConnectionCategory.DATA)) { //4

            String endpoint = ElementParameterParser.getValue(node, "__ENDPOINT__");
            String secretKey = ElementParameterParser.getValue(node, "__SECRET_KEY__");
            String clientAccessID = ElementParameterParser.getValue(node, "__CLIENT_ACCESSID__");
            String operation = ElementParameterParser.getValue(node, "__OPERATION__");
            String leadKeyType = ElementParameterParser.getValue(node, "__LEAD_KEYTYPE__");
            String leadKeyValue = ElementParameterParser.getValue(node, "__LEAD_KEYVALUE__");
            String mutipleLeadsLastUpdatedAt = ElementParameterParser.getValue(node, "__MUTIPLE_LEADS_LASTUPDATEDAT__");
            String batchSize = ElementParameterParser.getValue(node, "__BATCH_SIZE__");
            String timeout = ElementParameterParser.getValue(node, "__TIMEOUT__");
            boolean setIncludeTypes = ("true").equals(ElementParameterParser.getValue(node,"__SET_INCLUDE_TYPES__"));
            boolean setExcludeTypes = ("true").equals(ElementParameterParser.getValue(node,"__SET_EXCLUDE_TYPES__"));
			List<Map<String, String>> includeTypesList = (List<Map<String,String>>)ElementParameterParser.getObjectValue(node, "__INCLUDE_TYPES__");
			List<Map<String, String>> excludeTypesList = (List<Map<String,String>>)ElementParameterParser.getObjectValue(node, "__EXCLUDE_TYPES__");
            boolean dieOnError = ("true").equals(ElementParameterParser.getValue(node,"__DIE_ON_ERROR__"));
			List<String> includeTypes = null;
			if(setIncludeTypes){
				includeTypes = new ArrayList<String>();
    			for(Map<String,String> includeTypesMap:includeTypesList){
    				includeTypes.add(includeTypesMap.get("TYPES").toString());
    			} 
			}
			List<String> excludeTypes = null;
			if(setExcludeTypes){
				excludeTypes = new ArrayList<String>();
    			for(Map<String,String> excludeTypesMap:excludeTypesList){
    				excludeTypes.add(excludeTypesMap.get("TYPES").toString());
    			} 
			}
			if("getLeadChanges".equals(operation)||"getLeadActivity".equals(operation)){
%>
			String[] includeTypes_<%=cid%> = 
			<%if(includeTypes==null){%>
				null;
			<%}else{%>
				new String[]{			
				<%for(String includeType:includeTypes){%>	
					"<%=includeType%>",							
				<%}%>
				};
			<%}%>
        	String[] excludeTypes_<%=cid%> = 
			<%if(excludeTypes==null){%>
				null;
			<%}else{%>
				new String[]{			
				<%for(String excludeType:excludeTypes){%>	
					"<%=excludeType%>",							
				<%}%>
				};
			<%}%>
<%
			}
			List<Map<String, String>> mappingList = (List<Map<String,String>>)ElementParameterParser.getObjectValue(node, "__MAPPING_INPUT__");
			Map<String,String> fldMapping = new HashMap<String,String>();
			for(Map<String,String> inputMapping:mappingList){
				String mapStr = inputMapping.get("PARAMETER_NAME");
				if("\"\"".equals(mapStr)){
					fldMapping.put(inputMapping.get("SCHEMA_COLUMN"),"\""+inputMapping.get("SCHEMA_COLUMN")+"\"");
				}else{	
					fldMapping.put(inputMapping.get("SCHEMA_COLUMN"),inputMapping.get("PARAMETER_NAME"));
				}
			}
%>
			org.talend.marketo.Client client_<%=cid%> = new org.talend.marketo.Client(<%=endpoint%>,<%=secretKey%>,<%=clientAccessID%>);
			client_<%=cid%>.setTimeout(<%=timeout%>);
		
<%
			if("getLead".equals(operation)){
%>
			com.marketo.www.mktows.ResultGetLead leads_<%=cid%> = null;
			com.marketo.www.mktows.LeadRecord[] records_<%=cid%> = null;
			try{
				leads_<%=cid%> = client_<%=cid%>.getLead("<%=leadKeyType%>",<%=leadKeyValue%>);
				nb_call_<%=cid%>++;
				records_<%=cid%> = leads_<%=cid%>.getLeadRecordList();
			}catch(org.apache.axis.AxisFault axisFault_<%=cid%>){
				try{
					if(!client_<%=cid%>.isSystemError(axisFault_<%=cid%>)){
						nb_call_<%=cid%>++;		
					}
					client_<%=cid%>.inputExceptionFilter(axisFault_<%=cid%>);
				}catch(Exception ex_<%=cid%>){
					<%
			        if (dieOnError) {
			        %>
			            throw(ex_<%=cid%>);
			        <%
			        } else {
			        %>
			        	System.err.println(ex_<%=cid%>.getMessage());
			        <%
			        }
			        %>
				}
			}catch(Exception ex_<%=cid%>){
				<%
		        if (dieOnError) {
		        %>
		            throw(ex_<%=cid%>);
		        <%
		        } else {
		        %>
		        	System.err.println(ex_<%=cid%>.getMessage());
		        <%
		        }
		        %>
			}
			if(leads_<%=cid%> != null && records_<%=cid%>!=null){
				for (int i_<%=cid%> = 0; i_<%=cid%> < leads_<%=cid%>.getCount(); i_<%=cid%>++) {
	            	java.util.Map<String, String> result_<%=cid%> = client_<%=cid%>.readLead(records_<%=cid%>[i_<%=cid%>]);
<%			
			}else if("getMutipleLeads".equals(operation)){
%>
			java.text.SimpleDateFormat updatedAt_<%=cid%> = new java.text.SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
        	updatedAt_<%=cid%>.parse(<%=mutipleLeadsLastUpdatedAt%>);
            java.util.Calendar updatedAtCal_<%=cid%> = updatedAt_<%=cid%>.getCalendar();
            String streamPosition_<%=cid%> = null;
            String[] includeAttributes_<%=cid%> = new String[]{
			<%for(String key:fldMapping.keySet()){%>	
    			<%=fldMapping.get(key)%>,		
			<%}%>
			};
            while(true){
            	com.marketo.www.mktows.ResultGetMultipleLeads leads_<%=cid%> = null;
            	try{ 
            		leads_<%=cid%> = client_<%=cid%>.getMultipleLeads(includeAttributes_<%=cid%>, <%=batchSize%>, updatedAtCal_<%=cid%>, streamPosition_<%=cid%>);
            		nb_call_<%=cid%>++;
            	}catch(Exception ex_<%=cid%>){
            		if(ex_<%=cid%> instanceof org.apache.axis.AxisFault){
            			if(!client_<%=cid%>.isSystemError((org.apache.axis.AxisFault)ex_<%=cid%>)){
							nb_call_<%=cid%>++;		
						}
            		}
					<%
			        if (dieOnError) {
			        %>
			            throw(ex_<%=cid%>);
			        <%
			        } else {
			        %>
			        	System.err.println(ex_<%=cid%>.getMessage());
				        break;
			        <%
			        }
			        %>
				}
            	if(leads_<%=cid%> != null){
	            	com.marketo.www.mktows.LeadRecord[] records_<%=cid%> = leads_<%=cid%>.getLeadRecordList();
	            	for (int i_<%=cid%> = 0; i_<%=cid%> < leads_<%=cid%>.getReturnCount(); i_<%=cid%>++) {
	            		java.util.Map<String, String> result_<%=cid%> = client_<%=cid%>.readLead(records_<%=cid%>[i_<%=cid%>]);
<%
			}else if("getLeadActivity".equals(operation)){
%>
			com.marketo.www.mktows.StreamPosition streamPosition_<%=cid%> = null;
			while(true){
				com.marketo.www.mktows.LeadActivityList activities_<%=cid%> = null;
				com.marketo.www.mktows.ActivityRecord[] activityRecords_<%=cid%> = null;
                try{
	                activities_<%=cid%> = client_<%=cid%>.getLeadActivity("<%=leadKeyType%>",<%=leadKeyValue%>, <%=batchSize%>, includeTypes_<%=cid%>, excludeTypes_<%=cid%>,streamPosition_<%=cid%>);
	                nb_call_<%=cid%>++;	
	                activityRecords_<%=cid%> = activities_<%=cid%>.getActivityRecordList();
	            }catch(org.apache.axis.AxisFault axisFault_<%=cid%>){
					try{
						if(!client_<%=cid%>.isSystemError(axisFault_<%=cid%>)){
							nb_call_<%=cid%>++;		
						}
						client_<%=cid%>.inputExceptionFilter(axisFault_<%=cid%>);
					}catch(Exception ex_<%=cid%>){
						<%
				        if (dieOnError) {
				        %>
				            throw(ex_<%=cid%>);
				        <%
				        } else {
				        %>
				        	System.err.println(ex_<%=cid%>.getMessage());
					        break;
				        <%
				        }
				        %>
					}
				}catch(Exception ex_<%=cid%>){
					<%
			        if (dieOnError) {
			        %>
			            throw(ex_<%=cid%>);
			        <%
			        } else {
			        %>
			        	System.err.println(ex_<%=cid%>.getMessage());
				        break;
			        <%
			        }
			        %>
				}
				if(activities_<%=cid%> != null && activityRecords_<%=cid%> != null){
	                for (int i_<%=cid%> = 0; i_<%=cid%> < activities_<%=cid%>.getReturnCount(); i_<%=cid%>++) {
	                    java.util.Map<String, String> result_<%=cid%> = client_<%=cid%>.readActivity(activityRecords_<%=cid%>[i_<%=cid%>]);
<%
			}else if("getLeadChanges".equals(operation)){
%>
			com.marketo.www.mktows.StreamPosition streamPosition_<%=cid%> = new com.marketo.www.mktows.StreamPosition();
            while(true){
                com.marketo.www.mktows.ResultGetLeadChanges changes_<%=cid%> = null;
                try{
                	changes_<%=cid%> = client_<%=cid%>.getLeadChanges(<%=batchSize%>, includeTypes_<%=cid%>, excludeTypes_<%=cid%>, streamPosition_<%=cid%>);
                	nb_call_<%=cid%>++;
                }catch(Exception ex_<%=cid%>){
                	if(ex_<%=cid%> instanceof org.apache.axis.AxisFault){
            			if(!client_<%=cid%>.isSystemError((org.apache.axis.AxisFault)ex_<%=cid%>)){
							nb_call_<%=cid%>++;		
						}
            		}
					<%
			        if (dieOnError) {
			        %>
			            throw(ex_<%=cid%>);
			        <%
			        } else {
			        %>
			        	System.err.println(ex_<%=cid%>.getMessage());
				        break;
			        <%
			        }
			        %>
				}
                if(changes_<%=cid%> != null){
	                com.marketo.www.mktows.LeadChangeRecord[] changeRecords_<%=cid%> = changes_<%=cid%>.getLeadChangeRecordList();
	                for (int i_<%=cid%> = 0; i_<%=cid%> < changes_<%=cid%>.getReturnCount(); i_<%=cid%>++) {
	                    java.util.Map<String, String> result_<%=cid%> = client_<%=cid%>.readChange(changeRecords_<%=cid%>[i_<%=cid%>]);
<%
			}
			

			for( int i = 0; i < columnList.size(); i++) {
			
				IMetadataColumn column = columnList.get(i);
				
				String typeToGenerate = JavaTypesManager.getTypeToGenerate(column.getTalendType(), column.isNullable());
				
				JavaType javaType = JavaTypesManager.getJavaTypeFromId(column.getTalendType());
				
				String patternValue = column.getPattern() == null || column.getPattern().trim().length() == 0 ? null : column.getPattern();
%>
				if(result_<%=cid%>.get(<%=fldMapping.get(column.getLabel())%>)!=null){
    			<%	
    				if (javaType == JavaTypesManager.STRING || javaType == JavaTypesManager.OBJECT) {
    			%>				
    					<%=outgoingConn.getName()%>.<%=column.getLabel()%> = result_<%=cid%>.get(<%=fldMapping.get(column.getLabel())%>);
    			<%
    				} else if(javaType == JavaTypesManager.DATE) { // Date
    			%>
    					<%=outgoingConn.getName()%>.<%=column.getLabel()%> = ParserUtils.parseTo_Date(result_<%=cid%>.get(<%=fldMapping.get(column.getLabel())%>), <%= patternValue %>);
    			<%
    				}  else  { // other
    			%>							
    					<%=outgoingConn.getName()%>.<%=column.getLabel()%> = ParserUtils.parseTo_<%= typeToGenerate %>(result_<%=cid%>.get(<%=fldMapping.get(column.getLabel())%>));	
    			<%
    				}
    			%>
    			}else{
    				<%=outgoingConn.getName()%>.<%=column.getLabel()%> = <%=JavaTypesManager.getDefaultValueFromJavaType(typeToGenerate)%>;
    			}
<%
			}
			}//4
		}//3
	}//2
}//1
%>



        
