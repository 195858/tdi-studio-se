<%@ jet 
%>
<%
	//this util class use by set log4j debug paramters
	class DefaultLog4jFileUtil {
	
		INode node = null;
	    String cid = null;
 		boolean isLog4jEnabled = false;
 		
	    public void beforeComponentProcess(INode node){
	    	this.node = node;
	    	init();
	    }
	    
		private void init() {
	    	cid = node.getUniqueName();
			isLog4jEnabled = ("true").equals(org.talend.core.model.process.ElementParameterParser.getValue(node.getProcess(), "__LOG4J_ACTIVATE__"));
		}
		
		public void componentStartInfo(INode node) {
			beforeComponentProcess(node);
			if (isLog4jEnabled) {
			%>
				log.info("<%=cid%> - Start to work");
				final StringBuffer log4jSb_<%=cid%> = new StringBuffer();
			<%
			}
		}
		
		public void componentFinishInfo(INode node) {
			beforeComponentProcess(node);
			if (isLog4jEnabled) {
			%>
				log.info("<%=cid%> - Done.");
			<%
			}
		}

		//for all tFileinput* components 
		public void startRetriveDataInfo() {
			if (isLog4jEnabled) {
			%>
				log.info("<%=cid%> - Retrieving records from the datasource.");
			<%
			}
		}
		
		public void retrievedDataNumberInfo() {
			if (isLog4jEnabled) {
			%>
				log.info("<%=cid%> - Retrieved records count: "+ nb_line_<%=cid%> + " .");
			<%
			}
		}
		
		//for all tFileinput* components 
		public void retrievedDataNumberInfo(INode node) {
			beforeComponentProcess(node);
			if (isLog4jEnabled) {
			%>
				log.info("<%=cid%> - Retrieved records count: "+ nb_line_<%=cid%> + " .");
			<%
			}
		}
		
		public void logParameters(INode node){
			beforeComponentProcess(node);
			if(isLog4jEnabled){
			%>
				StringBuilder log4jParamters_<%=cid%> = new StringBuilder();
			   	log4jParamters_<%=cid%>.append("<%=cid%>" + " - Parameters:");
			   	<%
			   	java.util.List<org.talend.core.model.process.EParameterFieldType> ignoreT = java.util.Arrays.asList(
			   		org.talend.core.model.process.EParameterFieldType.SCHEMA_TYPE,
			   		org.talend.core.model.process.EParameterFieldType.LABEL);
		   		for(org.talend.core.model.process.IElementParameter ep : org.talend.core.model.utils.NodeUtil.getDisplayedParameters(node)){
		   			if(ignoreT.contains(ep.getFieldType())){
		   				continue;
		   			}
		   			String name = ep.getName();
		   			String value = org.talend.core.model.utils.NodeUtil.getNormalizeParameterValue(node, ep);
		   			if(value == null || "".equals(value.trim())) {
		   				value = "\"\"";
		   			} else if("\"\\n\"".equals(value) || "\"\\r\"".equals(value) || "\"\\r\\n\"".equals(value)) {
		   				value = value.replaceAll("\\\\","\\\\\\\\");
		   			} else if("\"\"\"".equals(value)){
		   				value = "\"" + "\\" +  "\"" + "\"";
		   			} else if("\"\"\\r\\n\"\"".equals(value)){
		   				value = "\"\\\\r\\\\n\"";
		   			} else if("\"\"\\r\"\"".equals(value)){
		   				value = "\"\\\\r\"";
		   			} else if("\"\"\\n\"\"".equals(value)){
		   				value = "\"\\\\n\"";
		   			}
		   			%>
					log4jParamters_<%=cid%>.append("<%=name%>" + " = " + <%=value%>);
					log4jParamters_<%=cid%>.append(" | ");
				<%
		   		}
		   		%>
		   		log.debug(log4jParamters_<%=cid%>);
	   		<%
	   		}
		}

		//for all tFileinput* components
		public void debugRetriveData(INode node) {
			beforeComponentProcess(node);
			if(isLog4jEnabled){
			%>
				log.debug("<%=cid%> - Retrieving the record " + (nb_line_<%=cid%>) + ".");
				log.trace("<%=cid%> - Content of the record " + (nb_line_<%=cid%>) + ": " + log4jSb_<%=cid%>);
				log4jSb_<%=cid%>.delete(0,log4jSb_<%=cid%>.length());
			<%		
			}
		}
		
		//for all tFileOutput* components		
		public void debugWriteData(INode node) {
			beforeComponentProcess(node);
			if(isLog4jEnabled){
%>
				log.debug("<%=cid%> - Writing the record " + nb_line_<%=cid %> + " to the file.");
				log.trace("<%=cid%> - Content of the record " + nb_line_<%=cid%> + ": " + log4jSb_<%=cid%>);
				log4jSb_<%=cid%>.delete(0,log4jSb_<%=cid%>.length());
<%		
			}
		}
		
		//for all tFileOutput* components
		public void writeDataFinishInfo(INode node) {
			beforeComponentProcess(node);
			if(isLog4jEnabled){
%>
				log.info("<%=cid%> - Written records count: " + nb_line_<%=cid %> + " .");
<%		
			}
		}
	}
	
	DefaultLog4jFileUtil log4jFileUtil = new DefaultLog4jFileUtil();
%>