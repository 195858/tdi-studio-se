<%@ jet
	imports="
	java.util.ArrayList
	java.util.HashMap
	java.util.List
	java.util.Map
	
	org.talend.core.model.metadata.IMetadataColumn
	org.talend.core.model.metadata.IMetadataTable
	org.talend.core.model.metadata.types.JavaTypesManager
	org.talend.core.model.process.ElementParameterParser
	org.talend.core.model.process.IConnection
	org.talend.core.model.process.IConnectionCategory
	org.talend.core.model.process.INode
	org.talend.designer.codegen.config.CodeGeneratorArgument
	"
%>

<%
	CodeGeneratorArgument codeGenArgument = (CodeGeneratorArgument) argument;
	INode node = (INode)codeGenArgument.getArgument();
	String cid = node.getUniqueName();
%>
	
<%	
	IConnection firstDataConn = null;
	List<IMetadataColumn> firstColumnList = null;

	//1. get first DATA Link
	List< ? extends IConnection> conns = node.getIncomingConnections();	
	if(conns != null && conns.size() > 0){
		for(IConnection conn : conns){
			if (conn.getLineStyle().hasConnectionCategory(IConnectionCategory.DATA)) {
				firstDataConn = conn;
				break;
			}
		}
	}

	//2. get first columnList (with real columns data) 	
	List<IMetadataTable> metadatas = node.getMetadataList();
	IMetadataTable metadata = null;
	if ( metadatas != null && metadatas.size() > 0 ) {
		metadata = metadatas.get(0);
		if(metadata != null){
			firstColumnList = metadata.getListColumns(); 
			if ( firstColumnList == null || firstColumnList.size() == 0 ) {
				firstColumnList = null;
			}
		}
	}
	
	//3. check the config Link and Schema
	if(firstDataConn == null || firstColumnList == null)
	{
		return "";
	}
%>

<%
boolean startIterate = false;
String firstDataConnName = firstDataConn.getName();

String client = ElementParameterParser.getValue(node, "__CLIENT__");
String userid = ElementParameterParser.getValue(node, "__USERID__");
String password = ElementParameterParser.getValue(node, "__PASSWORD__");
String language = ElementParameterParser.getValue(node, "__LANGUAGE__");
String hostname = ElementParameterParser.getValue(node, "__HOSTNAME__");
String systemnumber = ElementParameterParser.getValue(node, "__SYSTEMNUMBER__");

String serverType = ElementParameterParser.getValue(node,"__SERVERTYPE__");
String systemId = ElementParameterParser.getValue(node,"__SYSTEMID__");
String groupName = ElementParameterParser.getValue(node,"__GROUPNAME__");

String functionName = ElementParameterParser.getValue(node, "__SAP_FUNCTION__");

String iterate_out_type = ElementParameterParser.getValue(node, "__SAP_ITERATE_OUT_TYPE__");
String iterate_out_tablename = ElementParameterParser.getValue(node, "__SAP_ITERATE_OUT_TABLENAME__");

boolean useExistingConn = ("true").equals(ElementParameterParser.getValue(node,"__USE_EXISTING_CONNECTION__"));
String connection = ElementParameterParser.getValue(node,"__CONNECTION__");
%>

	  	  com.sap.mw.jco.JCO.Client client_<%=cid %> = null;
<%if(useExistingConn){%>	    
	  client_<%=cid %> = (com.sap.mw.jco.JCO.Client)globalMap.get("conn_<%=connection %>");	
<%}else{%>
	<%if("ApplicationServer".equals(serverType)){%>    
	  //Create a client connection to a dedicated R/3 system
	  client_<%=cid %> = com.sap.mw.jco.JCO.createClient( <%=client %>,      // SAP client
					            				 <%=userid %>,   	// userid
					            				 <%=password %>,    // password
					            				 <%=language %>,    // language
					            				 <%=hostname %>,    // host name
					            				 <%=systemnumber %> );      // system number
	<%}else{%>
	//Create a client connection to Message Server 
	client_<%=cid %> = com.sap.mw.jco.JCO.createClient( <%=client %>,      // SAP client
			            				 <%=userid %>,   	// userid
			            				 <%=password %>,    // password
			            				 <%=language %>,    // language
			            				 <%=hostname %>,    // host name
			            				 <%=systemId %>,    // system ID,defined in sapmsg.ini
			            				 <%=groupName%> );  // group name    
	<%}%>	        				 
		// Open the connection
		client_<%=cid %>.connect();
<%}%> 	
      
        com.sap.mw.jco.IRepository repository_<%=cid %> = com.sap.mw.jco.JCO.createRepository("REPOSITORY", client_<%=cid %>);

        com.sap.mw.jco.IFunctionTemplate functionTemplate_<%=cid %> = repository_<%=cid %>.getFunctionTemplate(<%=functionName %>);

        com.sap.mw.jco.JCO.Function function_<%=cid %> = functionTemplate_<%=cid %>.getFunction();

        com.sap.mw.jco.JCO.ParameterList importParameterList_<%=cid %> = function_<%=cid %>.getImportParameterList();
        com.sap.mw.jco.JCO.ParameterList exportParameterList_<%=cid %> = function_<%=cid %>.getExportParameterList();
        com.sap.mw.jco.JCO.ParameterList tableParameterList_<%=cid %> = function_<%=cid %>.getTableParameterList();
