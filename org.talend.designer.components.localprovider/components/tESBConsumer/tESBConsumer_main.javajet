<%@ jet
	imports="
		org.talend.core.model.process.INode
		org.talend.core.model.process.ElementParameterParser
		org.talend.core.model.metadata.IMetadataTable
		org.talend.core.model.metadata.IMetadataColumn
		org.talend.core.model.process.IConnection
		org.talend.core.model.process.IConnectionCategory
        org.talend.core.model.process.EConnectionType
		org.talend.designer.codegen.config.CodeGeneratorArgument
		org.talend.core.model.metadata.types.JavaTypesManager
		org.talend.core.model.metadata.types.JavaType
		java.util.List
    	java.util.Map
	"
%>
<%
    CodeGeneratorArgument codeGenArgument = (CodeGeneratorArgument) argument;
    INode node = (INode)codeGenArgument.getArgument();
    String cid = node.getUniqueName();
%>
	String esb_service_input_<%=cid%> = null;
	String esb_service_output_<%=cid%> = null;
	String esb_service_fault_<%=cid%> = null;
<%
	List<? extends IConnection> connsIn = node.getIncomingConnections(EConnectionType.FLOW_MAIN);
	if(connsIn != null && connsIn.size() > 0) {
		IConnection inMainCon = connsIn.get(0);
%>
		esb_service_input_<%=cid%> = <%=inMainCon.getName()%>.soapBody;
<%
	}
%>
	if (null != esbService_<%=cid%> && null != esb_service_input_<%=cid%>) {

		try {

			javax.xml.ws.Dispatch<javax.xml.transform.Source> dispatch_<%=cid%> =
					esbService_<%=cid%>.createDispatch(esbPortName_<%=cid%>,
							javax.xml.transform.Source.class, javax.xml.ws.Service.Mode.PAYLOAD);

			javax.xml.transform.Source input_<%=cid%> = new javax.xml.transform.stream.StreamSource(
					new java.io.ByteArrayInputStream(esb_service_input_<%=cid%>.getBytes())
				);

			javax.xml.transform.Source output_<%=cid%> = dispatch_<%=cid%>.invoke(input_<%=cid%>);

			java.io.ByteArrayOutputStream baos_<%=cid%> = new java.io.ByteArrayOutputStream();
			javax.xml.transform.TransformerFactory.newInstance().newTransformer().transform(
					output_<%=cid%>, new javax.xml.transform.stream.StreamResult(baos_<%=cid%>));

			esb_service_output_<%=cid%> = new String(baos_<%=cid%>.toByteArray());

		} catch (javax.xml.ws.soap.SOAPFaultException e_<%=cid%>) {

			javax.xml.transform.Source output_<%=cid%> =
					new javax.xml.transform.dom.DOMSource(
							e_<%=cid%>.getFault() // .getDetail().getFirstChild()
						);

			java.io.ByteArrayOutputStream baos_<%=cid%> = new java.io.ByteArrayOutputStream();
			javax.xml.transform.TransformerFactory.newInstance().newTransformer().transform(
					output_<%=cid%>, new javax.xml.transform.stream.StreamResult(baos_<%=cid%>));

			esb_service_fault_<%=cid%> = new String(baos_<%=cid%>.toByteArray());

		}
	}
<%
	List<? extends IConnection> connsOutput = node.getOutgoingSortedConnections();
	for (IConnection conn : connsOutput) {
   		if (conn.getLineStyle().hasConnectionCategory(IConnectionCategory.DATA)) {
%>
			<%=conn.getName()%>.soapBody = null;
			<%=conn.getName()%>.soapFault = null;
			if (null != esb_service_output_<%=cid%>) {
				<%=conn.getName()%>.soapBody = esb_service_output_<%=cid%>;
			} else if (null != esb_service_fault_<%=cid%>) {
				<%=conn.getName()%>.soapFault = esb_service_fault_<%=cid%>;
			}
<%
		}
	}
%>

