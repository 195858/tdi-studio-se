<%@ jet 
	imports="
        java.util.ArrayList
        java.util.List
        
        org.talend.core.model.process.EConnectionType
        org.talend.core.model.process.ElementParameterParser
        org.talend.core.model.process.IConnection
        org.talend.core.model.process.IHashConfiguration
        org.talend.core.model.process.IHashableColumn
        org.talend.core.model.process.IHashableInputConnections
        org.talend.core.model.process.IMatchingMode
        org.talend.core.model.process.INode
        org.talend.designer.codegen.config.CodeGeneratorArgument
	"
	skeleton="tAdvancedHash_commons.skeleton"
%>

<%
	CodeGeneratorArgument codeGenArgument = (CodeGeneratorArgument) argument;
	INode node = (INode)codeGenArgument.getArgument();
	String cid = node.getUniqueName();
	
    List<IConnection> connections = (List<IConnection>) node.getIncomingConnections();
    List<IConnection> outConnections = (List<IConnection>) node.getOutgoingConnections();
    
    boolean isVirtualGenerateNode = node.isVirtualGenerateNode();
    
if(isVirtualGenerateNode){
    
    List<INode> graphicalNodes = (List<INode>) node.getProcess().getGraphicalNodes();
    
	if (connections != null && connections.size() > 0) {//AAAAAA
        for (IConnection connection : connections) {
        	String connectionName = connection.getName();
		   
			INode validTarget = searchTargetNode(connection);

			if(validTarget != null) {
					IHashableInputConnections target = (IHashableInputConnections) validTarget;
					IHashConfiguration hashConfiguration = target.getHashConfiguration(connection.getName());
					List<IHashableColumn> hashableColumns = null;
					IMatchingMode matchingMode = null;
					String tempFolder = null;
					String rowsBufferSize = null;
					if(hashConfiguration == null) {
						hashableColumns = new ArrayList(0);
						
						//System.out.println(connectionName + " ### " + hashConfiguration + "IS NULL ##### " + validTarget + " " + validTarget.getClass());
						
					} else {
						tempFolder = hashConfiguration.getTemporaryDataDirectory();
						hashableColumns = hashConfiguration.getHashableColumns();
						matchingMode = hashConfiguration.getMatchingMode();
						rowsBufferSize = hashConfiguration.getRowsBufferSize();
					}
					
					String matchingModeStr = null;
					if(matchingMode == null) {
						if(hashableColumns.size() > 0) {
							matchingModeStr = "UNIQUE_MATCH";
						} else {
							matchingModeStr = "ALL_ROWS";
						}
					} else {
						matchingModeStr = matchingMode.toString();
					}
					
					boolean isAllRows = "ALL_ROWS".equals(matchingModeStr);
					
					
			   %>
			   		org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE matchingModeEnum_<%=connectionName%> = 
			   			org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE.<%= matchingModeStr %>;
			   
			   <%
				if(hashConfiguration != null && hashConfiguration.isPersistent()) {
				%>
					org.talend.designer.components.lookup.persistent.Persistent<%= isAllRows ? "" : "Sorted" %>LookupManager<<%=connectionName%>Struct> tHash_Lookup_<%=connectionName%> = 
	   					new org.talend.designer.components.lookup.persistent.Persistent<%= isAllRows ? "" : "Sorted" %>LookupManager<<%=connectionName%>Struct>(matchingModeEnum_<%=connectionName%>, <%= tempFolder %> + "/"+ jobName +"_tMapData_" + pid +"_Lookup_<%=connectionName%>_"
	   					, new org.talend.designer.components.persistent.IRowCreator() {
	   						public <%=connectionName%>Struct createRowInstance() {
	   							return new <%=connectionName%>Struct();
	   						}
	   					}
	   					<% if(!isAllRows) { %>
	   						, <%= rowsBufferSize %>
	   					<% } %>
	   					); 

	   				tHash_Lookup_<%=connectionName%>.initPut();

		   	   	   globalMap.put("tHash_Lookup_<%=connectionName%>", tHash_Lookup_<%=connectionName%>);
	   			<%	
	   			} else {
	   			%>
	   				org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<<%=connectionName%>Struct> tHash_Lookup_<%=connectionName%> = 
	   					org.talend.designer.components.lookup.memory.AdvancedMemoryLookup.
	   						<<%=connectionName%>Struct>getLookup(matchingModeEnum_<%=connectionName%>);

		   	   	   globalMap.put("tHash_Lookup_<%=connectionName%>", tHash_Lookup_<%=connectionName%>);
		   	   	   
				<%
				}
			} else {
				%> 
				/*
				 * Valid target not found for connection "<%= connectionName%>"
				 */ 
				<%
			}
		}
	}//AAAAAA	
}else{
//this part is only for feature:11325

String keyManagement = ElementParameterParser.getValue(node, "__KEYS_MANAGEMENT__");
//PERSISTENT, MEMORY
String dataWriteMode = ElementParameterParser.getValue(node, "__DATA_WRITE_MODEL__");

String tempDirectory = ElementParameterParser.getValue(node, "__TEMPORARY_DATA_DIRECTORY__");
String bufferSize = ElementParameterParser.getValue(node, "__ROWS_BUFFER_SIZE__");

	if (connections != null && connections.size() > 0) {//BBBBBB
        for (IConnection connection : connections) {
        	String connectionName = connection.getName();
        	String matchingModeStr = keyManagement;
        	boolean isAllRows = "ALL_ROWS".equals(matchingModeStr);
        	boolean isPersistent = "PERSISTENT".equals(dataWriteMode);
        	String rowsBufferSize = bufferSize;
        	String tempFolder = tempDirectory;
			   %>
			   		//we don't use "java.io.tmpdir" as default
			   		//String tmpdir_<%=cid %> = AccessController.doPrivileged(new GetPropertyAction("java.io.tmpdir"));
			   		
			   		org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE matchingModeEnum_<%=connectionName%> = 
			   			org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE.<%= matchingModeStr %>;
			   
			   <%
				if(isPersistent) {
				%>
					org.talend.designer.components.lookup.persistent.Persistent<%= isAllRows ? "" : "Sorted" %>LookupManager<<%=connectionName%>Struct> tHash_Lookup_<%=connectionName%> = 
	   					new org.talend.designer.components.lookup.persistent.Persistent<%= isAllRows ? "" : "Sorted" %>LookupManager<<%=connectionName%>Struct>(matchingModeEnum_<%=connectionName%>, <%= tempFolder %> + "/"+ jobName +"_tMapData_" + pid +"_Lookup_<%=connectionName%>_"
	   					, new org.talend.designer.components.persistent.IRowCreator() {
	   						public <%=connectionName%>Struct createRowInstance() {
	   							return new <%=connectionName%>Struct();
	   						}
	   					}
	   					<% if(!isAllRows) { %>
	   						, <%= rowsBufferSize %>
	   					<% } %>
	   					); 

	   				tHash_Lookup_<%=connectionName%>.initPut();

		   	   	   globalMap.put("tHash_Lookup_<%=connectionName%>", tHash_Lookup_<%=connectionName%>);
	   			<%	
	   			} else {
	   			%>
	   				org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<<%=connectionName%>Struct> tHash_Lookup_<%=connectionName%> = 
	   					org.talend.designer.components.lookup.memory.AdvancedMemoryLookup.
	   						<<%=connectionName%>Struct>getLookup(matchingModeEnum_<%=connectionName%>);

		   	   	   globalMap.put("tHash_Lookup_<%=connectionName%>", tHash_Lookup_<%=connectionName%>);
		   	   	   
				<%
				}
        }
    }//BBBBBB

}
%>
            
