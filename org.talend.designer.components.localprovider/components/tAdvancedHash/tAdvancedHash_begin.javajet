<%@ jet 
	imports="
		org.talend.core.model.process.INode 
		org.talend.core.model.process.IConnection
        org.talend.designer.codegen.config.CodeGeneratorArgument
		java.util.List
		java.util.ArrayList
		org.talend.core.model.metadata.IMetadataTable
		org.talend.core.model.metadata.IMetadataColumn
		org.talend.core.model.process.IHashableInputConnections
		org.talend.core.model.process.IHashConfiguration
		org.talend.core.model.process.IHashableColumn
		org.talend.core.model.process.IMatchingMode
		java.util.HashSet
		java.util.Set
		org.talend.core.model.process.EConnectionType
		org.talend.core.model.process.IDataConnection
	"
%>

<%
	CodeGeneratorArgument codeGenArgument = (CodeGeneratorArgument) argument;
	INode node = (INode)codeGenArgument.getArgument();


    List<IConnection> connections = (List<IConnection>) node.getIncomingConnections();
    
	if (connections != null && connections.size() > 0) {
        for (IConnection connection : connections) {
        	String connectionName = connection.getName();
        	%>
			   		// connection name:<%=connectionName%>
			   		// source node:<%=connection.getSource()%> | target node:<%=connection.getTarget()%>
			   		// linked node: <%=((IDataConnection) connection).getLinkNodeForHash()%>
			   <%
			INode validTarget = ((IDataConnection) connection).getLinkNodeForHash();

			if(validTarget != null) {
					IHashableInputConnections target = (IHashableInputConnections) validTarget;
					IHashConfiguration hashConfiguration = target.getHashConfiguration(connection.getName());
					List<IHashableColumn> hashableColumns = null;
					IMatchingMode matchingMode = null;
					String tempFolder = null;
					String rowsBufferSize = null;
					if(hashConfiguration == null) {
						hashableColumns = new ArrayList(0);
						
						//System.out.println(connectionName + " ### " + hashConfiguration + "IS NULL ##### " + validTarget + " " + validTarget.getClass());
						
					} else {
						tempFolder = hashConfiguration.getTemporaryDataDirectory();
						hashableColumns = hashConfiguration.getHashableColumns();
						matchingMode = hashConfiguration.getMatchingMode();
						rowsBufferSize = hashConfiguration.getRowsBufferSize();
					}
					
					String matchingModeStr = null;
					if(matchingMode == null) {
						if(hashableColumns.size() > 0) {
							matchingModeStr = "UNIQUE_MATCH";
						} else {
							matchingModeStr = "ALL_ROWS";
						}
					} else {
						matchingModeStr = matchingMode.toString();
					}
					
					boolean isAllRows = "ALL_ROWS".equals(matchingModeStr);
					
					
			   %>
			   		org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE matchingModeEnum_<%=connectionName%> = 
			   			org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE.<%= matchingModeStr %>;
			   
			   <%
				if(hashConfiguration != null && hashConfiguration.isPersistent()) {
				%>
					org.talend.designer.components.lookup.persistent.Persistent<%= isAllRows ? "" : "Sorted" %>LookupManager<<%=connectionName%>Struct> tHash_Lookup_<%=connectionName%> = 
	   					new org.talend.designer.components.lookup.persistent.Persistent<%= isAllRows ? "" : "Sorted" %>LookupManager<<%=connectionName%>Struct>(matchingModeEnum_<%=connectionName%>, <%= tempFolder %> + "/"+ jobName +"_tMapData_" + pid +"_Lookup_<%=connectionName%>_"
	   					, new org.talend.designer.components.persistent.IRowCreator() {
	   						public <%=connectionName%>Struct createRowInstance() {
	   							return new <%=connectionName%>Struct();
	   						}
	   					}
	   					<% if(!isAllRows) { %>
	   						, <%= rowsBufferSize %>
	   					<% } %>
	   					); 

	   				tHash_Lookup_<%=connectionName%>.initPut();

		   	   	   globalMap.put("tHash_Lookup_<%=connectionName%>", tHash_Lookup_<%=connectionName%>);
	   			<%	
	   			} else {
	   			%>
	   				org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<<%=connectionName%>Struct> tHash_Lookup_<%=connectionName%> = 
	   					org.talend.designer.components.lookup.memory.AdvancedMemoryLookup.
	   						<<%=connectionName%>Struct>getLookup(matchingModeEnum_<%=connectionName%>);

		   	   	   globalMap.put("tHash_Lookup_<%=connectionName%>", tHash_Lookup_<%=connectionName%>);
		   	   	   
				<%
				}
			} else {
				%> 
				/*
				 * Valid target not found for connection "<%= connectionName%>"
				 */ 
				<%
			}
		}
	}

%>
            
