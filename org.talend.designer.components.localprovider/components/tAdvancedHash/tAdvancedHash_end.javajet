<%@ jet 
	imports="
		org.talend.core.model.process.INode 
		org.talend.core.model.process.IConnection
		org.talend.designer.codegen.config.CodeGeneratorArgument
		java.util.List
		org.talend.core.model.metadata.IMetadataTable
		org.talend.core.model.metadata.IMetadataColumn
		
	"
%>

<%
	CodeGeneratorArgument codeGenArgument = (CodeGeneratorArgument) argument;
	INode node = (INode)codeGenArgument.getArgument();
	String cid = node.getUniqueName();

    List<IConnection> connections = (List<IConnection>) node.getIncomingConnections();

	if (connections != null && connections.size() > 0) {
        for (IConnection connection : connections) {
        	String connectionName = connection.getName();

            IMetadataTable metadataTable = connection.getMetadataTable();
            
%>
tHash_Lookup_<%=connectionName%>.endPut();
if (isMultiThreaded_<%=cid%>) {
java.util.List<java.util.concurrent.ConcurrentHashMap<String,Object>> mapsList_<%=cid%> = 
	(java.util.List<java.util.concurrent.ConcurrentHashMap<String,Object>>)globalMap.get("THREAD_MAPS_"+jobName);
if (mapsList_<%=cid%> != null) {
for (java.util.concurrent.ConcurrentHashMap<String,Object> map : mapsList_<%=cid%>) {
	if (globalMap != map) {
		
		org.talend.designer.components.lookup.memory.ConcurrentAdvancedMemoryLookup
	   							<<%=connectionName%>Struct> tmp = (org.talend.designer.components.lookup.memory.ConcurrentAdvancedMemoryLookup
	   							<<%=connectionName%>Struct>)tHash_Lookup_<%=connectionName%>;
	   							
		map.put("tHash_Lookup_<%=connectionName%>",org.talend.designer.components.lookup.memory.ConcurrentAdvancedMemoryLookup.
	   							<<%=connectionName%>Struct>copyLookup(tmp));
	} 
}
}
}


} 
}//end synchronized
<%
		}
	}

%>
