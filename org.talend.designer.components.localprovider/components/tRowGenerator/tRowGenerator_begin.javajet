<%@ jet 
	package="org.talend.designer.codegen.translators" 
	imports="
		org.talend.core.model.process.INode 
		org.talend.core.model.process.ElementParameterParser 
		org.talend.core.model.metadata.IMetadataTable 
		org.talend.core.model.metadata.IMetadataColumn
		org.talend.core.model.process.IConnection
		org.talend.core.model.process.EConnectionType
		org.talend.core.model.metadata.types.JavaTypesManager
		org.talend.core.model.metadata.types.JavaType 
		org.talend.designer.codegen.config.CodeGeneratorArgument
		java.util.Map
		java.util.List
	" 
	class="RowGeneratorBegin" 
%>

<%
	CodeGeneratorArgument codeGenArgument = (CodeGeneratorArgument) argument;
	INode node = (INode)codeGenArgument.getArgument();
	
	String cid = node.getUniqueName();
	List<Map<String, String>> tableValues = (List<Map<String,String>>)ElementParameterParser.getObjectValue(node, "__VALUES__");

%>

int nb_line_<%=cid%> = 0;
int nb_max_row_<%=cid%> = <%=ElementParameterParser.getValue(node, "__NB_ROWS__") %>;

<%
	List<IMetadataTable> metadatas = node.getMetadataList();
	if ((metadatas!=null)&&(metadatas.size()>0)) {
		IMetadataTable metadata = metadatas.get(0);
		
		if (metadata!=null) {
			List<IMetadataColumn> listColumns = metadata.getListColumns(); 
			for (int i=0; i<tableValues.size(); i++) {
				Map<String, String> lineValue = tableValues.get(i);
				
				JavaType javaType = JavaTypesManager.getJavaTypeFromId(listColumns.get(i).getTalendType());
				if(javaType == JavaTypesManager.DATE) {
					String patternValue = listColumns.get(i).getPattern() == null || listColumns.get(i).getPattern().trim().length() == 0 ? null : listColumns.get(i).getPattern();
					java.util.StringTokenizer strToken = new java.util.StringTokenizer(lineValue.get("ARRAY"), ",");
					String[] datearray = new String[strToken.countTokens()];
					int dateArrayIndex=0; 
					while (strToken.hasMoreTokens()){
						datearray[dateArrayIndex++] = strToken.nextToken(); 
					}
%>
		<%=JavaTypesManager.getTypeToGenerate(listColumns.get(i).getTalendType(), listColumns.get(i).isNullable()) %>[] <%=listColumns.get(i).getLabel() %>Array_<%=cid %> = new <%=JavaTypesManager.getTypeToGenerate(listColumns.get(i).getTalendType(), listColumns.get(i).isNullable()) %>[] {<% for (String dateToParse : datearray) { %>ParserUtils.parseTo_Date(<%=dateToParse %>, <%= patternValue %>),<% } %>};
<%
				} else {
%>
		<%=JavaTypesManager.getTypeToGenerate(listColumns.get(i).getTalendType(), listColumns.get(i).isNullable()) %>[] <%=listColumns.get(i).getLabel() %>Array_<%=cid %> = new <%=JavaTypesManager.getTypeToGenerate(listColumns.get(i).getTalendType(), listColumns.get(i).isNullable()) %>[] {<%= lineValue.get("ARRAY") %>};
<%
				}
			}
%>

java.util.Random random<%=cid %> = new java.util.Random(); 
for (int i<%=cid %>=0; i<%=cid %><nb_max_row_<%=cid%> ;i<%=cid %>++) {
<%
			for (IMetadataColumn column: metadata.getListColumns()) {
%>
				int r<%=column.getLabel() %><%=cid %> = random<%=cid %>.nextInt(<%=column.getLabel() %>Array_<%=cid %>.length);
<%
			}
			
			List< ? extends IConnection> conns = node.getOutgoingConnections();
			for (int i=0;i<conns.size();i++) {
				IConnection conn = conns.get(i);
				if (((conn.getLineStyle().equals(EConnectionType.FLOW_MAIN))||(conn.getLineStyle().equals(EConnectionType.FLOW_REF)))) {
					for (IMetadataColumn column: metadata.getListColumns()) {
%>
				<%=conn.getName() %>.<%=column.getLabel() %> = <%=column.getLabel() %>Array_<%=cid %>[r<%=column.getLabel() %><%=cid %>];
<%
					}
				}
			}
%>
			nb_line_<%=cid %>++;
<%
		}
	}
%>