<%@ jet 
imports="
    org.talend.designer.codegen.config.CodeGeneratorArgument
    org.talend.core.model.process.INode
    org.talend.core.model.process.ElementParameterParser
    org.talend.core.model.process.IConnection
    org.talend.core.model.metadata.IMetadataColumn
    org.talend.core.model.metadata.IMetadataTable
    org.talend.core.model.metadata.types.JavaTypesManager
    org.talend.core.model.metadata.types.JavaType
    org.talend.core.model.process.IConnectionCategory
    java.util.List
    java.util.Map
    "
%>

<%
CodeGeneratorArgument codeGenArgument = (CodeGeneratorArgument) argument;
INode node = (INode)codeGenArgument.getArgument();
String cid = node.getUniqueName();
String incomingConnName = null;
List<? extends IConnection> conns = node.getIncomingConnections();
if(conns != null && conns.size() > 0) {
    for(IConnection conn : conns) {
        incomingConnName = conn.getName();
        break;
    }
}
String rejectConnName = null;
List<? extends IConnection> rejectConns = node.getOutgoingConnections("REJECT");
if(rejectConns != null && rejectConns.size() > 0) {
    for(IConnection conn : rejectConns) {
        rejectConnName = conn.getName();
    }
}
List<? extends IConnection> outgoingConns = node.getOutgoingSortedConnections();
List<IMetadataColumn> columnList = node.getMetadataFromConnector("FLOW").getListColumns();
List<IMetadataColumn> columnListToTest = columnList;

if(incomingConnName != null && columnList != null && columnList.size() > 0) {
    for(IConnection conn : outgoingConns) {
    	if (conn.getLineStyle().hasConnectionCategory(IConnectionCategory.DATA)) {
    %><%=conn.getName() %> = null;			
<%
    	}
	}
%>    
    boolean ifPassed_<%=cid%> = true;
    String errorCode_<%=cid%> = null;
    String errorMessage_<%=cid%> = null;
    <%
    String anotherChecked = ElementParameterParser.getValue(node,"__CHECK_ANOTHER__");
    String checkAll = ElementParameterParser.getValue(node,"__CHECK_ALL__");
    List<IMetadataColumn> schemaOtherColumns = null;
    if(anotherChecked.equals("true")) {
        IMetadataTable schemaOther = node.getMetadataFromConnector("OTHER");
        if(schemaOther != null) {
            columnListToTest = schemaOther.getListColumns();
        }
    }
    class SchemaChecker {
        public void  testDataType(String incomingConnName, IMetadataColumn metadataColumn, String typeSelected, String cid) {
            JavaType javaType = JavaTypesManager.getJavaTypeFromId(metadataColumn.getTalendType());
            if(javaType == JavaTypesManager.OBJECT || javaType == JavaTypesManager.STRING) {
                %>
                try {
                    <%=typeSelected%> tester_<%=cid%> = <%=typeSelected%>.valueOf(<%=incomingConnName%>.<%=metadataColumn.getLabel()%>);
                } catch(Exception e) {
                    ifPassed_<%=cid%> = false;
                    errorCode_<%=cid%> = "2";
                    errorMessage_<%=cid%> = "wrong type";
                }
                <%
            }
        }
        public void testDataLength(String incomingConnName, IMetadataColumn metadataColumn, Integer maxLength, String cid) {
            JavaType javaType = JavaTypesManager.getJavaTypeFromId(metadataColumn.getTalendType());
            if(javaType == JavaTypesManager.STRING) {
                if(maxLength != null)
                {
                    %>
                    if(<%=incomingConnName%>.<%=metadataColumn.getLabel()%> != null) {
                        if(<%=incomingConnName%>.<%=metadataColumn.getLabel()%>.length() > <%=maxLength%>) {
                            ifPassed_<%=cid%> = false;
                            errorCode_<%=cid%> = "8";
                            errorMessage_<%=cid%> = "exceed max length";                        
                        }
                    }
                    <%
                }
            }
        }
    }
    SchemaChecker checker = new SchemaChecker();
    List<Map<String, String>> checkedColumns = (List<Map<String,String>>)ElementParameterParser.getObjectValue(node,"__CHECKCOLS__");
    for(IMetadataColumn metadataColumn : columnList) {
        for(Map<String, String> checkedColumn : checkedColumns) {
            if(metadataColumn.getLabel().equals(checkedColumn.get("SCHEMA_COLUMN"))) {
            	int columnIndex = columnList.indexOf(metadataColumn);
            	if (anotherChecked.equals("true") && (columnListToTest.size() > columnIndex)) {
            		String typeToTest = columnListToTest.get(columnList.indexOf(metadataColumn)).getTalendType();
            		typeToTest = JavaTypesManager.getTypeToGenerate(typeToTest, true);
            		checker.testDataType(incomingConnName,metadataColumn,typeToTest,cid);
            	} else {
                	checker.testDataType(incomingConnName,metadataColumn,checkedColumn.get("SELECTED_TYPE"),cid);
                }
                if(checkAll.equals("true") || anotherChecked.equals("true")) {
                	if (columnListToTest.size() < columnIndex) {
                		continue;
                	}
                    %>
                    //validate nullable
                    boolean <%=metadataColumn.getLabel()%>_inputTypeCanTestNullable_<%=cid%> = <%=!JavaTypesManager.getJavaTypeFromId(metadataColumn.getTalendType()).isPrimitive()%>;
                    if(<%=!columnListToTest.get(columnIndex).isNullable()%> && <%=metadataColumn.getLabel()%>_inputTypeCanTestNullable_<%=cid%> && 
                       	<%=incomingConnName%>.<%=metadataColumn.getLabel()%> == null) {
                        ifPassed_<%=cid%> = false;
                        errorCode_<%=cid%> = "4";
                        errorMessage_<%=cid%> = "empty or null";                        
                    }
                    //validate maxlength
                    <%
                    checker.testDataLength(incomingConnName,metadataColumn,columnListToTest.get(columnIndex).getLength(),cid);
                } else {
                    String checkNullable = checkedColumn.get("NULLABLE");
                    String checkMaxLength = checkedColumn.get("MAX_LENGTH");
                    if(checkNullable.equals("true") && !metadataColumn.isNullable()) { // if the column we test is nullable, no need
                        %>
                        boolean <%=metadataColumn.getLabel()%>_inputTypeCanTestNullable_<%=cid%> = <%=!JavaTypesManager.getJavaTypeFromId(metadataColumn.getTalendType()).isPrimitive()%>;
                        if(<%=metadataColumn.getLabel()%>_inputTypeCanTestNullable_<%=cid%> && 
                        	<%=incomingConnName%>.<%=metadataColumn.getLabel()%> == null) {
                            ifPassed_<%=cid%> = false;
                            errorCode_<%=cid%> = "4";
                            errorMessage_<%=cid%> = "empty or null";                        
                        }                        
                        <%
                    }
                    if(checkMaxLength.equals("true")) {
                        checker.testDataLength(incomingConnName,metadataColumn, metadataColumn.getLength(),cid);
                    }
                }
                break;
            }
        }
    }
    if(outgoingConns != null && outgoingConns.size() > 0) {
        %>
        if(ifPassed_<%=cid%>) {
        <%    
            for(IConnection conn : outgoingConns) {
                if(rejectConnName == null || (rejectConnName != null && !rejectConnName.equals(conn.getName()))){
            %>            
                <%=conn.getName() %> = new <%=conn.getName() %>Struct();
                    <%for(IMetadataColumn metadataColumn : columnList) {
                        %>
                        <%=conn.getName()%>.<%=metadataColumn.getLabel()%> = <%=incomingConnName%>.<%=metadataColumn.getLabel()%>;
                        <%
                    }
                }
            }
        %>
        }
        <%
    }
    if(rejectConnName != null) {
        %>
        if(!ifPassed_<%=cid%>) {
            <%=rejectConnName %> = new <%=rejectConnName %>Struct();
            <%
            for(IMetadataColumn metadataColumn : columnList) {
                %>
                <%=rejectConnName%>.<%=metadataColumn.getLabel()%> = <%=incomingConnName%>.<%=metadataColumn.getLabel()%>;
                <%
            }
            %>
            <%=rejectConnName%>.errorCode = errorCode_<%=cid%>;
            <%=rejectConnName%>.errorMessage = errorMessage_<%=cid%>;            
        }
        <%
    }
}
%>
