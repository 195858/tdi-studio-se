<%@ jet 
  imports="
    org.talend.designer.codegen.config.CodeGeneratorArgument
    org.talend.core.model.process.INode
    org.talend.core.model.process.ElementParameterParser
    org.talend.core.model.process.IConnection
    org.talend.core.model.metadata.IMetadataColumn
    org.talend.core.model.metadata.IMetadataTable
    org.talend.core.model.metadata.types.JavaTypesManager
    org.talend.core.model.metadata.types.JavaType
    org.talend.core.model.process.IConnectionCategory
    "
%>
<%
CodeGeneratorArgument codeGenArgument = (CodeGeneratorArgument) argument;
INode node = (INode)codeGenArgument.getArgument();
String cid = node.getUniqueName();
%>
	
class SccUtil_<%=cid%>{
	boolean ifPassed = true;
	int errorCode = 0;
	String errorMessage = "";
	void handleBigdecimalPrecision(String data, int iPrecision, int maxLength){
		//number of digits before the decimal point(ignoring frontend zeroes)
		int len1 = 0;
		int len2 = 0;
		ifPassed = true;
		errorCode = 0;
		errorMessage = "";
		if(data.startsWith("-")){
			data = data.substring(1);
		}
		data = org.apache.commons.lang.StringUtils.stripStart(data, "0");
		  
		if(data.indexOf(".") >= 0){
			len1 = data.indexOf(".");    
		    data = org.apache.commons.lang.StringUtils.stripEnd(data, "0");
		    len2 = data.length() - (len1 + 1);
		}else{
		    len1 = data.length();
		}
		
		if (iPrecision < len2) {
			ifPassed = false;
			errorCode += 8;
			errorMessage += "|precision Non-matches";
		} else if (maxLength < len1 + iPrecision) {
			ifPassed = false;
			errorCode += 8;
			errorMessage += "|invalid Length setting is unsuitable for Precision";
		}
	}
	int handleErrorCode(int errorCode, int resultErrorCode){
		if (errorCode > 0) {
			if (resultErrorCode > 0) {
				resultErrorCode = 16;
			} else {
				resultErrorCode = errorCode;
			}
		}
		return resultErrorCode;
	}
	String handleErrorMessage(String errorMessage, String resultErrorMessage, String columnLabel){
		if (errorMessage.length() > 0) {
			if (resultErrorMessage.length() > 0) {
				resultErrorMessage += ";"+ errorMessage.replaceFirst("\\|", columnLabel);
			} else {
				resultErrorMessage = errorMessage.replaceFirst("\\|", columnLabel);
			}
		}
		return resultErrorMessage;
	}
}
SccUtil_<%=cid%> sccUtil_<%=cid%> = new SccUtil_<%=cid%>();
