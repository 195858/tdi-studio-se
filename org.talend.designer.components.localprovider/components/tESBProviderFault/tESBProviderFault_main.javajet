<%@ jet
	imports="
		org.talend.core.model.process.INode
		org.talend.core.model.process.ElementParameterParser
		org.talend.core.model.metadata.IMetadataTable
		org.talend.core.model.metadata.IMetadataColumn
		org.talend.core.model.process.IConnection
		org.talend.core.model.process.IConnectionCategory
		org.talend.designer.codegen.config.CodeGeneratorArgument
		org.talend.core.model.metadata.types.JavaTypesManager
		org.talend.core.model.metadata.types.JavaType
		java.util.List
	"
%>
<%
CodeGeneratorArgument codeGenArgument = (CodeGeneratorArgument) argument;
INode node = (INode)codeGenArgument.getArgument();
String cid = node.getUniqueName();
List<IMetadataTable> metadatas = node.getMetadataList();
if (null != metadatas && 0 < metadatas.size()) {
	IMetadataTable metadata = metadatas.get(0);
	if (null != metadata) {
		List< ? extends IConnection> conns = node.getIncomingConnections();
		if(null != conns && 0 < conns.size()) {
			IConnection conn = conns.get(0);
			if(conn.getLineStyle().hasConnectionCategory(IConnectionCategory.DATA)) {
				List<IMetadataColumn> columns = metadata.getListColumns();
				int sizeColumns = columns.size();
				for (int i = 0; i < sizeColumns; i++) {
					IMetadataColumn column = columns.get(i);
					JavaType javaType = JavaTypesManager.getJavaTypeFromId(column.getTalendType());
%>
	String esbProviderFaultXml_<%=cid%> = String.valueOf(<%=conn.getName()%>.<%=column.getLabel()%>);

	System.out.println("--- [tESBProviderFault] fault put to response: " + esbProviderFaultXml_<%=cid%>);

	java.util.HashMap<String, String> esbResponseMapFault_<%=cid%> =
		(java.util.HashMap<String, String>) globalMap.get("esbResponseMap");

	String faultStr_<%=cid%> = esbResponseMapFault_<%=cid%>.get("fault");
	if (faultStr_<%=cid%> == null) {
		faultStr_<%=cid%> = "";
	}
	faultStr_<%=cid%> += "[<%=cid%>]: " + esbProviderFaultXml_<%=cid%> +"\n";
	esbResponseMapFault_<%=cid%>.put("fault", faultStr_<%=cid%>);
<%
					break; // TODO: ??? mutli-columns handling
				}
			}
		}
	}
}
%>
