<%@ jet 
imports="
    org.talend.core.model.process.INode 
    org.talend.core.model.process.ElementParameterParser 
    org.talend.core.model.metadata.IMetadataTable 
    org.talend.core.model.metadata.IMetadataColumn
    org.talend.designer.codegen.config.CodeGeneratorArgument
    java.util.List
" 
%>

<%
CodeGeneratorArgument codeGenArgument = (CodeGeneratorArgument) argument;
INode node = (INode)codeGenArgument.getArgument();
	
List<IMetadataTable> metadatas = node.getMetadataList();
if ((metadatas!=null)&&(metadatas.size()>0)) {
    IMetadataTable metadata = metadatas.get(0);
    if (metadata!=null) {
        String cid = metadata.getTableName();
        int nbFields = metadata.getListColumns().size();

        String dbhost = ElementParameterParser.getValue(node, "__HOST__");
        String dbport = ElementParameterParser.getValue(node, "__PORT__");
        String dbname = ElementParameterParser.getValue(node, "__DBNAME__");
        String dbuser = ElementParameterParser.getValue(node, "__USER__");
        String dbpass = ElementParameterParser.getValue(node, "__PASS__");
        String encoding = ElementParameterParser.getValue(
            node,
            "__ENCODING__"
        );
        String query = ElementParameterParser.getValue(node, "__QUERY__");
%>

use DBI;

my %desc_<%=cid %> = (
    dbhost        => <%=dbhost %>,
    dbport        => <%=dbport %>,
    dbname        => <%=dbname %>,
    dbuser        => <%=dbuser %>,
    dbpass        => <%=dbpass %>,
    encoding      => <%=encoding %>,
    query         => <%=query %>,
    schema        => [
<%
        for (IMetadataColumn column: metadata.getListColumns()) {
%>
    	{
            name    => '<%=column.getLabel() %>',
            key     => <%=column.isKey() %>,
            type    => '<%=column.getType() %>',
            len     => <%=column.getLength() %>,
            null    => <%=column.isNullable() %>,
            default => '<%=column.getDefault() %>',
            comment => '<%=column.getComment() %>',
        },
<%
    }
%>
    ],
);

my $nb_line_<%=cid%> = 0;

if ($desc_<%=cid %>{encoding} =~ m/^utf-?8$/i) {
    $ENV{NLS_LANG} = 'AMERICAN_AMERICA.AL32UTF8';
}
elsif ($desc_<%=cid %>{encoding} =~ m/^iso-?8859-?1$/i) {
    $ENV{NLS_LANG} = 'AMERICAN_AMERICA.WE8ISO8859P1';
}

my $dbh_<%=cid %> = DBI->connect(
    sprintf(
        'dbi:Oracle:host=%s;sid=%s;port=%s',
        <%=dbhost %>,
        <%=dbname %>,
        <%=dbport %>,
    ),
    <%=dbuser %>,
    <%=dbpass %>,
)
    or die "can't connect to database";

my $sth_<%=cid %>;
my $query;

$sth_<%=cid %> = $dbh_<%=cid %>->prepare(
    <%=query%>
);

$sth_<%=cid %>->execute()
    or die "can't execute input query";

if ($_context{StoreSQLQuery}) {
    $_globals{<%=cid %>}{QUERY} = $desc_<%=cid %>{query};
}

my $noSlicing_<%=cid%> = false ;
my $isFirstRow_<%=cid%> = true ;

# fetch the N first columns (defined by component schema) from the SQL
# result
while (my $_<%=cid %> = $sth_<%=cid %>->fetchrow_arrayref()) {

    if($isFirstRow_<%=cid%>){
        if( <%=nbFields%> == scalar(@$_<%=cid %>) ){
            $noSlicing_<%=cid%> = true;
        }
        $isFirstRow_<%=cid%> = false ;
    }

    my $<%=cid %> = [];
    if($noSlicing_<%=cid%>){
        $<%=cid %> = $_<%=cid %> ;
    }
    else {
        $<%=cid %> = [
<%
    int icol = 0;
    for (IMetadataColumn column: metadata.getListColumns()) {
%>
            $_<%=cid %>->[<%=icol%>],
<%
        icol++;
    }
%>        
        ];
    }
    $nb_line_<%=cid%>++;
<%
    }
}
%>
