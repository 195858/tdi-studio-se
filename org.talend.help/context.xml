<?xml version="1.0" encoding="utf-8" standalone="no"?>
<contexts>
   <context id="tBigQueryBulkExec">
      <description>This component transfers given data to Google BigQuery.</description>
      <topic href="guide/components/en/tBigQueryBulkExec.html" label="tBigQueryBulkExec Component Documentation"/>
   </context>
   <context id="tBigQueryInput">
      <description>This component performed the queries supported by Google BigQuery.</description>
      <topic href="guide/components/en/tBigQueryInput.html" label="tBigQueryInput Component Documentation"/>
   </context>
   <context id="tBigQueryOutput">
      <description>This component transfers the data provided by its preceding component to Google BigQuery.</description>
      <topic href="guide/components/en/tBigQueryOutput.html" label="tBigQueryOutput Component Documentation"/>
   </context>
   <context id="tBigQueryOutputBulk">
      <description>This component creates a .txt or .csv file for the data of large size so that you can process it according to your needs before transferring it to Google BigQuery.</description>
      <topic href="guide/components/en/tBigQueryOutputBulk.html" label="tBigQueryOutputBulk Component Documentation"/>
   </context>
   <context id="tCassandraClose">
      <description>tCassandraClose is used to close an active connection to the Cassandra server.</description>
      <topic href="guide/components/en/tCassandraClose.html" label="tCassandraClose Component Documentation"/>
   </context>
   <context id="tCassandraConnection">
      <description>tCassandraConnection allows you to define a connection to a Cassandra server to be reused by other Cassandra components.</description>
      <topic href="guide/components/en/tCassandraConnection.html" label="tCassandraConnection Component Documentation"/>
   </context>
   <context id="tCassandraInput">
      <description>tCassandraInput reads data from the specified Cassandra keyspace and sends data to the next component.</description>
      <topic href="guide/components/en/tCassandraInput.html" label="tCassandraInput Component Documentation"/>
   </context>
   <context id="tCassandraOutput">
      <description>tCassandraOutput is used to output data into Cassandra.</description>
      <topic href="guide/components/en/tCassandraOutput.html" label="tCassandraOutput Component Documentation"/>
   </context>
   <context id="tCassandraRow">
      <description>Depending on the nature of the query and the database, tCassandraRow acts on the actual DB structure or on the data (although without handling data).</description>
      <topic href="guide/components/en/tCassandraRow.html" label="tCassandraRow Component Documentation"/>
   </context>
   <context id="tHBaseClose">
      <description>This component closes a transaction.</description>
      <topic href="guide/components/en/tHBaseClose.html" label="tHBaseClose Component Documentation"/>
   </context>
   <context id="tHBaseConnection">
      <description>This component allows you to commit all of the Job data to an output database in just a single transaction, once the data has been validated.</description>
      <topic href="guide/components/en/tHBaseConnection.html" label="tHBaseConnection Component Documentation"/>
   </context>
   <context id="tHBaseInput">
      <description>tHBaseInput extracts columns corresponding to schema definition. Then it passes these columns to the next component via a Main row link.</description>
      <topic href="guide/components/en/tHBaseInput.html" label="tHBaseInput Component Documentation"/>
   </context>
   <context id="tHBaseOutput">
      <description>tHBaseOutput writes columns of data into a given tHBase database.</description>
      <topic href="guide/components/en/tHBaseOutput.html" label="tHBaseOutput Component Documentation"/>
   </context>
   <context id="tHCatalogInput">
      <description>The tHCatalogInput component reads data from the specified HCatalog managed database and sends data in the talend flow to the console or to a specified local file by connecting this component to a proper component.</description>
      <topic href="guide/components/en/tHCatalogInput.html" label="tHCatalogInput Component Documentation"/>
   </context>
   <context id="tHCatalogLoad">
      <description>The tHCatalogLoad component writes data into an established HCatalog managed table from an existing file in HDFS.</description>
      <topic href="guide/components/en/tHCatalogLoad.html" label="tHCatalogLoad Component Documentation"/>
   </context>
   <context id="tHCatalogOperation">
      <description>The tHCatalogOperation component offers a platform on which you can operate in HCatalog managed database/table/partition in HDFS.</description>
      <topic href="guide/components/en/tHCatalogOperation.html" label="tHCatalogOperation Component Documentation"/>
   </context>
   <context id="tHCatalogOutput">
      <description>The tHCatalogOutput component writes data into a HCatalog managed table using Talend data flow.</description>
      <topic href="guide/components/en/tHCatalogOutput.html" label="tHCatalogOutput Component Documentation"/>
   </context>
   <context id="tHDFSCompare">
      <description>This component helps to control the quality of the data processed.</description>
      <topic href="guide/components/en/tHDFSCompare.html" label="tHDFSCompare Component Documentation"/>
   </context>
   <context id="tHDFSConnection">
      <description>tHDFSConnection connects to a given HDFS so that the other Hadoop components can reuse the connection it creates to communicate with this HDFS.</description>
      <topic href="guide/components/en/tHDFSConnection.html" label="tHDFSConnection Component Documentation"/>
   </context>
   <context id="tHDFSCopy">
      <description>tHDFSCopy moves files in HDFS with or without keeping the source.</description>
      <topic href="guide/components/en/tHDFSCopy.html" label="tHDFSCopy Component Documentation"/>
   </context>
   <context id="tHDFSDelete">
      <description>tHDFSDelete deletes a file on a given HDFS.</description>
      <topic href="guide/components/en/tHDFSDelete.html" label="tHDFSDelete Component Documentation"/>
   </context>
   <context id="tHDFSExist">
      <description>This component checks the existence of a specific file in HDFS.</description>
      <topic href="guide/components/en/tHDFSExist.html" label="tHDFSExist Component Documentation"/>
   </context>
   <context id="tHDFSGet">
      <description>tHDFSGet connects to Hadoop distributed file system, helping to obtain large-scale files with optimized performance.</description>
      <topic href="guide/components/en/tHDFSGet.html" label="tHDFSGet Component Documentation"/>
   </context>
   <context id="tHDFSInput">
      <description>tHDFSInput extracts the data in a HDFS file for other components to process it.</description>
      <topic href="guide/components/en/tHDFSInput.html" label="tHDFSInput Component Documentation"/>
   </context>
   <context id="tHDFSList">
      <description>tHDFSList retrieves a list of files or folders based on a filemask pattern and iterates on each unity.</description>
      <topic href="guide/components/en/tHDFSList.html" label="tHDFSList Component Documentation"/>
   </context>
   <context id="tHDFSOutput">
      <description>tHDFSOnput writes data of interest into a file and creates this file on a given HDFS.</description>
      <topic href="guide/components/en/tHDFSOutput.html" label="tHDFSOutput Component Documentation"/>
   </context>
   <context id="tHDFSProperties">
      <description>This component presents the properties of a file processed in HDFS.</description>
      <topic href="guide/components/en/tHDFSProperties.html" label="tHDFSProperties Component Documentation"/>
   </context>
   <context id="tHDFSPut">
      <description>tHDFSPut connects to Hadoop distributed file system to load large-scale files into it with optimized performance.</description>
      <topic href="guide/components/en/tHDFSPut.html" label="tHDFSPut Component Documentation"/>
   </context>
   <context id="tHDFSRename">
      <description>tHDFSRename renames files selected from a local directory towards a distant HDFS directory.</description>
      <topic href="guide/components/en/tHDFSRename.html" label="tHDFSRename Component Documentation"/>
   </context>
   <context id="tHDFSRowCount">
      <description>This component counts the number of rows in a file in HDFS.</description>
      <topic href="guide/components/en/tHDFSRowCount.html" label="tHDFSRowCount Component Documentation"/>
   </context>
   <context id="tHiveClose">
      <description>This component closes connection to a Hive databases.</description>
      <topic href="guide/components/en/tHiveClose.html" label="tHiveClose Component Documentation"/>
   </context>
   <context id="tHiveConnection">
      <description>This component allows you to commit all of the Job data to an output database in just a single transaction, once the data has been validated.</description>
      <topic href="guide/components/en/tHiveConnection.html" label="tHiveConnection Component Documentation"/>
   </context>
   <context id="tHiveInput">
      <description>tHiveInput executes the select queries to extract the corresponding data and sends the data to the component that follows.</description>
      <topic href="guide/components/en/tHiveInput.html" label="tHiveInput Component Documentation"/>
   </context>
   <context id="tHiveRow">
      <description>Depending on the nature of the query and the database, tHiveRow acts on the actual DB structure or on the data (although without handling data). The SQLBuilder tool helps you write your HiveQL statements easily.</description>
      <topic href="guide/components/en/tHiveRow.html" label="tHiveRow Component Documentation"/>
   </context>
   <context id="tMongoDBClose">
      <description>This component closes a connection to the Mongo database.</description>
      <topic href="guide/components/en/tMongoDBClose.html" label="tMongoDBClose Component Documentation"/>
   </context>
   <context id="tMongoDBConnection">
      <description>This component allows you to create a connection to a Mongo database and reuse that connection in other components.</description>
      <topic href="guide/components/en/tMongoDBConnection.html" label="tMongoDBConnection Component Documentation"/>
   </context>
   <context id="tMongoDBInput">
      <description>This component allows you to retrieve records from a collection in the Mongo database and transfer them to the following component for display or storage.</description>
      <topic href="guide/components/en/tMongoDBInput.html" label="tMongoDBInput Component Documentation"/>
   </context>
   <context id="tMongoDBOutput">
      <description>This component executes the action defined on the collection in the Mongo database.</description>
      <topic href="guide/components/en/tMongoDBOutput.html" label="tMongoDBOutput Component Documentation"/>
   </context>
   <context id="tMongoDBRow">
      <description>This component allows you to execute the commands and functions of the Mongo database.</description>
      <topic href="guide/components/en/tMongoDBRow.html" label="tMongoDBRow Component Documentation"/>
   </context>
   <context id="tPigAggregate">
      <description>The tPigAggregate component adds one or more additional columns to the output of the grouped data to create data to be used by Pig.</description>
      <topic href="guide/components/en/tPigAggregate.html" label="tPigAggregate Component Documentation"/>
   </context>
   <context id="tPigCode">
      <description>tPigCode extends the functionalities of a Talend Job through using Pig scripts.</description>
      <topic href="guide/components/en/tPigCode.html" label="tPigCode Component Documentation"/>
   </context>
   <context id="tPigCross">
      <description>The tPigCross component uses CROSS operator to compute the Cartesian product.</description>
      <topic href="guide/components/en/tPigCross.html" label="tPigCross Component Documentation"/>
   </context>
   <context id="tPigDistinct">
      <description>The tPigDistinct component removes duplicate tuples in a relation.</description>
      <topic href="guide/components/en/tPigDistinct.html" label="tPigDistinct Component Documentation"/>
   </context>
   <context id="tPigFilterColumns">
      <description>This tPigFilterColumns component selects data or filters out data from a relation based on defined filter conditions.</description>
      <topic href="guide/components/en/tPigFilterColumns.html" label="tPigFilterColumns Component Documentation"/>
   </context>
   <context id="tPigFilterRow">
      <description>This component is used to filter the input flow in a Pig chain based on conditions set on one or more columns.</description>
      <topic href="guide/components/en/tPigFilterRow.html" label="tPigFilterRow Component Documentation"/>
   </context>
   <context id="tPigJoin">
      <description>The tPigJoin component is used to perform inner joins and outer joins of two files based on join keys to create data that will be used by Pig.</description>
      <topic href="guide/components/en/tPigJoin.html" label="tPigJoin Component Documentation"/>
   </context>
   <context id="tPigLoad">
      <description>The tPigLoad component loads original input data to an output stream in just one single transaction, once the data has been validated.</description>
      <topic href="guide/components/en/tPigLoad.html" label="tPigLoad Component Documentation"/>
   </context>
   <context id="tPigSort">
      <description>The tPigSort component is used to sort relation based on one or more defined sort keys.</description>
      <topic href="guide/components/en/tPigSort.html" label="tPigSort Component Documentation"/>
   </context>
   <context id="tPigStoreResult">
      <description>The tPigStoreResult component is used to store the result into defined data storage space.</description>
      <topic href="guide/components/en/tPigStoreResult.html" label="tPigStoreResult Component Documentation"/>
   </context>
   <context id="tSqoopExport">
      <description>tSqoopExport is used to define the arguments required by Sqoop for transferring data to a RDBMS.</description>
      <topic href="guide/components/en/tSqoopExport.html" label="tSqoopExport Component Documentation"/>
   </context>
   <context id="tSqoopImport">
      <description>tSqoopImport is used to define the arguments required by Sqoop for writing the data of your interest into HDFS.</description>
      <topic href="guide/components/en/tSqoopImport.html" label="tSqoopImport Component Documentation"/>
   </context>
   <context id="tSqoopImportAllTables">
      <description>tSqoopImportAllTables is used to define the arguments required by Sqoop for writing all of the tables of a database into HDFS.</description>
      <topic href="guide/components/en/tSqoopImportAllTables.html" label="tSqoopImportAllTables Component Documentation"/>
   </context>
   <context id="tAlfrescoOutput">
      <description>Allows to create and manage documents in an Alfresco server.</description>
      <topic href="guide/components/en/tAlfrescoOutput.html" label="tAlfrescoOutput Component Documentation"/>
   </context>
   <context id="tBonitaDeploy">
      <description>This component deploys a specific Bonita process to a Bonita Runtime.</description>
      <topic href="guide/components/en/tBonitaDeploy.html" label="tBonitaDeploy Component Documentation"/>
   </context>
   <context id="tBonitaInstantiateProcess">
      <description>This component starts an instance for a specific process deployed in a Bonita Runtime engine.</description>
      <topic href="guide/components/en/tBonitaInstantiateProcess.html" label="tBonitaInstantiateProcess Component Documentation"/>
   </context>
   <context id="tCentricCRMInput">
      <description>Allows to extract data from a Centric CRM DB based on a query.</description>
      <topic href="guide/components/en/tCentricCRMInput.html" label="tCentricCRMInput Component Documentation"/>
   </context>
   <context id="tCentricCRMOutput">
      <description>Allows to write data into a CentricCRM DB.</description>
      <topic href="guide/components/en/tCentricCRMOutput.html" label="tCentricCRMOutput Component Documentation"/>
   </context>
   <context id="tHL7Input">
      <description>Opens an HL7 structured file and reads it row by row to split them up into fields then sends the fields as defined in the Schema to the next component, via a Row link.</description>
      <topic href="guide/components/en/tHL7Input.html" label="tHL7Input Component Documentation"/>
   </context>
   <context id="tHL7Output">
      <description>This component writes an HL7 structured file according to the HL7 standards.</description>
      <topic href="guide/components/en/tHL7Output.html" label="tHL7Output Component Documentation"/>
   </context>
   <context id="tMarketoInput">
      <description>The tMarketoInput component allows you to retrieve data from a Marketo DB on a Web server.</description>
      <topic href="guide/components/en/tMarketoInput.html" label="tMarketoInput Component Documentation"/>
   </context>
   <context id="tMarketoListOperation">
      <description>The tMarketoListOperation component allows you to add/remove one or more leads to/from a list in the Marketo DB on a Web server. Also, you can verify the existence of one or more leads in a list in the Marketo DB.</description>
      <topic href="guide/components/en/tMarketoListOperation.html" label="tMarketoListOperation Component Documentation"/>
   </context>
   <context id="tMarketoOutput">
      <description>The tMarketoOutput component allows you to write data into a Marketo DB on a Web server.</description>
      <topic href="guide/components/en/tMarketoOutput.html" label="tMarketoOutput Component Documentation"/>
   </context>
   <context id="tMicrosoftCrmInput">
      <description>Allows to extract data from a Microsoft CRM DB based on conditions set on specific columns.</description>
      <topic href="guide/components/en/tMicrosoftCrmInput.html" label="tMicrosoftCrmInput Component Documentation"/>
   </context>
   <context id="tMicrosoftCrmOutput">
      <description>Allows to write data into a Microsoft CRM DB.</description>
      <topic href="guide/components/en/tMicrosoftCrmOutput.html" label="tMicrosoftCrmOutput Component Documentation"/>
   </context>
   <context id="tMSAXInput">
      <description>This component allows to extract data from a MicrosoftAX server based on a query.</description>
      <topic href="guide/components/en/tMSAXInput.html" label="tMSAXInput Component Documentation"/>
   </context>
   <context id="tMSAXOutput">
      <description>This component allows to write data in a MicrosoftAX server.</description>
      <topic href="guide/components/en/tMSAXOutput.html" label="tMSAXOutput Component Documentation"/>
   </context>
   <context id="tOpenbravoERPInput">
      <description>This component allows you to extract data from OpenBravoERP database according to the conditions defined in specific columns.</description>
      <topic href="guide/components/en/tOpenbravoERPInput.html" label="tOpenbravoERPInput Component Documentation"/>
   </context>
   <context id="tOpenbravoERPOutput">
      <description>This component writes data in an OpenbravoERP database.</description>
      <topic href="guide/components/en/tOpenbravoERPOutput.html" label="tOpenbravoERPOutput Component Documentation"/>
   </context>
   <context id="tSageX3Input">
      <description>This component extracts data from a given Sage X3 system.</description>
      <topic href="guide/components/en/tSageX3Input.html" label="tSageX3Input Component Documentation"/>
   </context>
   <context id="tSageX3Output">
      <description>This component writes data into a given Sage X3 system.</description>
      <topic href="guide/components/en/tSageX3Output.html" label="tSageX3Output Component Documentation"/>
   </context>
   <context id="tSalesforceBulkExec">
      <description>As a dedicated component, tSalesforceBulkExec gains performance while carrying out the intended data operations into your Salesforce.com.</description>
      <topic href="guide/components/en/tSalesforceBulkExec.html" label="tSalesforceBulkExec Component Documentation"/>
   </context>
   <context id="tSalesforceConnection">
      <description>The component enables connection to a Salesforce.</description>
      <topic href="guide/components/en/tSalesforceConnection.html" label="tSalesforceConnection Component Documentation"/>
   </context>
   <context id="tSalesforceGetDeleted">
      <description>This component can collect the deleted data from a Salesforce object during a specific period of time.</description>
      <topic href="guide/components/en/tSalesforceGetDeleted.html" label="tSalesforceGetDeleted Component Documentation"/>
   </context>
   <context id="tSalesforceGetServerTimestamp">
      <description>This component retrieves the current date of the Salesforce server presented in a timestamp format.</description>
      <topic href="guide/components/en/tSalesforceGetServerTimestamp.html" label="tSalesforceGetServerTimestamp Component Documentation"/>
   </context>
   <context id="tSalesforceGetUpdated">
      <description>This component can collect all updated data from a given Salesforce object during a specific period of time.</description>
      <topic href="guide/components/en/tSalesforceGetUpdated.html" label="tSalesforceGetUpdated Component Documentation"/>
   </context>
   <context id="tSalesforceInput">
      <description>Allows to extract data from a Salesforce DB based on a query.</description>
      <topic href="guide/components/en/tSalesforceInput.html" label="tSalesforceInput Component Documentation"/>
   </context>
   <context id="tSalesforceOutput">
      <description>Allows to write data into a Salesforce DB.</description>
      <topic href="guide/components/en/tSalesforceOutput.html" label="tSalesforceOutput Component Documentation"/>
   </context>
   <context id="tSalesforceOutputBulk">
      <description>Prepares the file to be processed by tSalesforceBulkExec for executions in Salesforce.com.</description>
      <topic href="guide/components/en/tSalesforceOutputBulk.html" label="tSalesforceOutputBulk Component Documentation"/>
   </context>
   <context id="tSalesforceOutputBulkExec">
      <description>As a dedicated component, tSalesforceOutputBulkExec gains performance while carrying out the intended data operations into your Salesforce.com.</description>
      <topic href="guide/components/en/tSalesforceOutputBulkExec.html" label="tSalesforceOutputBulkExec Component Documentation"/>
   </context>
   <context id="tSAPBWInput">
      <description>This component executes an SQL query with a strictly defined order which must correspond to your schema definition. Then it passes on the field list to the next component via a Row &gt; Main connection.</description>
      <topic href="guide/components/en/tSAPBWInput.html" label="tSAPBWInput Component Documentation"/>
   </context>
   <context id="tSAPCommit">
      <description>Using a unique connection, this component commits a global transaction in one go instead of doing that on every row or every batch and thus provides gain in performance.</description>
      <topic href="guide/components/en/tSAPCommit.html" label="tSAPCommit Component Documentation"/>
   </context>
   <context id="tSAPConnection">
      <description>tSAPConnection allows to commit a whole Job data in one go to the SAP system as one transaction.</description>
      <topic href="guide/components/en/tSAPConnection.html" label="tSAPConnection Component Documentation"/>
   </context>
   <context id="tSAPIDocInput">
      <description>tSAPIDocInput allows you to extract IDoc data set that is used for asynchronous transactions between SAP systems or between a SAP system and another application..</description>
      <topic href="guide/components/en/tSAPIDocInput.html" label="tSAPIDocInput Component Documentation"/>
   </context>
   <context id="tSAPIDocOutput">
      <description>tSAPIDocOutput allows you to upload IDoc data set in XML fomat to an SAP system.</description>
      <topic href="guide/components/en/tSAPIDocOutput.html" label="tSAPIDocOutput Component Documentation"/>
   </context>
   <context id="tSAPInput">
      <description>tSAPInput allows to extract data from an SAP system at any level through calling RFC or BAPI functions.</description>
      <topic href="guide/components/en/tSAPInput.html" label="tSAPInput Component Documentation"/>
   </context>
   <context id="tSAPOutput">
      <description>Allows to write data into an SAP system.</description>
      <topic href="guide/components/en/tSAPOutput.html" label="tSAPOutput Component Documentation"/>
   </context>
   <context id="tSAPRollback">
      <description>tSAPRollback avoids to commit only a fragment of a transaction.</description>
      <topic href="guide/components/en/tSAPRollback.html" label="tSAPRollback Component Documentation"/>
   </context>
   <context id="tSugarCRMInput">
      <description>Allows you to extract data from a SugarCRM DB based on a query.</description>
      <topic href="guide/components/en/tSugarCRMInput.html" label="tSugarCRMInput Component Documentation"/>
   </context>
   <context id="tSugarCRMOutput">
      <description>Allows you to write data into a SugarCRM DB.</description>
      <topic href="guide/components/en/tSugarCRMOutput.html" label="tSugarCRMOutput Component Documentation"/>
   </context>
   <context id="tVtigerCRMInput">
      <description>Allows to extract data from a VtigerCRM DB.</description>
      <topic href="guide/components/en/tVtigerCRMInput.html" label="tVtigerCRMInput Component Documentation"/>
   </context>
   <context id="tVtigerCRMOutput">
      <description>Allows to write data from a VtigerCRM DB.</description>
      <topic href="guide/components/en/tVtigerCRMOutput.html" label="tVtigerCRMOutput Component Documentation"/>
   </context>
   <context id="tBarChart">
      <description>tBarChart generates a bar chart from the input data to ease technical analysis.</description>
      <topic href="guide/components/en/tBarChart.html" label="tBarChart Component Documentation"/>
   </context>
   <context id="tDB2SCD">
      <description>tDB2SCD addresses Slowly Changing Dimension needs, reading regularly a source of data and logging the changes into a dedicated SCD table</description>
      <topic href="guide/components/en/tDB2SCD.html" label="tDB2SCD Component Documentation"/>
   </context>
   <context id="tDB2SCDELT">
      <description>tDB2SCDELT addresses Slowly Changing Dimension needs through SQL queries (server-side processing mode), and logs the changes into a dedicated DB2 SCD table.</description>
      <topic href="guide/components/en/tDB2SCDELT.html" label="tDB2SCDELT Component Documentation"/>
   </context>
   <context id="tGreenplumSCD">
      <description>tGreenplumSCD addresses Slowly Changing Dimension needs, reading regularly a source of data and logging the changes into a dedicated SCD table</description>
      <topic href="guide/components/en/tGreenplumSCD.html" label="tGreenplumSCD Component Documentation"/>
   </context>
   <context id="tInformixSCD">
      <description>tInformixSCD addresses Slowly Changing Dimension transformation needs, by regularly reading a data source and listing the modifications in an SCD dedicated table.</description>
      <topic href="guide/components/en/tInformixSCD.html" label="tInformixSCD Component Documentation"/>
   </context>
   <context id="tIngresSCD">
      <description>tIngresSCD addresses Slowly Changing Dimension needs, reading regularly a source of data and logging the changes into a dedicated SCD table</description>
      <topic href="guide/components/en/tIngresSCD.html" label="tIngresSCD Component Documentation"/>
   </context>
   <context id="tJasperOutput">
      <description>This component allows you to use Jaspersoft's iReport to create a report in rich formats.</description>
      <topic href="guide/components/en/tJasperOutput.html" label="tJasperOutput Component Documentation"/>
   </context>
   <context id="tJasperOutputExec">
      <description>This component allows you to use Jaspersoft's iReport to create a report in rich formats. It offers a performance gain as it functions as a combination of an input component and a tJasperOutput component.</description>
      <topic href="guide/components/en/tJasperOutputExec.html" label="tJasperOutputExec Component Documentation"/>
   </context>
   <context id="tLineChart">
      <description>tLineChart generates a line chart from the input data to ease technical analysis.</description>
      <topic href="guide/components/en/tLineChart.html" label="tLineChart Component Documentation"/>
   </context>
   <context id="tMondrianInput">
      <description>tMondrianInput executes a multi-dimensional expression (MDX) query corresponding to the dataset structure and schema definition. Then it passes on the multidimensional dataset obtained to the next component via a Main row link.</description>
      <topic href="guide/components/en/tMondrianInput.html" label="tMondrianInput Component Documentation"/>
   </context>
   <context id="tMSSqlSCD">
      <description>tMSqlSCD addresses Slowly Changing Dimension needs, reading regularly a source of data and logging the changes into a dedicated SCD table</description>
      <topic href="guide/components/en/tMSSqlSCD.html" label="tMSSqlSCD Component Documentation"/>
   </context>
   <context id="tMysqlSCD">
      <description>tMysqlSCD addresses Slowly Changing Dimension needs, reading regularly a source of data and logging the changes into a dedicated SCD table</description>
      <topic href="guide/components/en/tMysqlSCD.html" label="tMysqlSCD Component Documentation"/>
   </context>
   <context id="tMysqlSCDELT">
      <description>tMysqlSCDELT addresses Slowly Changing Dimension needs through SQL queries (server-side processing mode), and logs the changes into a dedicated MySQL SCD table.</description>
      <topic href="guide/components/en/tMysqlSCDELT.html" label="tMysqlSCDELT Component Documentation"/>
   </context>
   <context id="tOracleSCD">
      <description>tOracleSCD addresses Slowly Changing Dimension needs, reading regularly a source of data and logging the changes into a dedicated SCD table</description>
      <topic href="guide/components/en/tOracleSCD.html" label="tOracleSCD Component Documentation"/>
   </context>
   <context id="tOracleSCDELT">
      <description>tOracleSCDELT addresses Slowly Changing Dimension needs through SQL queries (server-side processing mode), and logs the changes into a dedicated DB2 SCD table.</description>
      <topic href="guide/components/en/tOracleSCDELT.html" label="tOracleSCDELT Component Documentation"/>
   </context>
   <context id="tPaloCheckElements">
      <description>This component can be used along with tPaloOutputMulti. It checks if the elements from the input stream exist in the given cube, before writing them. It can also define a default value to be used for nonexistent elements.</description>
      <topic href="guide/components/en/tPaloCheckElements.html" label="tPaloCheckElements Component Documentation"/>
   </context>
   <context id="tPaloConnection">
      <description>This component allows other components involved in a process to share its connection to a Palo server for the duration of the process.</description>
      <topic href="guide/components/en/tPaloConnection.html" label="tPaloConnection Component Documentation"/>
   </context>
   <context id="tPaloCube">
      <description>This component performs operations on a given Palo cube.</description>
      <topic href="guide/components/en/tPaloCube.html" label="tPaloCube Component Documentation"/>
   </context>
   <context id="tPaloCubeList">
      <description>This component lists cube names, cube types, number of assigned dimensions, the number of filled cells from the given database.int</description>
      <topic href="guide/components/en/tPaloCubeList.html" label="tPaloCubeList Component Documentation"/>
   </context>
   <context id="tPaloDatabase">
      <description>This component manages the databases inside a Palo server.</description>
      <topic href="guide/components/en/tPaloDatabase.html" label="tPaloDatabase Component Documentation"/>
   </context>
   <context id="tPaloDatabaseList">
      <description>This component lists database names, database types, number of cubes, number of dimensions, database status and database id from a given Palo server.int</description>
      <topic href="guide/components/en/tPaloDatabaseList.html" label="tPaloDatabaseList Component Documentation"/>
   </context>
   <context id="tPaloDimension">
      <description>This component manages Palo dimensions, even elements inside a database</description>
      <topic href="guide/components/en/tPaloDimension.html" label="tPaloDimension Component Documentation"/>
   </context>
   <context id="tPaloDimensionList">
      <description>This component lists dimension names, dimension types, number of dimension elements, maximum dimension indent, maximum dimension depth, maximum dimension level, dimension id from a given Palo server.string</description>
      <topic href="guide/components/en/tPaloDimensionList.html" label="tPaloDimensionList Component Documentation"/>
   </context>
   <context id="tPaloInputMulti">
      <description>This component retrieves the stored or calculated values in combination with the element records out of a cube.</description>
      <topic href="guide/components/en/tPaloInputMulti.html" label="tPaloInputMulti Component Documentation"/>
   </context>
   <context id="tPaloOutput">
      <description>This component takes the input stream and writes it to a given Palo cube.</description>
      <topic href="guide/components/en/tPaloOutput.html" label="tPaloOutput Component Documentation"/>
   </context>
   <context id="tPaloOutputMulti">
      <description>This component takes the input stream and writes it to a given Palo cube.</description>
      <topic href="guide/components/en/tPaloOutputMulti.html" label="tPaloOutputMulti Component Documentation"/>
   </context>
   <context id="tPaloRule">
      <description>This component allows you to manage rules in a given cube.</description>
      <topic href="guide/components/en/tPaloRule.html" label="tPaloRule Component Documentation"/>
   </context>
   <context id="tPaloRuleList">
      <description>This component lists all rules, formulas, comments, activation status, external IDs from a given cube.string</description>
      <topic href="guide/components/en/tPaloRuleList.html" label="tPaloRuleList Component Documentation"/>
   </context>
   <context id="tParAccelSCD">
      <description>tParAccelSCD addresses Slowly Changing Dimension needs, reading regularly a source of data and logging the changes into a dedicated SCD table</description>
      <topic href="guide/components/en/tParAccelSCD.html" label="tParAccelSCD Component Documentation"/>
   </context>
   <context id="tPostgresPlusSCD">
      <description>tPostgresPlusSCD addresses Slowly Changing Dimension needs, reading regularly a source of data and logging the changes into a dedicated SCD table</description>
      <topic href="guide/components/en/tPostgresPlusSCD.html" label="tPostgresPlusSCD Component Documentation"/>
   </context>
   <context id="tPostgresPlusSCDELT">
      <description>tPostgresPlusSCDELT addresses Slowly Changing Dimension needs through SQL queries (server-side processing mode), and logs the changes into a dedicated PostgresPlus SCD table.</description>
      <topic href="guide/components/en/tPostgresPlusSCDELT.html" label="tPostgresPlusSCDELT Component Documentation"/>
   </context>
   <context id="tPostgresqlSCD">
      <description>tPostgresqlSCD addresses Slowly Changing Dimension needs, reading regularly a source of data and logging the changes into a dedicated SCD table</description>
      <topic href="guide/components/en/tPostgresqlSCD.html" label="tPostgresqlSCD Component Documentation"/>
   </context>
   <context id="tPostgresqlSCDELT">
      <description>tPostgresqlSCDELT addresses Slowly Changing Dimension needs through SQL queries (server-side processing mode), and logs the changes into a dedicated DB2 SCD table.</description>
      <topic href="guide/components/en/tPostgresqlSCDELT.html" label="tPostgresqlSCDELT Component Documentation"/>
   </context>
   <context id="tSPSSInput">
      <description>tSPSSInput addresses SPSS .sav data to write it for example in another file.</description>
      <topic href="guide/components/en/tSPSSInput.html" label="tSPSSInput Component Documentation"/>
   </context>
   <context id="tSPSSOutput">
      <description>tSPSSOutput writes or appends data to an SPSS .sav file. It creates SPSS files on the fly and overwrites existing ones.</description>
      <topic href="guide/components/en/tSPSSOutput.html" label="tSPSSOutput Component Documentation"/>
   </context>
   <context id="tSPSSProperties">
      <description>tSPSSProperties allows you to obtain information about the main properties of a defined SPSS .sav file.</description>
      <topic href="guide/components/en/tSPSSProperties.html" label="tSPSSProperties Component Documentation"/>
   </context>
   <context id="tSPSSStructure">
      <description>tSPSSStructure addresses variables inside .sav files. You can use this component in combination with tFileList to gather information about existing *.sav files to further analyze or check the findings.</description>
      <topic href="guide/components/en/tSPSSStructure.html" label="tSPSSStructure Component Documentation"/>
   </context>
   <context id="tSybaseSCD">
      <description>tSybaseSCD addresses Slowly Changing Dimension needs, reading regularly a source of data and logging the changes into a dedicated SCD table</description>
      <topic href="guide/components/en/tSybaseSCD.html" label="tSybaseSCD Component Documentation"/>
   </context>
   <context id="tSybaseSCDELT">
      <description>tSybaselSCDELT addresses Slowly Changing Dimension needs through SQL queries (server-side processing mode), and logs the changes into a dedicated Sybase SCD table.</description>
      <topic href="guide/components/en/tSybaseSCDELT.html" label="tSybaseSCDELT Component Documentation"/>
   </context>
   <context id="tAmazonMysqlClose">
      <description>Close a transaction.</description>
      <topic href="guide/components/en/tAmazonMysqlClose.html" label="tAmazonMysqlClose Component Documentation"/>
   </context>
   <context id="tAmazonMysqlCommit">
      <description>Using a unique connection, this component commits in one go a global transaction instead of doing that on every row or every batch and thus provides gain in performance.</description>
      <topic href="guide/components/en/tAmazonMysqlCommit.html" label="tAmazonMysqlCommit Component Documentation"/>
   </context>
   <context id="tAmazonMysqlConnection">
      <description>This component allows you to commit all of the Job data to an output database in just a single transaction, once the data has been validated.</description>
      <topic href="guide/components/en/tAmazonMysqlConnection.html" label="tAmazonMysqlConnection Component Documentation"/>
   </context>
   <context id="tAmazonMysqlInput">
      <description>tAmazonMysqlInput executes a DB query with a strictly defined order which must correspond to the schema definition. Then it passes on the field list to the next component via a Main row link.</description>
      <topic href="guide/components/en/tAmazonMysqlInput.html" label="tAmazonMysqlInput Component Documentation"/>
   </context>
   <context id="tAmazonMysqlOutput">
      <description>tAmazonMysqlOutput executes the action defined on the table and/or on the data contained in the table, based on the flow incoming from the preceding component in the Job.</description>
      <topic href="guide/components/en/tAmazonMysqlOutput.html" label="tAmazonMysqlOutput Component Documentation"/>
   </context>
   <context id="tAmazonMysqlRollback">
      <description>Avoids to commit part of a transaction involuntarily.</description>
      <topic href="guide/components/en/tAmazonMysqlRollback.html" label="tAmazonMysqlRollback Component Documentation"/>
   </context>
   <context id="tAmazonMysqlRow">
      <description>Depending on the nature of the query and the database, tAmazonMysqlRow acts on the actual DB structure or on the data (although without handling data). The SQLBuilder tool helps you write easily your SQL statements.</description>
      <topic href="guide/components/en/tAmazonMysqlRow.html" label="tAmazonMysqlRow Component Documentation"/>
   </context>
   <context id="tAmazonOracleClose">
      <description>Close a transaction.</description>
      <topic href="guide/components/en/tAmazonOracleClose.html" label="tAmazonOracleClose Component Documentation"/>
   </context>
   <context id="tAmazonOracleCommit">
      <description>Using a unique connection, this component commits in one go a global transaction instead of doing that on every row or every batch and thus provides gain in performance.</description>
      <topic href="guide/components/en/tAmazonOracleCommit.html" label="tAmazonOracleCommit Component Documentation"/>
   </context>
   <context id="tAmazonOracleConnection">
      <description>This component allows you to commit all of the Job data to an output database in just a single transaction, once the data has been validated.</description>
      <topic href="guide/components/en/tAmazonOracleConnection.html" label="tAmazonOracleConnection Component Documentation"/>
   </context>
   <context id="tAmazonOracleInput">
      <description>tAmazonOracleInput executes a DB query with a strictly defined order which must correspond to the schema definition. Then it passes on the field list to the next component via a Main row link.</description>
      <topic href="guide/components/en/tAmazonOracleInput.html" label="tAmazonOracleInput Component Documentation"/>
   </context>
   <context id="tAmazonOracleOutput">
      <description>tAmazonOracleOutput executes the action defined on the table and/or on the data contained in the table, based on the flow incoming from the preceding component in the Job.</description>
      <topic href="guide/components/en/tAmazonOracleOutput.html" label="tAmazonOracleOutput Component Documentation"/>
   </context>
   <context id="tAmazonOracleRollback">
      <description>Avoids to commit part of a transaction involuntarily.</description>
      <topic href="guide/components/en/tAmazonOracleRollback.html" label="tAmazonOracleRollback Component Documentation"/>
   </context>
   <context id="tAmazonOracleRow">
      <description>Depending on the nature of the query and the database, tAmazonOracleRow acts on the actual DB structure or on the data (although without handling data). The SQLBuilder tool helps you write easily your SQL statements.</description>
      <topic href="guide/components/en/tAmazonOracleRow.html" label="tAmazonOracleRow Component Documentation"/>
   </context>
   <context id="tGroovy">
      <description>tGroovy broadens the functionality if the Talend Job, using the Groovy language which is a simplified Java syntax.</description>
      <topic href="guide/components/en/tGroovy.html" label="tGroovy Component Documentation"/>
   </context>
   <context id="tGroovyFile">
      <description>tGroovyFile broadens the functionaility of Talend Jobs using the Groovy language which is a simplified Java syntax.</description>
      <topic href="guide/components/en/tGroovyFile.html" label="tGroovyFile Component Documentation"/>
   </context>
   <context id="tJava">
      <description>tJava makes it possible to extend the functionalities of a Talend Job through using Java commands.</description>
      <topic href="guide/components/en/tJava.html" label="tJava Component Documentation"/>
   </context>
   <context id="tJavaFlex">
      <description>tJava makes it possible to extend the functionalities of a Talend Job through using Java commands.</description>
      <topic href="guide/components/en/tJavaFlex.html" label="tJavaFlex Component Documentation"/>
   </context>
   <context id="tJavaRow">
      <description>tJavaRow allows you to broaden the functionality of Talend Jobs, using the Java language.</description>
      <topic href="guide/components/en/tJavaRow.html" label="tJavaRow Component Documentation"/>
   </context>
   <context id="tLibraryLoad">
      <description>tLibraryLoad allows you to load useable Java libraries in a Job.</description>
      <topic href="guide/components/en/tLibraryLoad.html" label="tLibraryLoad Component Documentation"/>
   </context>
   <context id="tSetDynamicSchema">
      <description>tSetDynamicSchema is used to create a dynamic schema to allow components that are unable to guess the structure of the data being handled based on field separators, such as tFileInputPositional and tFileOutputPositional, to retrieve data from unknown columns.</description>
      <topic href="guide/components/en/tSetDynamicSchema.html" label="tSetDynamicSchema Component Documentation"/>
   </context>
   <context id="tSetGlobalVar">
      <description>tSetGlobalVar facilitates the process of defining global variables.</description>
      <topic href="guide/components/en/tSetGlobalVar.html" label="tSetGlobalVar Component Documentation"/>
   </context>
   <context id="tAddCRCRow">
      <description>Providing a unique ID helps improving the quality of processed data.</description>
      <topic href="guide/components/en/tAddCRCRow.html" label="tAddCRCRow Component Documentation"/>
   </context>
   <context id="tBlockedFuzzyJoin">
      <description>Helps ensuring the data quality of any source data against a reference data source.</description>
      <topic href="guide/components/en/tBlockedFuzzyJoin.html" label="tBlockedFuzzyJoin Component Documentation"/>
   </context>
   <context id="tFindRegexlibExpressions">
      <description>tFindRegexlibExpressions returns a data set holding information about all of the regular expressions that match the request sent to the web server. Then you can keep this information</description>
      <topic href="guide/components/en/tFindRegexlibExpressions.html" label="tFindRegexlibExpressions Component Documentation"/>
   </context>
   <context id="tFirstnameMatch">
      <description>Helps ensuring the data quality of first names against a reference index in order to standardize data.</description>
      <topic href="guide/components/en/tFirstnameMatch.html" label="tFirstnameMatch Component Documentation"/>
   </context>
   <context id="tFuzzyJoin">
      <description>Helps ensuring the data quality of any source data against a reference data source.</description>
      <topic href="guide/components/en/tFuzzyJoin.html" label="tFuzzyJoin Component Documentation"/>
   </context>
   <context id="tFuzzyMatch">
      <description>Helps ensuring the data quality of any source data against a reference data source.</description>
      <topic href="guide/components/en/tFuzzyMatch.html" label="tFuzzyMatch Component Documentation"/>
   </context>
   <context id="tFuzzyUniqRow">
      <description>Helps ensuring the data quality of any source data.</description>
      <topic href="guide/components/en/tFuzzyUniqRow.html" label="tFuzzyUniqRow Component Documentation"/>
   </context>
   <context id="tGenKey">
      <description>tGenKey generates a functional key from the input columns, by applying different types of algorithms on each column and grouping the computed results in one key. It outputs this key together with the input columns.</description>
      <topic href="guide/components/en/tGenKey.html" label="tGenKey Component Documentation"/>
   </context>
   <context id="tGenKeyHadoop">
      <description>This component generates a functional key from the input columns, by applying different types of algorithms on each column and grouping the computed results in one key. It outputs this key together with the input columns.</description>
      <topic href="guide/components/en/tGenKeyHadoop.html" label="tGenKeyHadoop Component Documentation"/>
   </context>
   <context id="tGoogleAddressRow">
      <description>tGoogleAddressRow allows you to converts human-readable addresses into geographic coordinates and other geographic information</description>
      <topic href="guide/components/en/tGoogleAddressRow.html" label="tGoogleAddressRow Component Documentation"/>
   </context>
   <context id="tGoogleGeocoder">
      <description>tGoogleGeocoder allows you to converts human-readable addresses into geographic coordinates.</description>
      <topic href="guide/components/en/tGoogleGeocoder.html" label="tGoogleGeocoder Component Documentation"/>
   </context>
   <context id="tGoogleMapLookup">
      <description>tGoogleMapLoopup allows you to obtain detailed gepgraphic information using geographic coordinates and address information.</description>
      <topic href="guide/components/en/tGoogleMapLookup.html" label="tGoogleMapLookup Component Documentation"/>
   </context>
   <context id="tIntervalMatch">
      <description>Helps to return a value based on a Join relation.</description>
      <topic href="guide/components/en/tIntervalMatch.html" label="tIntervalMatch Component Documentation"/>
   </context>
   <context id="tLastRegexlibExpressions">
      <description>tFindRegexlibExpressionsreturns a dataset holding information about the N most recent regular expressions added to the library and that match the query at .</description>
      <topic href="guide/components/en/tLastRegexlibExpressions.html" label="tLastRegexlibExpressions Component Documentation"/>
   </context>
   <context id="tLaunchDQReports">
      <description>tLaunchDQReports can communicate with Talend Enterprise Data Quality in order to launch an analysis and save the results of the analysis in a database. Using this component, you can launch the generation of all types of reports: pdf, XML, or HTML.</description>
      <topic href="guide/components/en/tLaunchDQReports.html" label="tLaunchDQReports Component Documentation"/>
   </context>
   <context id="tMatchGroup">
      <description>This component helps ensuring the data quality of any source data.</description>
      <topic href="guide/components/en/tMatchGroup.html" label="tMatchGroup Component Documentation"/>
   </context>
   <context id="tMatchGroupHadoop">
      <description>This component helps ensure the quality of any source data of large volume.</description>
      <topic href="guide/components/en/tMatchGroupHadoop.html" label="tMatchGroupHadoop Component Documentation"/>
   </context>
   <context id="tMelissaDataAddress">
      <description>tMelissaDataAddress verifies that an address is a properly formatted address and corrects any formatting or spelling errors in each row.</description>
      <topic href="guide/components/en/tMelissaDataAddress.html" label="tMelissaDataAddress Component Documentation"/>
   </context>
   <context id="tMultiPatternCheck">
      <description>tMultiPatternCheck can give two output flows: Matching Data and Non-Matching Data. The first collects all data that match a given pattern, and the second collects all data that do not match a given pattern. You can then implement any required corrections.</description>
      <topic href="guide/components/en/tMultiPatternCheck.html" label="tMultiPatternCheck Component Documentation"/>
   </context>
   <context id="tMySQLInvalidRows">
      <description>tMySQLInvalidRows allows you to extract DB rows that do not match a given data quality pattern or rule. You can then implement any required correction.</description>
      <topic href="guide/components/en/tMySQLInvalidRows.html" label="tMySQLInvalidRows Component Documentation"/>
   </context>
   <context id="tMySQLValidRows">
      <description>tMySQLValidRows allows you to extract DB rows that match a given data quality pattern.</description>
      <topic href="guide/components/en/tMySQLValidRows.html" label="tMySQLValidRows Component Documentation"/>
   </context>
   <context id="tOracleInvalidRows">
      <description>tOracleInvalidRows allows you to extract DB rows that do not match a given data quality pattern, you can then implement any required correction.</description>
      <topic href="guide/components/en/tOracleInvalidRows.html" label="tOracleInvalidRows Component Documentation"/>
   </context>
   <context id="tOracleValidRows">
      <description>tOracleValidRows allows you to extract DB rows that match a given data quality pattern.</description>
      <topic href="guide/components/en/tOracleValidRows.html" label="tOracleValidRows Component Documentation"/>
   </context>
   <context id="tPatternCheck">
      <description>tPatternCheck can give two output flows: Matching Data and Non-Matching Data. The first collects all data that match a given pattern, and the second collects all data that do not match a given pattern. You can then implement any required corrections.</description>
      <topic href="guide/components/en/tPatternCheck.html" label="tPatternCheck Component Documentation"/>
   </context>
   <context id="tPatternExtract">
      <description>tPatternExtract allows to output all data that match a given pattern. You can then implement any required operation on the extracted data.</description>
      <topic href="guide/components/en/tPatternExtract.html" label="tPatternExtract Component Documentation"/>
   </context>
   <context id="tPostgresqlInvalidRows">
      <description>tPostgresqlInvalidRows allows you to extract DB rows that do not match a given data quality pattern, you can then implement any required correction.</description>
      <topic href="guide/components/en/tPostgresqlInvalidRows.html" label="tPostgresqlInvalidRows Component Documentation"/>
   </context>
   <context id="tPostgresqlValidRows">
      <description>tPostgresqlValidRows allows you to extract DB rows that match a given data quality pattern.</description>
      <topic href="guide/components/en/tPostgresqlValidRows.html" label="tPostgresqlValidRows Component Documentation"/>
   </context>
   <context id="tQASAddressIncomplete">
      <description>tQASAddressIncomplete can give two output flows: Incomplete and Reject. Incomplete collects all addresses that match to a partially-complete address in the QuickAddress data. Reject collects all addresses that match to several possible results or do not match to deliverable results in the QuickAddress data.</description>
      <topic href="guide/components/en/tQASAddressIncomplete.html" label="tQASAddressIncomplete Component Documentation"/>
   </context>
   <context id="tQASAddressRow">
      <description>tQASAddressRow corrects any formatting or spelling errors and gives the verification status for each row since the address may not always have enough information to be matched to a single deliverable result in the QuickAddress data.</description>
      <topic href="guide/components/en/tQASAddressRow.html" label="tQASAddressRow Component Documentation"/>
   </context>
   <context id="tQASAddressUnknown">
      <description>tQASAddressUnknown can give one output flow: Unknown that collects all addresses that do not match to deliverable results in the QuickAddress data.</description>
      <topic href="guide/components/en/tQASAddressUnknown.html" label="tQASAddressUnknown Component Documentation"/>
   </context>
   <context id="tQASAddressVerified">
      <description>tQASAddressVerified can give three output flows: Verified, Interaction required, and Reject. Verified collects all addresses matched to a single deliverable address in the QuickAddress data. Interaction required collects all addresses that matched to a single deliverable address in the QuickAddress data, however user interaction is still recommended to confirm that it is the correct address. Reject collects all addresses that do not match to deliverable results in the QuickAddress data.</description>
      <topic href="guide/components/en/tQASAddressVerified.html" label="tQASAddressVerified Component Documentation"/>
   </context>
   <context id="tQASBatchAddressRow">
      <description>tQASBatchAddressRow corrects any formatting or spelling errors, adds missing data and gives the verification status for each row since the address may not always have enough information to be matched to a single deliverable result in the DLL data.</description>
      <topic href="guide/components/en/tQASBatchAddressRow.html" label="tQASBatchAddressRow Component Documentation"/>
   </context>
   <context id="tRecordMatching">
      <description>Helps ensuring the data quality of any source data against a reference data source.</description>
      <topic href="guide/components/en/tRecordMatching.html" label="tRecordMatching Component Documentation"/>
   </context>
   <context id="tReplaceList">
      <description>Helps to cleanse all files before further processing.</description>
      <topic href="guide/components/en/tReplaceList.html" label="tReplaceList Component Documentation"/>
   </context>
   <context id="tRuleSurvivorship">
      <description>tRuleSurvivorship creates the single representation of an entity according to business rules. It helps to create a master copy of data for MDM.</description>
      <topic href="guide/components/en/tRuleSurvivorship.html" label="tRuleSurvivorship Component Documentation"/>
   </context>
   <context id="tSchemaComplianceCheck">
      <description>Helps to ensure the data quality of any source data against a reference data source.</description>
      <topic href="guide/components/en/tSchemaComplianceCheck.html" label="tSchemaComplianceCheck Component Documentation"/>
   </context>
   <context id="tStandardizePhoneNumber">
      <description>This component standardizes phone numbers according to given formats.</description>
      <topic href="guide/components/en/tStandardizePhoneNumber.html" label="tStandardizePhoneNumber Component Documentation"/>
   </context>
   <context id="tStandardizeRow">
      <description>tStandardizeRow normalizes the incoming data in a separate XML data flow. This allows you to separate, even standardize if need be, the rule-compliant data from the non-compliant data.“Format”</description>
      <topic href="guide/components/en/tStandardizeRow.html" label="tStandardizeRow Component Documentation"/>
   </context>
   <context id="tStem">
      <description>tStem enables to standardize data in columns before matching this data.</description>
      <topic href="guide/components/en/tStem.html" label="tStem Component Documentation"/>
   </context>
   <context id="tSurviveFields">
      <description>tSurviveFields centralizes data from various and heterogeneous sources. It helps to create a master copy of data for MDM.</description>
      <topic href="guide/components/en/tSurviveFields.html" label="tSurviveFields Component Documentation"/>
   </context>
   <context id="tSynonymOutput">
      <description>tSynonymOutput creates synonym indexes that some components like tStandardizeRow or tSynonymSearch can refer to when processing data.</description>
      <topic href="guide/components/en/tSynonymOutput.html" label="tSynonymOutput Component Documentation"/>
   </context>
   <context id="tSynonymSearch">
      <description>tSynonymSearch searches a given index for the reference entries matching the data you input.</description>
      <topic href="guide/components/en/tSynonymSearch.html" label="tSynonymSearch Component Documentation"/>
   </context>
   <context id="tThresholdViolationAlert">
      <description>tThresholdViolationAlert can communicate with Talend Enterprise Data Quality in order to check on thresholds put on the indicators used in analyses created in Talend Enterprise Data Quality. You can then use it with other components, for example tSendMail, to alert to the violation of thresholds.</description>
      <topic href="guide/components/en/tThresholdViolationAlert.html" label="tThresholdViolationAlert Component Documentation"/>
   </context>
   <context id="tUniqRow">
      <description>Ensures data quality of input or output flow in a Job.</description>
      <topic href="guide/components/en/tUniqRow.html" label="tUniqRow Component Documentation"/>
   </context>
   <context id="tUniservBTGeneric">
      <description>tUniservBTGeneric sends the data to the DQ Batch Suite and starts the specified DQ Batch Suite job. When the job execution is finished, the results are returned to the Data Quality Service Hub Studio for further processing.</description>
      <topic href="guide/components/en/tUniservBTGeneric.html" label="tUniservBTGeneric Component Documentation"/>
   </context>
   <context id="tUniservRTConvertName">
      <description>tUniservRTConvertName provides the basis for a uniform structuring and population of person and company names in the database as well as the personalized salutation.</description>
      <topic href="guide/components/en/tUniservRTConvertName.html" label="tUniservRTConvertName Component Documentation"/>
   </context>
   <context id="tUniservRTMailBulk">
      <description>tUniservRTMailBulk prepares the index pool for duplicate search.</description>
      <topic href="guide/components/en/tUniservRTMailBulk.html" label="tUniservRTMailBulk Component Documentation"/>
   </context>
   <context id="tUniservRTMailOutput">
      <description>tUniservRTMailOutput keeps the index pool synchronized.</description>
      <topic href="guide/components/en/tUniservRTMailOutput.html" label="tUniservRTMailOutput Component Documentation"/>
   </context>
   <context id="tUniservRTMailSearch">
      <description>tUniservRTMailSearch searches for duplicate values and adds additional data to each record.</description>
      <topic href="guide/components/en/tUniservRTMailSearch.html" label="tUniservRTMailSearch Component Documentation"/>
   </context>
   <context id="tUniservRTPost">
      <description>tUniservRTPost helps to improve the addresses quality, which is extremely important for CRM and e-business as it is directly related to postage and advertising costs.</description>
      <topic href="guide/components/en/tUniservRTPost.html" label="tUniservRTPost Component Documentation"/>
   </context>
   <context id="tAccessBulkExec">
      <description>As a dedicated component, tAccessBulkExec offers gains in performance when carrying out Insert operations in an Access database.</description>
      <topic href="guide/components/en/tAccessBulkExec.html" label="tAccessBulkExec Component Documentation"/>
   </context>
   <context id="tAccessCommit">
      <description>Using a unique connection, this component commits in one go a global transaction instead of doing that on every row or every batch and thus provides gain in performance.</description>
      <topic href="guide/components/en/tAccessCommit.html" label="tAccessCommit Component Documentation"/>
   </context>
   <context id="tAccessConnection">
      <description>This component allows you to commit all of the Job data to an output database in just a single transaction, once the data has been validated.</description>
      <topic href="guide/components/en/tAccessConnection.html" label="tAccessConnection Component Documentation"/>
   </context>
   <context id="tAccessInput">
      <description>tAccessInput executes a DB query with a strictly defined statement which must correspond to the schema definition. Then it passes on the field list to the next component via a Row &gt; Main connection.</description>
      <topic href="guide/components/en/tAccessInput.html" label="tAccessInput Component Documentation"/>
   </context>
   <context id="tAccessOutput">
      <description>tAccessOutput executes the action defined on the table and/or on the data contained in the table, based on the flow incoming from the preceding component in the Job.</description>
      <topic href="guide/components/en/tAccessOutput.html" label="tAccessOutput Component Documentation"/>
   </context>
   <context id="tAccessOutputBulk">
      <description>tAccessOutputBulk prepares the file which contains the data used to feed the Access database.</description>
      <topic href="guide/components/en/tAccessOutputBulk.html" label="tAccessOutputBulk Component Documentation"/>
   </context>
   <context id="tAccessOutputBulkExec">
      <description>As a dedicated component, it improves performance during Insert operations in an Access database.</description>
      <topic href="guide/components/en/tAccessOutputBulkExec.html" label="tAccessOutputBulkExec Component Documentation"/>
   </context>
   <context id="tAccessRollback">
      <description>Avoids involuntary commitment of part of a transaction.</description>
      <topic href="guide/components/en/tAccessRollback.html" label="tAccessRollback Component Documentation"/>
   </context>
   <context id="tAccessRow">
      <description>Depending on the nature of the query and the database, tAccessRow acts on the actual DB structure or on the data (although without handling data). The SQLBuilder tool helps you write easily your SQL statements.</description>
      <topic href="guide/components/en/tAccessRow.html" label="tAccessRow Component Documentation"/>
   </context>
   <context id="tAS400CDC">
      <description>tAS400CDC addresses data extraction and transportation needs. tAS400CDC only extracts the changes carried out on the source operational data and makes them available to the target system(s) using database CDC views.</description>
      <topic href="guide/components/en/tAS400CDC.html" label="tAS400CDC Component Documentation"/>
   </context>
   <context id="tAS400Close">
      <description>Close a transaction.</description>
      <topic href="guide/components/en/tAS400Close.html" label="tAS400Close Component Documentation"/>
   </context>
   <context id="tAS400Commit">
      <description>Using a unique connection, this component commits in one go a global transaction instead of doing that on every row or every batch and thus provides gain in performance.</description>
      <topic href="guide/components/en/tAS400Commit.html" label="tAS400Commit Component Documentation"/>
   </context>
   <context id="tAS400Connection">
      <description>This component allows you to commit all of the Job data to an output database in just a single transaction, once the data has been validated.</description>
      <topic href="guide/components/en/tAS400Connection.html" label="tAS400Connection Component Documentation"/>
   </context>
   <context id="tAS400Input">
      <description>tAS400SInput executes a DB query with a strictly defined statement which must correspond to the schema definition. Then it passes on the field list to the next component via a Main row link.</description>
      <topic href="guide/components/en/tAS400Input.html" label="tAS400Input Component Documentation"/>
   </context>
   <context id="tAS400LastInsertId">
      <description>tAS400LastInsertId obtains the primary key value of the record that was last inserted in an AS400 table by a user.</description>
      <topic href="guide/components/en/tAS400LastInsertId.html" label="tAS400LastInsertId Component Documentation"/>
   </context>
   <context id="tAS400Output">
      <description>tAS400Output executes the action defined on the table and/or on the data contained in the table, based on the flow incoming from the preceding component in the Job.</description>
      <topic href="guide/components/en/tAS400Output.html" label="tAS400Output Component Documentation"/>
   </context>
   <context id="tAS400Rollback">
      <description>Avoids involuntary commitment of part of a transaction.</description>
      <topic href="guide/components/en/tAS400Rollback.html" label="tAS400Rollback Component Documentation"/>
   </context>
   <context id="tAS400Row">
      <description>Depending on the nature of the query and the database, tAS400Row acts on the actual DB structure or on the data (although without handling data). The SQLBuilder tool helps you write easily your SQL statements.</description>
      <topic href="guide/components/en/tAS400Row.html" label="tAS400Row Component Documentation"/>
   </context>
   <context id="tDB2BulkExec">
      <description>As a dedicated component, tDB2BulkExec allows gains in performance during Insert operations to a DB2 database.</description>
      <topic href="guide/components/en/tDB2BulkExec.html" label="tDB2BulkExec Component Documentation"/>
   </context>
   <context id="tDB2CDC">
      <description>tDB2CDC addresses data extraction and transportation needs. tDB2CDC only extracts the changes done to the source operational data and makes them available to the target system(s) using database CDC views.</description>
      <topic href="guide/components/en/tDB2CDC.html" label="tDB2CDC Component Documentation"/>
   </context>
   <context id="tDB2Close">
      <description>Close a transaction.</description>
      <topic href="guide/components/en/tDB2Close.html" label="tDB2Close Component Documentation"/>
   </context>
   <context id="tDB2Commit">
      <description>Using a unique connection, this component commits in one go a global transaction instead of doing that on every row or every batch and thus provides gain in performance.</description>
      <topic href="guide/components/en/tDB2Commit.html" label="tDB2Commit Component Documentation"/>
   </context>
   <context id="tDB2Connection">
      <description>This component allows you to commit all of the Job data to an output database in just a single transaction, once the data has been validated.</description>
      <topic href="guide/components/en/tDB2Connection.html" label="tDB2Connection Component Documentation"/>
   </context>
   <context id="tDB2Input">
      <description>tDB2Input executes a DB query with a strictly defined order which must correspond to the schema definition. Then it passes on the field list to the next component via a Main row link.</description>
      <topic href="guide/components/en/tDB2Input.html" label="tDB2Input Component Documentation"/>
   </context>
   <context id="tDB2Output">
      <description>tDB2Output executes the action defined on the table and/or on the data contained in the table, based on the flow incoming from the preceding component in the Job.</description>
      <topic href="guide/components/en/tDB2Output.html" label="tDB2Output Component Documentation"/>
   </context>
   <context id="tDB2Rollback">
      <description>Avoids to commit part of a transaction involuntarily.</description>
      <topic href="guide/components/en/tDB2Rollback.html" label="tDB2Rollback Component Documentation"/>
   </context>
   <context id="tDB2Row">
      <description>Depending on the nature of the query and the database, tDB2Row acts on the actual DB structure or on the data (although without handling data). The SQLBuilder tool helps you write easily your SQL statements.</description>
      <topic href="guide/components/en/tDB2Row.html" label="tDB2Row Component Documentation"/>
   </context>
   <context id="tDB2SP">
      <description>tDB2SP offers a convenient way to centralize multiple or complex queries in a database and call them easily.</description>
      <topic href="guide/components/en/tDB2SP.html" label="tDB2SP Component Documentation"/>
   </context>
   <context id="tInformixBulkExec">
      <description>tInformixBulkExec is a dedicated component which improves performance during Insert operations in Informix databases.</description>
      <topic href="guide/components/en/tInformixBulkExec.html" label="tInformixBulkExec Component Documentation"/>
   </context>
   <context id="tInformixClose">
      <description>This component closes connection to Informix databases.</description>
      <topic href="guide/components/en/tInformixClose.html" label="tInformixClose Component Documentation"/>
   </context>
   <context id="tInformixCommit">
      <description>Using a single connection, make a global commit just once instead of commiting every row or batch of rows separately. This improves performance.</description>
      <topic href="guide/components/en/tInformixCommit.html" label="tInformixCommit Component Documentation"/>
   </context>
   <context id="tInformixConnection">
      <description>This component allows you to commit all of the Job data to an output database in just a single transaction, once the data has been validated.</description>
      <topic href="guide/components/en/tInformixConnection.html" label="tInformixConnection Component Documentation"/>
   </context>
   <context id="tInformixInput">
      <description>tInformixInput executes a DB query with a strictly defined order which must correspond to the schema definition. Then it passes on the field list to the next component via a Main row link.</description>
      <topic href="guide/components/en/tInformixInput.html" label="tInformixInput Component Documentation"/>
   </context>
   <context id="tInformixOutput">
      <description>tInformixOutput executes the action defined on the table and/or on the data contained in the table, based on the flow incoming from the preceding component in the Job.</description>
      <topic href="guide/components/en/tInformixOutput.html" label="tInformixOutput Component Documentation"/>
   </context>
   <context id="tInformixOutputBulk">
      <description>Prepares the file to be used as a parmameter in the INSERT query used to feed Informix databases.</description>
      <topic href="guide/components/en/tInformixOutputBulk.html" label="tInformixOutputBulk Component Documentation"/>
   </context>
   <context id="tInformixOutputBulkExec">
      <description>tInformixOutputBulkExec is a dedicated componant which improves performance during Insert operations in Informix databases.</description>
      <topic href="guide/components/en/tInformixOutputBulkExec.html" label="tInformixOutputBulkExec Component Documentation"/>
   </context>
   <context id="tInformixRollback">
      <description>This component prevents involuntary transaction commits.</description>
      <topic href="guide/components/en/tInformixRollback.html" label="tInformixRollback Component Documentation"/>
   </context>
   <context id="tInformixRow">
      <description>Depending on the nature of the query and the database, tInformixRow acts on the actual DB structure or on the data (although without handling data). The SQLBuilder tool helps you write easily your SQL statements.</description>
      <topic href="guide/components/en/tInformixRow.html" label="tInformixRow Component Documentation"/>
   </context>
   <context id="tInformixSP">
      <description>tInformixSP allows you to centralise multiple and complex queries in a database and enables you to call them more easily.</description>
      <topic href="guide/components/en/tInformixSP.html" label="tInformixSP Component Documentation"/>
   </context>
   <context id="tMSSqlBulkExec">
      <description>As a dedicated component, tMSSqlBulkExec offers gains in performance while carrying out the Insert operations to a MSSql database</description>
      <topic href="guide/components/en/tMSSqlBulkExec.html" label="tMSSqlBulkExec Component Documentation"/>
   </context>
   <context id="tMSSqlCDC">
      <description>tMSSqlCDC addresses data extraction and transportation needs. tMSSqlCDC only extracts the changes made to the source operational data and makes them available to the target system(s) using database CDC views.</description>
      <topic href="guide/components/en/tMSSqlCDC.html" label="tMSSqlCDC Component Documentation"/>
   </context>
   <context id="tMSSqlColumnList">
      <description>Lists all column names of a given MSSql table.</description>
      <topic href="guide/components/en/tMSSqlColumnList.html" label="tMSSqlColumnList Component Documentation"/>
   </context>
   <context id="tMSSqlClose">
      <description>Close a transaction.</description>
      <topic href="guide/components/en/tMSSqlClose.html" label="tMSSqlClose Component Documentation"/>
   </context>
   <context id="tMSSqlCommit">
      <description>Using a unique connection, this component commits in one go a global transaction instead of doing that on every row or every batch and thus provides gain in performance.</description>
      <topic href="guide/components/en/tMSSqlCommit.html" label="tMSSqlCommit Component Documentation"/>
   </context>
   <context id="tMSSqlConnection">
      <description>This component allows you to commit all of the Job data to an output database in just a single transaction, once the data has been validated.</description>
      <topic href="guide/components/en/tMSSqlConnection.html" label="tMSSqlConnection Component Documentation"/>
   </context>
   <context id="tMSSqlInput">
      <description>tMSSqlInput executes a DB query with a strictly defined order which must correspond to the schema definition. Then it passes on the field list to the next component via a Main row link.</description>
      <topic href="guide/components/en/tMSSqlInput.html" label="tMSSqlInput Component Documentation"/>
   </context>
   <context id="tMSSqlLastInsertId">
      <description>tMSSqlLastInsertId enables you to retrieve the last primary keys added by a user to a MSSql table.</description>
      <topic href="guide/components/en/tMSSqlLastInsertId.html" label="tMSSqlLastInsertId Component Documentation"/>
   </context>
   <context id="tMSSqlOutput">
      <description>tMSSqlOutput executes the action defined on the table and/or on the data contained in the table, based on the flow incoming from the preceding component in the job.</description>
      <topic href="guide/components/en/tMSSqlOutput.html" label="tMSSqlOutput Component Documentation"/>
   </context>
   <context id="tMSSqlOutputBulk">
      <description>Prepares the file to be used as parameter in the INSERT query to feed the MSSql database.</description>
      <topic href="guide/components/en/tMSSqlOutputBulk.html" label="tMSSqlOutputBulk Component Documentation"/>
   </context>
   <context id="tMSSqlOutputBulkExec">
      <description>As a dedicated component, it allows gains in performance during Insert operations to a MSSql database.</description>
      <topic href="guide/components/en/tMSSqlOutputBulkExec.html" label="tMSSqlOutputBulkExec Component Documentation"/>
   </context>
   <context id="tMSSqlRollback">
      <description>Avoids to commit part of a transaction involuntarily.</description>
      <topic href="guide/components/en/tMSSqlRollback.html" label="tMSSqlRollback Component Documentation"/>
   </context>
   <context id="tMSSqlRow">
      <description>Depending on the nature of the query and the database, tMSSqlRow acts on the actual DB structure or on the data (although without handling data). The SQLBuilder tool helps you write easily your SQL statements.</description>
      <topic href="guide/components/en/tMSSqlRow.html" label="tMSSqlRow Component Documentation"/>
   </context>
   <context id="tMSSqlSP">
      <description>tMSSqlSP offers a convenient way to centralize multiple or complex queries in a database and call them easily.</description>
      <topic href="guide/components/en/tMSSqlSP.html" label="tMSSqlSP Component Documentation"/>
   </context>
   <context id="tMSSqlTableList">
      <description>Lists the names of a given set of MSSql tables using a select statement based on a Where clause.</description>
      <topic href="guide/components/en/tMSSqlTableList.html" label="tMSSqlTableList Component Documentation"/>
   </context>
   <context id="tMysqlBulkExec">
      <description>As a dedicated component, tMysqlBulkExec offers gains in performance while carrying out the Insert operations to a Mysql database</description>
      <topic href="guide/components/en/tMysqlBulkExec.html" label="tMysqlBulkExec Component Documentation"/>
   </context>
   <context id="tMysqlCDC">
      <description>tMysqlCDC addresses data extraction and transportation needs. tMysqlCDC only extracts the changes made to the source operational data and makes them available to the target system(s) using database CDC views.</description>
      <topic href="guide/components/en/tMysqlCDC.html" label="tMysqlCDC Component Documentation"/>
   </context>
   <context id="tMysqlClose">
      <description>Close a transaction.</description>
      <topic href="guide/components/en/tMysqlClose.html" label="tMysqlClose Component Documentation"/>
   </context>
   <context id="tMysqlColumnList">
      <description>Lists all column names of a given Mysql table.</description>
      <topic href="guide/components/en/tMysqlColumnList.html" label="tMysqlColumnList Component Documentation"/>
   </context>
   <context id="tMysqlCommit">
      <description>Using a unique connection, this component commits in one go a global transaction instead of doing that on every row or every batch and thus provides gain in performance.</description>
      <topic href="guide/components/en/tMysqlCommit.html" label="tMysqlCommit Component Documentation"/>
   </context>
   <context id="tMysqlConnection">
      <description>This component allows you to commit all of the Job data to an output database in just a single transaction, once the data has been validated.</description>
      <topic href="guide/components/en/tMysqlConnection.html" label="tMysqlConnection Component Documentation"/>
   </context>
   <context id="tMysqlInput">
      <description>tMysqlInput executes a DB query with a strictly defined order which must correspond to the schema definition. Then it passes on the field list to the next component via a Main row link.</description>
      <topic href="guide/components/en/tMysqlInput.html" label="tMysqlInput Component Documentation"/>
   </context>
   <context id="tMysqlLastInsertId">
      <description>tMysqlLastInsertId obtains the primary key value of the record that was last inserted in a Mysql table by a user.</description>
      <topic href="guide/components/en/tMysqlLastInsertId.html" label="tMysqlLastInsertId Component Documentation"/>
   </context>
   <context id="tMysqlOutput">
      <description>tMysqlOutput executes the action defined on the table and/or on the data contained in the table, based on the flow incoming from the preceding component in the Job.</description>
      <topic href="guide/components/en/tMysqlOutput.html" label="tMysqlOutput Component Documentation"/>
   </context>
   <context id="tMysqlOutputBulk">
      <description>Prepares the file to be used as parameter in the INSERT query to feed the MySQL database.</description>
      <topic href="guide/components/en/tMysqlOutputBulk.html" label="tMysqlOutputBulk Component Documentation"/>
   </context>
   <context id="tMysqlOutputBulkExec">
      <description>As a dedicated component, it improves performance during Insert operations to a MySQL database.</description>
      <topic href="guide/components/en/tMysqlOutputBulkExec.html" label="tMysqlOutputBulkExec Component Documentation"/>
   </context>
   <context id="tMysqlRollback">
      <description>Avoids to commit part of a transaction involuntarily.</description>
      <topic href="guide/components/en/tMysqlRollback.html" label="tMysqlRollback Component Documentation"/>
   </context>
   <context id="tMysqlRow">
      <description>Depending on the nature of the query and the database, tMysqlRow acts on the actual DB structure or on the data (although without handling data). The SQLBuilder tool helps you write easily your SQL statements.</description>
      <topic href="guide/components/en/tMysqlRow.html" label="tMysqlRow Component Documentation"/>
   </context>
   <context id="tMysqlSP">
      <description>tMysqlSP offers a convenient way to centralize multiple or complex queries in a database and call them easily.</description>
      <topic href="guide/components/en/tMysqlSP.html" label="tMysqlSP Component Documentation"/>
   </context>
   <context id="tMysqlTableList">
      <description>Lists the names of a given set of Mysql tables using a select statement based on a Where clause.</description>
      <topic href="guide/components/en/tMysqlTableList.html" label="tMysqlTableList Component Documentation"/>
   </context>
   <context id="tOracleBulkExec">
      <description>As a dedicated component, it allows gains in performance during operations performed on data of an Oracle database.</description>
      <topic href="guide/components/en/tOracleBulkExec.html" label="tOracleBulkExec Component Documentation"/>
   </context>
   <context id="tOracleCDC">
      <description>tOracleCDC addresses data extraction and transportation needs. tOracleCDC only extracts the changes done to the source operational data and makes them available to the target system(s) using database CDC views.</description>
      <topic href="guide/components/en/tOracleCDC.html" label="tOracleCDC Component Documentation"/>
   </context>
   <context id="tOracleClose">
      <description>Close a transaction.</description>
      <topic href="guide/components/en/tOracleClose.html" label="tOracleClose Component Documentation"/>
   </context>
   <context id="tOracleCommit">
      <description>Using a unique connection, this component commits in one go a global transaction instead of doing that on every row or every batch and thus provides gain in performance.</description>
      <topic href="guide/components/en/tOracleCommit.html" label="tOracleCommit Component Documentation"/>
   </context>
   <context id="tOracleConnection">
      <description>This component allows you to commit all of the Job data to an output database in just a single transaction, once the data has been validated.</description>
      <topic href="guide/components/en/tOracleConnection.html" label="tOracleConnection Component Documentation"/>
   </context>
   <context id="tOracleInput">
      <description>tOracleInput executes a DB query with a strictly defined order which must correspond to the schema definition. Then it passes on the field list to the next component via a Main row link.</description>
      <topic href="guide/components/en/tOracleInput.html" label="tOracleInput Component Documentation"/>
   </context>
   <context id="tOracleOutput">
      <description>tOracleOutput executes the action defined on the table and/or on the data contained in the table, based on the flow incoming from the preceding component in the Job.</description>
      <topic href="guide/components/en/tOracleOutput.html" label="tOracleOutput Component Documentation"/>
   </context>
   <context id="tOracleOutputBulk">
      <description>Prepares the file to be used as parameter in the INSERT query to feed the Oracle database.</description>
      <topic href="guide/components/en/tOracleOutputBulk.html" label="tOracleOutputBulk Component Documentation"/>
   </context>
   <context id="tOracleOutputBulkExec">
      <description>As a dedicated component, it allows gains in performance during Insert operations to an Oracle database.</description>
      <topic href="guide/components/en/tOracleOutputBulkExec.html" label="tOracleOutputBulkExec Component Documentation"/>
   </context>
   <context id="tOracleRollback">
      <description>Avoids to commit part of a transaction involuntarily.</description>
      <topic href="guide/components/en/tOracleRollback.html" label="tOracleRollback Component Documentation"/>
   </context>
   <context id="tOracleRow">
      <description>Depending on the nature of the query and the database, tOracleRow acts on the actual DB structure or on the data (although without handling data). The SQLBuilder tool helps you write easily your SQL statements.</description>
      <topic href="guide/components/en/tOracleRow.html" label="tOracleRow Component Documentation"/>
   </context>
   <context id="tOracleSP">
      <description>tOracleSP offers a convenient way to centralize multiple or complex queries in a database and call them easily.</description>
      <topic href="guide/components/en/tOracleSP.html" label="tOracleSP Component Documentation"/>
   </context>
   <context id="tOracleTableList">
      <description>This component lists the names of specified Oracle tables using a SELECT statement based on a WHERE clause.</description>
      <topic href="guide/components/en/tOracleTableList.html" label="tOracleTableList Component Documentation"/>
   </context>
   <context id="tPostgresqlBulkExec">
      <description>As a dedicated component, tPostgresqlBulkExec offers gains in performance while carrying out the Insert operations to a Postgresql database</description>
      <topic href="guide/components/en/tPostgresqlBulkExec.html" label="tPostgresqlBulkExec Component Documentation"/>
   </context>
   <context id="tPostgresqlCDC">
      <description>tPostgresqlCDC addresses data extraction and transportation needs. tPostgresqlCDC only extracts the changes made to the source operational data and makes them available to the target system(s) using database CDC views.</description>
      <topic href="guide/components/en/tPostgresqlCDC.html" label="tPostgresqlCDC Component Documentation"/>
   </context>
   <context id="tPostgresqlCommit">
      <description>Using a unique connection, this component commits in one go a global transaction instead of doing that on every row or every batch and thus provides gain in performance.</description>
      <topic href="guide/components/en/tPostgresqlCommit.html" label="tPostgresqlCommit Component Documentation"/>
   </context>
   <context id="tPostgresqlClose">
      <description>Close a transaction.</description>
      <topic href="guide/components/en/tPostgresqlClose.html" label="tPostgresqlClose Component Documentation"/>
   </context>
   <context id="tPostgresqlConnection">
      <description>This component allows you to commit all of the Job data to an output database in just a single transaction, once the data has been validated.</description>
      <topic href="guide/components/en/tPostgresqlConnection.html" label="tPostgresqlConnection Component Documentation"/>
   </context>
   <context id="tPostgresqlInput">
      <description>tPostgresqlInput executes a DB query with a strictly defined order which must correspond to the schema definition. Then it passes on the field list to the next component via a Main row link.</description>
      <topic href="guide/components/en/tPostgresqlInput.html" label="tPostgresqlInput Component Documentation"/>
   </context>
   <context id="tPostgresqlOutput">
      <description>tPostgresqlOutput executes the action defined on the table and/or on the data contained in the table, based on the flow incoming from the preceding component in the job.</description>
      <topic href="guide/components/en/tPostgresqlOutput.html" label="tPostgresqlOutput Component Documentation"/>
   </context>
   <context id="tPostgresqlOutputBulk">
      <description>Prepares the file to be used as parameters in the INSERT query to feed the Postgresql database.</description>
      <topic href="guide/components/en/tPostgresqlOutputBulk.html" label="tPostgresqlOutputBulk Component Documentation"/>
   </context>
   <context id="tPostgresqlOutputBulkExec">
      <description>As a dedicated component, it allows gains in performance during Insert operations to a Postgresql database.</description>
      <topic href="guide/components/en/tPostgresqlOutputBulkExec.html" label="tPostgresqlOutputBulkExec Component Documentation"/>
   </context>
   <context id="tPostgresqlRollback">
      <description>Avoids to commit part of a transaction involuntarily.</description>
      <topic href="guide/components/en/tPostgresqlRollback.html" label="tPostgresqlRollback Component Documentation"/>
   </context>
   <context id="tPostgresqlRow">
      <description>Depending on the nature of the query and the database, tPostgresqlRow acts on the actual DB structure or on the data (although without handling data). The SQLBuilder tool helps you write easily your SQL statements.</description>
      <topic href="guide/components/en/tPostgresqlRow.html" label="tPostgresqlRow Component Documentation"/>
   </context>
   <context id="tSybaseBulkExec">
      <description>As a dedicated component, it allows gains in performance during Insert operations to a Sybase database.</description>
      <topic href="guide/components/en/tSybaseBulkExec.html" label="tSybaseBulkExec Component Documentation"/>
   </context>
   <context id="tSybaseCDC">
      <description>tSybaseCDC addresses data extraction and transportation needs. tSybaseCDC only extracts the changes made to the source operational data and makes them available to the target system(s) using database CDC views.</description>
      <topic href="guide/components/en/tSybaseCDC.html" label="tSybaseCDC Component Documentation"/>
   </context>
   <context id="tSybaseClose">
      <description>Close a transaction.</description>
      <topic href="guide/components/en/tSybaseClose.html" label="tSybaseClose Component Documentation"/>
   </context>
   <context id="tSybaseCommit">
      <description>Using a unique connection, this component commits in one go a global transaction instead of doing that on every row or every batch and thus provides gain in performance.</description>
      <topic href="guide/components/en/tSybaseCommit.html" label="tSybaseCommit Component Documentation"/>
   </context>
   <context id="tSybaseConnection">
      <description>This component allows you to commit all of the Job data to an output database in just a single transaction, once the data has been validated.</description>
      <topic href="guide/components/en/tSybaseConnection.html" label="tSybaseConnection Component Documentation"/>
   </context>
   <context id="tSybaseInput">
      <description>tSybaseInput executes a DB query with a strictly defined order which must correspond to the schema definition. Then it passes on the field list to the next component via a Main row link.</description>
      <topic href="guide/components/en/tSybaseInput.html" label="tSybaseInput Component Documentation"/>
   </context>
   <context id="tSybaseIQBulkExec">
      <description>As a dedicated component, it allows gains in performance during Insert operations to a Sybase IQ database.</description>
      <topic href="guide/components/en/tSybaseIQBulkExec.html" label="tSybaseIQBulkExec Component Documentation"/>
   </context>
   <context id="tSybaseIQOutputBulkExec">
      <description>As a dedicated component, it allows gains in performance during Insert operations to a Sybase IQ database.</description>
      <topic href="guide/components/en/tSybaseIQOutputBulkExec.html" label="tSybaseIQOutputBulkExec Component Documentation"/>
   </context>
   <context id="tSybaseOutput">
      <description>tSybaseOutput executes the action defined on the table and/or on the data contained in the table, based on the flow incoming from the preceding component in the job.</description>
      <topic href="guide/components/en/tSybaseOutput.html" label="tSybaseOutput Component Documentation"/>
   </context>
   <context id="tSybaseOutputBulk">
      <description>Prepares the file to be used as parameter in the INSERT query to feed the Sybase database.</description>
      <topic href="guide/components/en/tSybaseOutputBulk.html" label="tSybaseOutputBulk Component Documentation"/>
   </context>
   <context id="tSybaseOutputBulkExec">
      <description>As a dedicated component, it allows gains in performance during Insert operations to a Sybase database.</description>
      <topic href="guide/components/en/tSybaseOutputBulkExec.html" label="tSybaseOutputBulkExec Component Documentation"/>
   </context>
   <context id="tSybaseRollback">
      <description>This component avoids to commit part of a transaction involuntarily.</description>
      <topic href="guide/components/en/tSybaseRollback.html" label="tSybaseRollback Component Documentation"/>
   </context>
   <context id="tSybaseRow">
      <description>Depending on the nature of the query and the database, tSybaseRow acts on the actual DB structure or on the data (although without handling data). The SQLBuilder tool helps you write easily your SQL statements.</description>
      <topic href="guide/components/en/tSybaseRow.html" label="tSybaseRow Component Documentation"/>
   </context>
   <context id="tSybaseSP">
      <description>tSybaseSP offers a convenient way to centralize multiple or complex queries in a database and call them easily.</description>
      <topic href="guide/components/en/tSybaseSP.html" label="tSybaseSP Component Documentation"/>
   </context>
   <context id="tGreenplumBulkExec">
      <description>tGreenplumBulkExec is a component which is specifically designed to improve performance when loading data in ParAccel database.</description>
      <topic href="guide/components/en/tGreenplumBulkExec.html" label="tGreenplumBulkExec Component Documentation"/>
   </context>
   <context id="tGreenplumClose">
      <description>Close a transaction.</description>
      <topic href="guide/components/en/tGreenplumClose.html" label="tGreenplumClose Component Documentation"/>
   </context>
   <context id="tGreenplumCommit">
      <description>Using a unique connection, this component commits in one go a global transaction instead of doing that on every row or every batch and thus provides gain in performance.</description>
      <topic href="guide/components/en/tGreenplumCommit.html" label="tGreenplumCommit Component Documentation"/>
   </context>
   <context id="tGreenplumConnection">
      <description>This component allows you to commit all of the Job data to an output database in just a single transaction, once the data has been validated.</description>
      <topic href="guide/components/en/tGreenplumConnection.html" label="tGreenplumConnection Component Documentation"/>
   </context>
   <context id="tGreenplumGPLoad">
      <description>This component is used to bulk load data into a Greenplum table either from an existing data file, an input flow, or directly from a data flow in streaming mode through a named-pipe.</description>
      <topic href="guide/components/en/tGreenplumGPLoad.html" label="tGreenplumGPLoad Component Documentation"/>
   </context>
   <context id="tGreenplumInput">
      <description>tGreenplumInput executes a DB query with a strictly defined order which must correspond to the schema definition. Then it passes on the field list to the next component via a Main row link.</description>
      <topic href="guide/components/en/tGreenplumInput.html" label="tGreenplumInput Component Documentation"/>
   </context>
   <context id="tGreenplumOutput">
      <description>tGreenplumOutput executes the action defined on the table and/or on the data of a table, according to the input flow form the previous component.</description>
      <topic href="guide/components/en/tGreenplumOutput.html" label="tGreenplumOutput Component Documentation"/>
   </context>
   <context id="tGreenplumOutputBulk">
      <description>Prepares the file to be used as parameter in the INSERT query to feed the Greenplum database.</description>
      <topic href="guide/components/en/tGreenplumOutputBulk.html" label="tGreenplumOutputBulk Component Documentation"/>
   </context>
   <context id="tGreenplumOutputBulkExec">
      <description>As a dedicated component, it allows gains in performance during Insert operations to a Greenplum database.</description>
      <topic href="guide/components/en/tGreenplumOutputBulkExec.html" label="tGreenplumOutputBulkExec Component Documentation"/>
   </context>
   <context id="tGreenplumRollback">
      <description>Avoids to commit part of a transaction involuntarily.</description>
      <topic href="guide/components/en/tGreenplumRollback.html" label="tGreenplumRollback Component Documentation"/>
   </context>
   <context id="tGreenplumRow">
      <description>Depending on the nature of the query and the database, tGreenplumRow acts on the actual DB structure or on the data (although without handling data). The SQLBuilder tool helps you write easily your SQL statements.</description>
      <topic href="guide/components/en/tGreenplumRow.html" label="tGreenplumRow Component Documentation"/>
   </context>
   <context id="tIngresBulkExec">
      <description>Inserts data in bulk to a table in the Ingres DBMS for performance gain.</description>
      <topic href="guide/components/en/tIngresBulkExec.html" label="tIngresBulkExec Component Documentation"/>
   </context>
   <context id="tIngresCDC">
      <description>This component addresses data extraction and transportation needs, it only extracts the changes made to the source operational data and makes them available to the target system(s) using database CDC views.</description>
      <topic href="guide/components/en/tIngresCDC.html" label="tIngresCDC Component Documentation"/>
   </context>
   <context id="tIngresClose">
      <description>Close a transaction.</description>
      <topic href="guide/components/en/tIngresClose.html" label="tIngresClose Component Documentation"/>
   </context>
   <context id="tIngresCommit">
      <description>Using a unique connection, this component commits in one go a global transaction instead of doing that on every row or every batch and thus provides gain in performance.</description>
      <topic href="guide/components/en/tIngresCommit.html" label="tIngresCommit Component Documentation"/>
   </context>
   <context id="tIngresConnection">
      <description>This component allows you to commit all of the Job data to an output database in just a single transaction, once the data has been validated.</description>
      <topic href="guide/components/en/tIngresConnection.html" label="tIngresConnection Component Documentation"/>
   </context>
   <context id="tIngresInput">
      <description>tIngresInput executes a DB query with a strictly defined order which must correspond to the schema definition. Then it passes on the field list to the next component via a Main row link.</description>
      <topic href="guide/components/en/tIngresInput.html" label="tIngresInput Component Documentation"/>
   </context>
   <context id="tIngresOutput">
      <description>tIngresOutput executes the action defined on the table and/or on the data contained in the table, based on the flow incoming from the preceding component in the Job.</description>
      <topic href="guide/components/en/tIngresOutput.html" label="tIngresOutput Component Documentation"/>
   </context>
   <context id="tIngresOutputBulk">
      <description>Prepares the file whose data is inserted in bulk to the Ingres DBMS for performance gain.</description>
      <topic href="guide/components/en/tIngresOutputBulk.html" label="tIngresOutputBulk Component Documentation"/>
   </context>
   <context id="tIngresOutputBulkExec">
      <description>Inserts data in bulk to a table in the Ingres DBMS for performance gain.</description>
      <topic href="guide/components/en/tIngresOutputBulkExec.html" label="tIngresOutputBulkExec Component Documentation"/>
   </context>
   <context id="tIngresRollback">
      <description>Avoids to commit part of a transaction involuntarily.</description>
      <topic href="guide/components/en/tIngresRollback.html" label="tIngresRollback Component Documentation"/>
   </context>
   <context id="tIngresRow">
      <description>Depending on the nature of the query and the database, tIngresRow acts on the actual DB structure or on the data (although without handling data). The SQLBuilder tool helps you write easily your SQL statements.</description>
      <topic href="guide/components/en/tIngresRow.html" label="tIngresRow Component Documentation"/>
   </context>
   <context id="tNetezzaBulkExec">
      <description>As a dedicated component, tNetezzaBulkExec offers gains in performance while carrying out the Insert operations to a Netezza database</description>
      <topic href="guide/components/en/tNetezzaBulkExec.html" label="tNetezzaBulkExec Component Documentation"/>
   </context>
   <context id="tNetezzaClose">
      <description>Close a transaction.</description>
      <topic href="guide/components/en/tNetezzaClose.html" label="tNetezzaClose Component Documentation"/>
   </context>
   <context id="tNetezzaCommit">
      <description>Using a unique connection, this component commits in one go a global transaction instead of doing that on every row or every batch and thus provides gain in performance.</description>
      <topic href="guide/components/en/tNetezzaCommit.html" label="tNetezzaCommit Component Documentation"/>
   </context>
   <context id="tNetezzaConnection">
      <description>This component allows you to commit all of the Job data to an output database in just a single transaction, once the data has been validated.</description>
      <topic href="guide/components/en/tNetezzaConnection.html" label="tNetezzaConnection Component Documentation"/>
   </context>
   <context id="tNetezzaInput">
      <description>tNetezzaInput executes a DB query with a strictly defined order which must correspond to the schema definition. Then it passes on the field list to the next component via a Main row link.</description>
      <topic href="guide/components/en/tNetezzaInput.html" label="tNetezzaInput Component Documentation"/>
   </context>
   <context id="tNetezzaNzLoad">
      <description>To bulk load data into a Netezza table either from an existing data file, an input flow, or directly from a data flow in streaming mode through a named-pipe.</description>
      <topic href="guide/components/en/tNetezzaNzLoad.html" label="tNetezzaNzLoad Component Documentation"/>
   </context>
   <context id="tNetezzaOutput">
      <description>tNetezzaOutput executes the action defined on the table and/or on the data contained in the table, based on the flow incoming from the preceding component in the designed Job.</description>
      <topic href="guide/components/en/tNetezzaOutput.html" label="tNetezzaOutput Component Documentation"/>
   </context>
   <context id="tNetezzaRollback">
      <description>This component avoids to commit part of a transaction involuntarily.</description>
      <topic href="guide/components/en/tNetezzaRollback.html" label="tNetezzaRollback Component Documentation"/>
   </context>
   <context id="tNetezzaRow">
      <description>Depending on the nature of the query and the database, tNetezzaRow acts on the actual DB structure or on the data (although without handling data). The SQLBuilder tool helps you write easily your SQL statements.</description>
      <topic href="guide/components/en/tNetezzaRow.html" label="tNetezzaRow Component Documentation"/>
   </context>
   <context id="tParAccelBulkExec">
      <description>tParAccelBulkExec is a component which is specifically designed to improve performance when loading data in ParAccel database.</description>
      <topic href="guide/components/en/tParAccelBulkExec.html" label="tParAccelBulkExec Component Documentation"/>
   </context>
   <context id="tParAccelClose">
      <description>Close a transaction.</description>
      <topic href="guide/components/en/tParAccelClose.html" label="tParAccelClose Component Documentation"/>
   </context>
   <context id="tParAccelCommit">
      <description>Using a unique connection, this component commits in one go a global transaction instead of doing that on every row or every batch and thus provides gain in performance.</description>
      <topic href="guide/components/en/tParAccelCommit.html" label="tParAccelCommit Component Documentation"/>
   </context>
   <context id="tParAccelConnection">
      <description>This component allows you to commit all of the Job data to an output database in just a single transaction, once the data has been validated.</description>
      <topic href="guide/components/en/tParAccelConnection.html" label="tParAccelConnection Component Documentation"/>
   </context>
   <context id="tParAccelInput">
      <description>tParAccelInput executes a DB query with a strictly defined order which must correspond to the schema definition. Then it passes on the field list to the next component via a Main row link.</description>
      <topic href="guide/components/en/tParAccelInput.html" label="tParAccelInput Component Documentation"/>
   </context>
   <context id="tParAccelOutput">
      <description>tParAccelOutput executes the action defined on the table and/or on the data of a table, according to the input flow form the previous component.</description>
      <topic href="guide/components/en/tParAccelOutput.html" label="tParAccelOutput Component Documentation"/>
   </context>
   <context id="tParAccelOutputBulk">
      <description>Prepares the file to be used as parameter in the INSERT query to feed the ParAccel database.</description>
      <topic href="guide/components/en/tParAccelOutputBulk.html" label="tParAccelOutputBulk Component Documentation"/>
   </context>
   <context id="tParAccelOutputBulkExec">
      <description>tParAccelOutputBulkExec is a component which is specifically designed to improve performance when loading data in ParAccel database.</description>
      <topic href="guide/components/en/tParAccelOutputBulkExec.html" label="tParAccelOutputBulkExec Component Documentation"/>
   </context>
   <context id="tParAccelRollback">
      <description>Avoids to commit part of a transaction involuntarily.</description>
      <topic href="guide/components/en/tParAccelRollback.html" label="tParAccelRollback Component Documentation"/>
   </context>
   <context id="tParAccelRow">
      <description>Depending on the nature of the query and the database, tParAccelRow acts on the actual DB structure or on the data (although without handling data). The SQLBuilder tool helps you write easily your SQL statements.</description>
      <topic href="guide/components/en/tParAccelRow.html" label="tParAccelRow Component Documentation"/>
   </context>
   <context id="tTeradataClose">
      <description>Close a transaction.</description>
      <topic href="guide/components/en/tTeradataClose.html" label="tTeradataClose Component Documentation"/>
   </context>
   <context id="tTeradataCommit">
      <description>Using a unique connection, this component commits in one go a global transaction instead of doing that on every row or every batch and thus provides gain in performance.</description>
      <topic href="guide/components/en/tTeradataCommit.html" label="tTeradataCommit Component Documentation"/>
   </context>
   <context id="tTeradataConnection">
      <description>This component allows you to commit all of the Job data to an output database in just a single transaction, once the data has been validated.</description>
      <topic href="guide/components/en/tTeradataConnection.html" label="tTeradataConnection Component Documentation"/>
   </context>
   <context id="tTeradataFastExport">
      <description>tTeradataFastExport exports data batches from a Teradata table to a cutsomer system or to a smaller database.</description>
      <topic href="guide/components/en/tTeradataFastExport.html" label="tTeradataFastExport Component Documentation"/>
   </context>
   <context id="tTeradataFastLoad">
      <description>tTeradataFastLoad executes a database query according to a strict order which must be the same as the one in the schema. The retrieve list of fields is then transfered to the next component, using a connexion flow (Main row).</description>
      <topic href="guide/components/en/tTeradataFastLoad.html" label="tTeradataFastLoad Component Documentation"/>
   </context>
   <context id="tTeradataFastLoadUtility">
      <description>tTeradataFastLoadUtility executes a database query according to a strict order which must be the same as the one in the schema. The retrieve list of fields is then transfered to the next component, using a connexion flow (Main row).</description>
      <topic href="guide/components/en/tTeradataFastLoadUtility.html" label="tTeradataFastLoadUtility Component Documentation"/>
   </context>
   <context id="tTeradataInput">
      <description>tTeradataInput executes a DB query with a strictly defined order which must correspond to the schema definition. Then it passes on the field list to the next component via a Main row link.</description>
      <topic href="guide/components/en/tTeradataInput.html" label="tTeradataInput Component Documentation"/>
   </context>
   <context id="tTeradataMultiLoad">
      <description>tTeradataMultiLoad executes a database query according to a strict order which must be the same as the one in the schema. The retrieve list of fields is then transfered to the next component, using a connexion flow (Main row).</description>
      <topic href="guide/components/en/tTeradataMultiLoad.html" label="tTeradataMultiLoad Component Documentation"/>
   </context>
   <context id="tTeradataOutput">
      <description>tTeradataOutput executes the action defined on the table and/or on the data contained in the table, based on the flow incoming from the preceding component in the job.</description>
      <topic href="guide/components/en/tTeradataOutput.html" label="tTeradataOutput Component Documentation"/>
   </context>
   <context id="tTeradataRollback">
      <description>tTeradataRollback avoids to commit part of a transaction involuntarily.</description>
      <topic href="guide/components/en/tTeradataRollback.html" label="tTeradataRollback Component Documentation"/>
   </context>
   <context id="tTeradataRow">
      <description>Depending on the nature of the query and the database, tTeradataRow acts on the actual DB structure or on the data (although without handling data). The SQLBuilder tool helps you write easily your SQL statements.</description>
      <topic href="guide/components/en/tTeradataRow.html" label="tTeradataRow Component Documentation"/>
   </context>
   <context id="tTeradataTPTUtility">
      <description>tTeradataTPTUtility allows you to insert data to load data into and delete data from any accessible table in the Teradata Database or from any other data stores for which an access operator or an access module exists.</description>
      <topic href="guide/components/en/tTeradataTPTUtility.html" label="tTeradataTPTUtility Component Documentation"/>
   </context>
   <context id="tTeradataTPump">
      <description>tTeradataTPump executes a database query according to a strict order which must be the same as the one in the schema. The retrieve list of fields is then transfered to the next component, using a connexion flow (Main row).</description>
      <topic href="guide/components/en/tTeradataTPump.html" label="tTeradataTPump Component Documentation"/>
   </context>
   <context id="tVectorWiseCommit">
      <description>Using a single connection, this component commits a global transaction in one go instead of doing so on every row or every batch. This provides a gain in performance</description>
      <topic href="guide/components/en/tVectorWiseCommit.html" label="tVectorWiseCommit Component Documentation"/>
   </context>
   <context id="tVectorWiseConnection">
      <description>This component allows you to commit all of the Job data to an output database in just a single transaction, once the data has been validated.</description>
      <topic href="guide/components/en/tVectorWiseConnection.html" label="tVectorWiseConnection Component Documentation"/>
   </context>
   <context id="tVectorWiseInput">
      <description>tVectorWiseInput executes a DB query with a strictly defined order which must correspond to the schema definition. Then it passes on the field list to the next component via a Main row link.</description>
      <topic href="guide/components/en/tVectorWiseInput.html" label="tVectorWiseInput Component Documentation"/>
   </context>
   <context id="tVectorWiseOutput">
      <description>tVectorWiseOutput executes the action defined on the table and/or on the data contained in the table, based on the flow incoming from the preceding component in the Job.</description>
      <topic href="guide/components/en/tVectorWiseOutput.html" label="tVectorWiseOutput Component Documentation"/>
   </context>
   <context id="tVectorWiseRollback">
      <description>This component prevents involuntary commits.</description>
      <topic href="guide/components/en/tVectorWiseRollback.html" label="tVectorWiseRollback Component Documentation"/>
   </context>
   <context id="tVectorWiseRow">
      <description>Depending on the nature of the query and the database, tVectorWiseRow acts on the actual DB structure or on the data (although without handling data). The SQLBuilder tool helps you write your SQL statements easily.</description>
      <topic href="guide/components/en/tVectorWiseRow.html" label="tVectorWiseRow Component Documentation"/>
   </context>
   <context id="tVerticaBulkExec">
      <description>As a dedicated component, tVerticaBulkExec offers gains in performance while carrying out the Insert operations to a Mysql database</description>
      <topic href="guide/components/en/tVerticaBulkExec.html" label="tVerticaBulkExec Component Documentation"/>
   </context>
   <context id="tVerticaClose">
      <description>Close a transaction.</description>
      <topic href="guide/components/en/tVerticaClose.html" label="tVerticaClose Component Documentation"/>
   </context>
   <context id="tVerticaCommit">
      <description>Using a unique connection, this component commits in one go a global transaction instead of doing that on every row or every batch and thus provides gain in performance.</description>
      <topic href="guide/components/en/tVerticaCommit.html" label="tVerticaCommit Component Documentation"/>
   </context>
   <context id="tVerticaConnection">
      <description>This component allows you to commit all of the Job data to an output database in just a single transaction, once the data has been validated.</description>
      <topic href="guide/components/en/tVerticaConnection.html" label="tVerticaConnection Component Documentation"/>
   </context>
   <context id="tVerticaInput">
      <description>tVerticaInput executes a DB query with a strictly defined order which must correspond to the schema definition. Then it passes on the field list to the next component via a Main row link.</description>
      <topic href="guide/components/en/tVerticaInput.html" label="tVerticaInput Component Documentation"/>
   </context>
   <context id="tVerticaOutput">
      <description>tVerticaOutput executes the action defined on the table and/or on the data contained in the table, based on the flow incoming from the preceding component in the job.</description>
      <topic href="guide/components/en/tVerticaOutput.html" label="tVerticaOutput Component Documentation"/>
   </context>
   <context id="tVerticaOutputBulk">
      <description>tVerticaBulkOutputExec prepares the file to be used as parameter in the INSERT query to feed the Vertica database.</description>
      <topic href="guide/components/en/tVerticaOutputBulk.html" label="tVerticaOutputBulk Component Documentation"/>
   </context>
   <context id="tVerticaOutputBulkExec">
      <description>As a dedicated component, it allows gains in performance during Insert operations to a Vertica database.</description>
      <topic href="guide/components/en/tVerticaOutputBulkExec.html" label="tVerticaOutputBulkExec Component Documentation"/>
   </context>
   <context id="tVerticaRollback">
      <description>tVerticaRollback avoids to commit part of a transaction involuntarily.</description>
      <topic href="guide/components/en/tVerticaRollback.html" label="tVerticaRollback Component Documentation"/>
   </context>
   <context id="tVerticaRow">
      <description>Depending on the nature of the query and the database, tVerticaRow acts on the actual DB structure or on the data (although without handling data). The SQLBuilder tool helps you write easily your SQL statements.</description>
      <topic href="guide/components/en/tVerticaRow.html" label="tVerticaRow Component Documentation"/>
   </context>
   <context id="tCreateTable">
      <description>This Java specific component helps create or drop any database table</description>
      <topic href="guide/components/en/tCreateTable.html" label="tCreateTable Component Documentation"/>
   </context>
   <context id="tDBInput">
      <description>tDBInput executes a DB query with a strictly defined order which must correspond to the schema definition. Then it passes on the field list to the next component via a Main row link.</description>
      <topic href="guide/components/en/tDBInput.html" label="tDBInput Component Documentation"/>
   </context>
   <context id="tDBOutput">
      <description>tDBOutput executes the action defined on the data in a table, based on the flow incoming from the preceding component in the Job.</description>
      <topic href="guide/components/en/tDBOutput.html" label="tDBOutput Component Documentation"/>
   </context>
   <context id="tDBSQLRow">
      <description>Depending on the nature of the query and the database, tDBSQLRow acts on the actual DB structure or on the data (although without handling data). The SQLBuilder tool helps you write easily your SQL statements.</description>
      <topic href="guide/components/en/tDBSQLRow.html" label="tDBSQLRow Component Documentation"/>
   </context>
   <context id="tEXAInput">
      <description>tEXAInput executes queries in databases according to a strict order which must correspond exactly to that defined in the schema. The list of fields retrieved is then transmitted to the following component via a Main row link.</description>
      <topic href="guide/components/en/tEXAInput.html" label="tEXAInput Component Documentation"/>
   </context>
   <context id="tEXAOutput">
      <description>tEXAOutput executes the action defined on the table and/or on the table data, depending on the function of the input flow, from the preceding component.</description>
      <topic href="guide/components/en/tEXAOutput.html" label="tEXAOutput Component Documentation"/>
   </context>
   <context id="tEXARow">
      <description>Depending on the nature of the query and the database, tEXARow acts on the actual structure of the database, or indeed the data, although without modifying them.</description>
      <topic href="guide/components/en/tEXARow.html" label="tEXARow Component Documentation"/>
   </context>
   <context id="tEXistConnection">
      <description>Opens a connection to an eXist database in order that a transaction may be carried out.</description>
      <topic href="guide/components/en/tEXistConnection.html" label="tEXistConnection Component Documentation"/>
   </context>
   <context id="tEXistDelete">
      <description>tEXistDelete deletes specified resources from remote eXist databases.</description>
      <topic href="guide/components/en/tEXistDelete.html" label="tEXistDelete Component Documentation"/>
   </context>
   <context id="tEXistGet">
      <description>tEXistGet downloads selected resources from a remote DB server to a defined local directory.</description>
      <topic href="guide/components/en/tEXistGet.html" label="tEXistGet Component Documentation"/>
   </context>
   <context id="tEXistList">
      <description>tEXistList lists the resources stored on a remote database server.</description>
      <topic href="guide/components/en/tEXistList.html" label="tEXistList Component Documentation"/>
   </context>
   <context id="tEXistPut">
      <description>tEXistPut uploads specified files from a defined local directory to a remote DB server.</description>
      <topic href="guide/components/en/tEXistPut.html" label="tEXistPut Component Documentation"/>
   </context>
   <context id="tEXistXQuery">
      <description>tEXistXQuery queries XML files located on remote databases and outputs the results to an XML file stored locally.</description>
      <topic href="guide/components/en/tEXistXQuery.html" label="tEXistXQuery Component Documentation"/>
   </context>
   <context id="tEXistXUpdate">
      <description>tEXistXUpdate processes XML file records and updates the existing records on the DB server.</description>
      <topic href="guide/components/en/tEXistXUpdate.html" label="tEXistXUpdate Component Documentation"/>
   </context>
   <context id="tFirebirdClose">
      <description>Close a transaction.</description>
      <topic href="guide/components/en/tFirebirdClose.html" label="tFirebirdClose Component Documentation"/>
   </context>
   <context id="tFirebirdCommit">
      <description>Using a unique connection, this component commits in one go a global transaction instead of doing that on every row or every batch and thus provides gain in performance.</description>
      <topic href="guide/components/en/tFirebirdCommit.html" label="tFirebirdCommit Component Documentation"/>
   </context>
   <context id="tFirebirdConnection">
      <description>This component allows you to commit all of the Job data to an output database in just a single transaction, once the data has been validated.</description>
      <topic href="guide/components/en/tFirebirdConnection.html" label="tFirebirdConnection Component Documentation"/>
   </context>
   <context id="tFirebirdInput">
      <description>tFirebirdInput executes a DB query with a strictly defined order which must correspond to the schema definition. Then it passes on the field list to the next component via a Main row link.</description>
      <topic href="guide/components/en/tFirebirdInput.html" label="tFirebirdInput Component Documentation"/>
   </context>
   <context id="tFirebirdOutput">
      <description>tFirebirdOutput executes the action defined on the table and/or on the data contained in the table, based on the flow incoming from the preceding component in the Job.</description>
      <topic href="guide/components/en/tFirebirdOutput.html" label="tFirebirdOutput Component Documentation"/>
   </context>
   <context id="tFirebirdRollback">
      <description>This component avoids to commit part of a transaction involuntarily..</description>
      <topic href="guide/components/en/tFirebirdRollback.html" label="tFirebirdRollback Component Documentation"/>
   </context>
   <context id="tFirebirdRow">
      <description>Depending on the nature of the query and the database, tFirebirdRow acts on the actual DB structure or on the data (although without handling data). The SQLBuilder tool helps you write easily your SQL statements.</description>
      <topic href="guide/components/en/tFirebirdRow.html" label="tFirebirdRow Component Documentation"/>
   </context>
   <context id="tHSQLDbInput">
      <description>tHSQLDbInput executes a DB query with a strictly defined order which must correspond to the schema definition. Then it passes on the field list to the next component via a Main row link.</description>
      <topic href="guide/components/en/tHSQLDbInput.html" label="tHSQLDbInput Component Documentation"/>
   </context>
   <context id="tHSQLDbOutput">
      <description>tHSQLDbOutput executes the action defined on the table and/or on the data contained in the table, based on the flow incoming from the preceding component in the Job.</description>
      <topic href="guide/components/en/tHSQLDbOutput.html" label="tHSQLDbOutput Component Documentation"/>
   </context>
   <context id="tHSQLDbRow">
      <description>Depending on the nature of the query and the database, tHSQLDbRow acts on the actual DB structure or on the data (although without handling data). The SQLBuilder tool helps you write easily your SQL statements.</description>
      <topic href="guide/components/en/tHSQLDbRow.html" label="tHSQLDbRow Component Documentation"/>
   </context>
   <context id="tInterbaseClose">
      <description>Close a transaction.</description>
      <topic href="guide/components/en/tInterbaseClose.html" label="tInterbaseClose Component Documentation"/>
   </context>
   <context id="tInterbaseCommit">
      <description>Using a unique connection, this component commits in one go a global transaction instead of doing that on every row or every batch and thus provides gain in performance.</description>
      <topic href="guide/components/en/tInterbaseCommit.html" label="tInterbaseCommit Component Documentation"/>
   </context>
   <context id="tInterbaseConnection">
      <description>This component allows you to commit all of the Job data to an output database in just a single transaction, once the data has been validated.</description>
      <topic href="guide/components/en/tInterbaseConnection.html" label="tInterbaseConnection Component Documentation"/>
   </context>
   <context id="tInterbaseInput">
      <description>tInterbaseInput executes a DB query with a strictly defined order which must correspond to the schema definition. Then it passes on the field list to the next component via a Main row link.</description>
      <topic href="guide/components/en/tInterbaseInput.html" label="tInterbaseInput Component Documentation"/>
   </context>
   <context id="tInterbaseOutput">
      <description>tInterbaseOutput executes the action defined on the table and/or on the data contained in the table, based on the flow incoming from the preceding component in the Job.</description>
      <topic href="guide/components/en/tInterbaseOutput.html" label="tInterbaseOutput Component Documentation"/>
   </context>
   <context id="tInterbaseRollback">
      <description>Avoids to commit part of a transaction involuntarily.</description>
      <topic href="guide/components/en/tInterbaseRollback.html" label="tInterbaseRollback Component Documentation"/>
   </context>
   <context id="tInterbaseRow">
      <description>Depending on the nature of the query and the database, tInterbaseRow acts on the actual DB structure or on the data (although without handling data). The SQLBuilder tool helps you write easily your SQL statements.</description>
      <topic href="guide/components/en/tInterbaseRow.html" label="tInterbaseRow Component Documentation"/>
   </context>
   <context id="tJavaDBInput">
      <description>tJavaDBInput executes a DB query with a strictly defined order which must correspond to the schema definition. Then it passes on the field list to the next component via a Main row link.</description>
      <topic href="guide/components/en/tJavaDBInput.html" label="tJavaDBInput Component Documentation"/>
   </context>
   <context id="tJavaDBOutput">
      <description>tJavaDBOutput executes the action defined on the table and/or on the data contained in the table, based on the flow incoming from the preceding component in the Job.</description>
      <topic href="guide/components/en/tJavaDBOutput.html" label="tJavaDBOutput Component Documentation"/>
   </context>
   <context id="tJavaDBRow">
      <description>Depending on the nature of the query and the database, tJavaDBRow acts on the actual DB structure or on the data (although without handling data). The SQLBuilder tool helps you write easily your SQL statements.</description>
      <topic href="guide/components/en/tJavaDBRow.html" label="tJavaDBRow Component Documentation"/>
   </context>
   <context id="tJDBCColumnList">
      <description>Lists all column names of a given JDBC table.</description>
      <topic href="guide/components/en/tJDBCColumnList.html" label="tJDBCColumnList Component Documentation"/>
   </context>
   <context id="tJDBCClose">
      <description>Close a transaction.</description>
      <topic href="guide/components/en/tJDBCClose.html" label="tJDBCClose Component Documentation"/>
   </context>
   <context id="tJDBCCommit">
      <description>Using a unique connection, this component commits in one go a global transaction instead of doing that on every row or every batch and thus provides gain in performance.</description>
      <topic href="guide/components/en/tJDBCCommit.html" label="tJDBCCommit Component Documentation"/>
   </context>
   <context id="tJDBCConnection">
      <description>This component allows you to commit all of the Job data to an output database in just a single transaction, once the data has been validated.</description>
      <topic href="guide/components/en/tJDBCConnection.html" label="tJDBCConnection Component Documentation"/>
   </context>
   <context id="tJDBCInput">
      <description>tJDBCInput executes a DB query with a strictly defined order which must correspond to the schema definition. Then it passes on the field list to the next component via a Main row link.</description>
      <topic href="guide/components/en/tJDBCInput.html" label="tJDBCInput Component Documentation"/>
   </context>
   <context id="tJDBCOutput">
      <description>tJDBCOutput executes the action defined on the data contained in the table, based on the flow incoming from the preceding component in the Job.</description>
      <topic href="guide/components/en/tJDBCOutput.html" label="tJDBCOutput Component Documentation"/>
   </context>
   <context id="tJDBCRollback">
      <description>Avoid commiting part of a transaction accidentally.</description>
      <topic href="guide/components/en/tJDBCRollback.html" label="tJDBCRollback Component Documentation"/>
   </context>
   <context id="tJDBCRow">
      <description>Depending on the nature of the query and the database, tJDBCRow acts on the actual DB structure or on the data (although without handling data). The SQLBuilder tool helps you write easily your SQL statements.</description>
      <topic href="guide/components/en/tJDBCRow.html" label="tJDBCRow Component Documentation"/>
   </context>
   <context id="tJDBCSP">
      <description>tJDBCSP offers a convenient way to centralize multiple or complex queries in a database and call them easily.</description>
      <topic href="guide/components/en/tJDBCSP.html" label="tJDBCSP Component Documentation"/>
   </context>
   <context id="tJDBCTableList">
      <description>Lists the names of a given set of JDBC tables using a select statement based on a Where clause.</description>
      <topic href="guide/components/en/tJDBCTableList.html" label="tJDBCTableList Component Documentation"/>
   </context>
   <context id="tLDAPAttributesInput">
      <description>tLDAPAttributesInput executes an LDAP query based on the given filter and corresponding to the schema definition. Then it passes on the field list to the next component via a Main row link.</description>
      <topic href="guide/components/en/tLDAPAttributesInput.html" label="tLDAPAttributesInput Component Documentation"/>
   </context>
   <context id="tLDAPConnection">
      <description>This component creates a connection to an LDAP Directory server. Then it can be invoked by other components that need to access the LDAP Directory server, e.g., tLDAPInput, tLDAPOutput, etc.</description>
      <topic href="guide/components/en/tLDAPConnection.html" label="tLDAPConnection Component Documentation"/>
   </context>
   <context id="tLDAPInput">
      <description>tLDAPInput executes an LDAP query based on the given filter and corresponding to the schema definition. Then it passes on the field list to the next component via a Main row link.</description>
      <topic href="guide/components/en/tLDAPInput.html" label="tLDAPInput Component Documentation"/>
   </context>
   <context id="tLDAPOutput">
      <description>tLDAPOutput executes an LDAP query based on the given filter and corresponding to the schema definition. Then it passes on the field list to the next component via a Main row link.</description>
      <topic href="guide/components/en/tLDAPOutput.html" label="tLDAPOutput Component Documentation"/>
   </context>
   <context id="tLDAPRenameEntry">
      <description>The tLDAPRenameEntry component rename ones or more entries in a specific LDAP directory.</description>
      <topic href="guide/components/en/tLDAPRenameEntry.html" label="tLDAPRenameEntry Component Documentation"/>
   </context>
   <context id="tMaxDBInput">
      <description>tMaxDBInput executes a DB query with a strictly defined order which must correspond to the schema definition. Then it passes on the field list to the next component via a Main row link.</description>
      <topic href="guide/components/en/tMaxDBInput.html" label="tMaxDBInput Component Documentation"/>
   </context>
   <context id="tMaxDBOutput">
      <description>tMaxDBOutput executes the action defined on the table and/or on the data contained in the table, based on the flow incoming from the preceding component in the job.</description>
      <topic href="guide/components/en/tMaxDBOutput.html" label="tMaxDBOutput Component Documentation"/>
   </context>
   <context id="tMaxDBRow">
      <description>Depending on the nature of the query and the database, tMaxDBRow acts on the actual DB structure or on the data (although without handling data). The SQLBuilder tool helps you write easily your SQL statements.</description>
      <topic href="guide/components/en/tMaxDBRow.html" label="tMaxDBRow Component Documentation"/>
   </context>
   <context id="tParseRecordSet">
      <description>.Parses a recordset rather than individual records from a table.</description>
      <topic href="guide/components/en/tParseRecordSet.html" label="tParseRecordSet Component Documentation"/>
   </context>
   <context id="tPostgresPlusBulkExec">
      <description>As a dedicated component, tPostgresPlusBulkExec allows gains in performance during Insert operations to a DB2 database.</description>
      <topic href="guide/components/en/tPostgresPlusBulkExec.html" label="tPostgresPlusBulkExec Component Documentation"/>
   </context>
   <context id="tPostgresPlusClose">
      <description>Close a transaction.</description>
      <topic href="guide/components/en/tPostgresPlusClose.html" label="tPostgresPlusClose Component Documentation"/>
   </context>
   <context id="tPostgresPlusCommit">
      <description>Using a unique connection, this component commits in one go a global transaction instead of doing that on every row or every batch and thus provides gain in performance.</description>
      <topic href="guide/components/en/tPostgresPlusCommit.html" label="tPostgresPlusCommit Component Documentation"/>
   </context>
   <context id="tPostgresPlusConnection">
      <description>This component allows you to commit all of the Job data to an output database in just a single transaction, once the data has been validated.</description>
      <topic href="guide/components/en/tPostgresPlusConnection.html" label="tPostgresPlusConnection Component Documentation"/>
   </context>
   <context id="tPostgresPlusInput">
      <description>tPostgresPlusInput executes a DB query with a strictly defined order which must correspond to the schema definition. Then it passes on the field list to the next component via a Main row link.</description>
      <topic href="guide/components/en/tPostgresPlusInput.html" label="tPostgresPlusInput Component Documentation"/>
   </context>
   <context id="tPostgresPlusOutput">
      <description>tPostgresPlusOutput executes the action defined on the table and/or on the data contained in the table, based on the flow incoming from the preceding component in the job.</description>
      <topic href="guide/components/en/tPostgresPlusOutput.html" label="tPostgresPlusOutput Component Documentation"/>
   </context>
   <context id="tPostgresPlusOutputBulk">
      <description>Prepares the file to be used as parameter in the INSERT query to feed the PostgresPlus database.</description>
      <topic href="guide/components/en/tPostgresPlusOutputBulk.html" label="tPostgresPlusOutputBulk Component Documentation"/>
   </context>
   <context id="tPostgresPlusOutputBulkExec">
      <description>As a dedicated component, it allows gains in performance during Insert operations to a PostgresPlus database.</description>
      <topic href="guide/components/en/tPostgresPlusOutputBulkExec.html" label="tPostgresPlusOutputBulkExec Component Documentation"/>
   </context>
   <context id="tPostgresPlusRollback">
      <description>This component avoids to commit part of a transaction involuntarily.</description>
      <topic href="guide/components/en/tPostgresPlusRollback.html" label="tPostgresPlusRollback Component Documentation"/>
   </context>
   <context id="tPostgresPlusRow">
      <description>Depending on the nature of the query and the database, tPostgresPlusRow acts on the actual DB structure or on the data (although without handling data). The SQLBuilder tool helps you write easily your SQL statements.</description>
      <topic href="guide/components/en/tPostgresPlusRow.html" label="tPostgresPlusRow Component Documentation"/>
   </context>
   <context id="tSasInput">
      <description>tSasInput executes a DB query with a strictly defined statement which must correspond to the schema definition. Then it passes on the field list to the component that follows via a Row &gt; Main connection.</description>
      <topic href="guide/components/en/tSasInput.html" label="tSasInput Component Documentation"/>
   </context>
   <context id="tSasOutput">
      <description>tSasOutput executes the action defined on the table and/or on the data contained in the table, based on the incoming flow from the preceding component in the Job.</description>
      <topic href="guide/components/en/tSasOutput.html" label="tSasOutput Component Documentation"/>
   </context>
   <context id="tSQLiteClose">
      <description>Close a transaction.</description>
      <topic href="guide/components/en/tSQLiteClose.html" label="tSQLiteClose Component Documentation"/>
   </context>
   <context id="tSQLiteCommit">
      <description>Using a unique connection, this component commits in one go a global transaction instead of doing that on every row or every batch and thus provides gain in performance.</description>
      <topic href="guide/components/en/tSQLiteCommit.html" label="tSQLiteCommit Component Documentation"/>
   </context>
   <context id="tSQLiteConnection">
      <description>This component allows you to commit all of the Job data to an output database in just a single transaction, once the data has been validated.</description>
      <topic href="guide/components/en/tSQLiteConnection.html" label="tSQLiteConnection Component Documentation"/>
   </context>
   <context id="tSQLiteInput">
      <description>tSQLiteInput executes a DB query with a defined command which must correspond to the schema definition. Then it passes on rows to the next component via a Main row link.</description>
      <topic href="guide/components/en/tSQLiteInput.html" label="tSQLiteInput Component Documentation"/>
   </context>
   <context id="tSQLiteOutput">
      <description>tSQLiteOutput executes the action defined on the table and/or on the data contained in the table, based on the flow incoming from the preceding component in the job.</description>
      <topic href="guide/components/en/tSQLiteOutput.html" label="tSQLiteOutput Component Documentation"/>
   </context>
   <context id="tSQLiteRollback">
      <description>Avoids to commit part of a transaction involuntarily.</description>
      <topic href="guide/components/en/tSQLiteRollback.html" label="tSQLiteRollback Component Documentation"/>
   </context>
   <context id="tSQLiteRow">
      <description>A prepared statement uses the input flow to replace the placeholders with the values for each parameters defined. This component can be very useful for updates.</description>
      <topic href="guide/components/en/tSQLiteRow.html" label="tSQLiteRow Component Documentation"/>
   </context>
   <context id="tDotNETInstantiate">
      <description>tDotNETInstantiate invokes the constructor of a .NET object that is intended for later reuse.</description>
      <topic href="guide/components/en/tDotNETInstantiate.html" label="tDotNETInstantiate Component Documentation"/>
   </context>
   <context id="tDotNETRow">
      <description>tDotNETRow helps you facilitate data transform by utilizing custom or built-in .NET classes.</description>
      <topic href="guide/components/en/tDotNETRow.html" label="tDotNETRow Component Documentation"/>
   </context>
   <context id="tCombinedSQLAggregate">
      <description>Helps to provide a set of matrix based on values or calculations.</description>
      <topic href="guide/components/en/tCombinedSQLAggregate.html" label="tCombinedSQLAggregate Component Documentation"/>
   </context>
   <context id="tCombinedSQLFilter">
      <description>Helps to filter data by reorganizing, deleting or adding columns based on the source table and to filter the given data source using the filter conditions.</description>
      <topic href="guide/components/en/tCombinedSQLFilter.html" label="tCombinedSQLFilter Component Documentation"/>
   </context>
   <context id="tCombinedSQLInput">
      <description>tCombinedSQLInput extracts fields from a database table based on its schema definition. Then it passes on the field list to the next component via a Combine row link. The schema of tCombinedSQLInput can be different from that of the source database table but must correspond to it in terms of the column order.</description>
      <topic href="guide/components/en/tCombinedSQLInput.html" label="tCombinedSQLInput Component Documentation"/>
   </context>
   <context id="tCombinedSQLOutput">
      <description>tCombinedSQLOutput inserts records from the incoming flow to an existing database table.</description>
      <topic href="guide/components/en/tCombinedSQLOutput.html" label="tCombinedSQLOutput Component Documentation"/>
   </context>
   <context id="tELTGreenplumInput">
      <description>Allows you to add as many Input tables as required for the most complicated Insert statement.</description>
      <topic href="guide/components/en/tELTGreenplumInput.html" label="tELTGreenplumInput Component Documentation"/>
   </context>
   <context id="tELTGreenplumMap">
      <description>Uses the tables provided as input, to feed the parameter in the built statement. The statement can include inner or outer joins to be implemented between tables or between one table and its aliases.</description>
      <topic href="guide/components/en/tELTGreenplumMap.html" label="tELTGreenplumMap Component Documentation"/>
   </context>
   <context id="tELTGreenplumOutput">
      <description>Executes the SQL Insert, Update and Delete statement to the Greenplum database</description>
      <topic href="guide/components/en/tELTGreenplumOutput.html" label="tELTGreenplumOutput Component Documentation"/>
   </context>
   <context id="tELTHiveInput">
      <description>This component helps to replicate the schema, which the tELTHiveMap component that follows will use, of the input Hive table.</description>
      <topic href="guide/components/en/tELTHiveInput.html" label="tELTHiveInput Component Documentation"/>
   </context>
   <context id="tELTHiveMap">
      <description>This component helps to graphically build the Hive QL statement in order to transform data.</description>
      <topic href="guide/components/en/tELTHiveMap.html" label="tELTHiveMap Component Documentation"/>
   </context>
   <context id="tELTHiveOutput">
      <description>This component works alongside tELTHiveMap to write data into the Hive table.</description>
      <topic href="guide/components/en/tELTHiveOutput.html" label="tELTHiveOutput Component Documentation"/>
   </context>
   <context id="tELTJDBCInput">
      <description>Allows you to add as many Input tables as required for the most complicated Insert statement.</description>
      <topic href="guide/components/en/tELTJDBCInput.html" label="tELTJDBCInput Component Documentation"/>
   </context>
   <context id="tELTJDBCMap">
      <description>Uses the tables provided as input, to feed the parameter in the built statement. The statement can include inner or outer joins to be implemented between tables or between one table and its aliases.</description>
      <topic href="guide/components/en/tELTJDBCMap.html" label="tELTJDBCMap Component Documentation"/>
   </context>
   <context id="tELTJDBCOutput">
      <description>Executes the SQL Insert, Update and Delete statement to the JDBC database</description>
      <topic href="guide/components/en/tELTJDBCOutput.html" label="tELTJDBCOutput Component Documentation"/>
   </context>
   <context id="tELTMSSqlInput">
      <description>Allows you to add as many Input tables as required for the most complicated Insert statement.</description>
      <topic href="guide/components/en/tELTMSSqlInput.html" label="tELTMSSqlInput Component Documentation"/>
   </context>
   <context id="tELTMSSqlMap">
      <description>Uses the tables provided as input, to feed the parameter in the built statement. The statement can include inner or outer joins to be implemented between tables or between one table and its aliases.</description>
      <topic href="guide/components/en/tELTMSSqlMap.html" label="tELTMSSqlMap Component Documentation"/>
   </context>
   <context id="tELTMSSqlOutput">
      <description>Executes the SQL Insert, Update and Delete statement to the MSSql database</description>
      <topic href="guide/components/en/tELTMSSqlOutput.html" label="tELTMSSqlOutput Component Documentation"/>
   </context>
   <context id="tELTMysqlInput">
      <description>Allows you to add as many Input tables as required for the most complicated Insert statement.</description>
      <topic href="guide/components/en/tELTMysqlInput.html" label="tELTMysqlInput Component Documentation"/>
   </context>
   <context id="tELTMysqlMap">
      <description>Uses the tables provided as input, to feed the parameter in the built statement. The statement can include inner or outer joins to be implemented between tables or between one table and its aliases.</description>
      <topic href="guide/components/en/tELTMysqlMap.html" label="tELTMysqlMap Component Documentation"/>
   </context>
   <context id="tELTMysqlOutput">
      <description>Executes the SQL Insert, Update and Delete statement to the Mysql database</description>
      <topic href="guide/components/en/tELTMysqlOutput.html" label="tELTMysqlOutput Component Documentation"/>
   </context>
   <context id="tELTNetezzaInput">
      <description>Allows you to add as many Input tables as required for the most complicated Insert statement.</description>
      <topic href="guide/components/en/tELTNetezzaInput.html" label="tELTNetezzaInput Component Documentation"/>
   </context>
   <context id="tELTNetezzaMap">
      <description>Uses the tables provided as input, to feed the parameter in the built statement. The statement can include inner or outer joins to be implemented between tables or between one table and its aliases.</description>
      <topic href="guide/components/en/tELTNetezzaMap.html" label="tELTNetezzaMap Component Documentation"/>
   </context>
   <context id="tELTNetezzaOutput">
      <description>Executes the SQL Insert, Update and Delete statement to the Netezza database</description>
      <topic href="guide/components/en/tELTNetezzaOutput.html" label="tELTNetezzaOutput Component Documentation"/>
   </context>
   <context id="tELTOracleInput">
      <description>Allows you to add as many Input tables as required for the most complicated Insert statement.</description>
      <topic href="guide/components/en/tELTOracleInput.html" label="tELTOracleInput Component Documentation"/>
   </context>
   <context id="tELTOracleMap">
      <description>Uses the tables provided as input, to feed the parameter in the built statement. The statement can include inner or outer joins to be implemented between tables or between one table and its aliases.</description>
      <topic href="guide/components/en/tELTOracleMap.html" label="tELTOracleMap Component Documentation"/>
   </context>
   <context id="tELTOracleOutput">
      <description>Executes the SQL Insert, Update and Delete statement to the Mysql database</description>
      <topic href="guide/components/en/tELTOracleOutput.html" label="tELTOracleOutput Component Documentation"/>
   </context>
   <context id="tELTPostgresqlInput">
      <description>Allows you to add as many Input tables as required for the most complicated Insert statement.</description>
      <topic href="guide/components/en/tELTPostgresqlInput.html" label="tELTPostgresqlInput Component Documentation"/>
   </context>
   <context id="tELTPostgresqlMap">
      <description>Uses the tables provided as input, to feed the parameter in the built statement. The statement can include inner or outer joins to be implemented between tables or between one table and its aliases.</description>
      <topic href="guide/components/en/tELTPostgresqlMap.html" label="tELTPostgresqlMap Component Documentation"/>
   </context>
   <context id="tELTPostgresqlOutput">
      <description>Executes the SQL Insert, Update and Delete statement to the Postgresql database</description>
      <topic href="guide/components/en/tELTPostgresqlOutput.html" label="tELTPostgresqlOutput Component Documentation"/>
   </context>
   <context id="tELTSybaseInput">
      <description>Allows you to add as many Input tables as required, for Insert statements which can be complex.</description>
      <topic href="guide/components/en/tELTSybaseInput.html" label="tELTSybaseInput Component Documentation"/>
   </context>
   <context id="tELTSybaseMap">
      <description>Uses the tables provided as input to feed the parameters required to execute the SQL statement. The statement can include inner or outer joins to be implemented between tables or between a table and its aliases</description>
      <topic href="guide/components/en/tELTSybaseMap.html" label="tELTSybaseMap Component Documentation"/>
   </context>
   <context id="tELTSybaseOutput">
      <description>Executes the SQL Insert, Update and Delete statement in the Mysql database</description>
      <topic href="guide/components/en/tELTSybaseOutput.html" label="tELTSybaseOutput Component Documentation"/>
   </context>
   <context id="tELTTeradataInput">
      <description>Allows you to add as many Input tables as required for the most complicated Insert statement.</description>
      <topic href="guide/components/en/tELTTeradataInput.html" label="tELTTeradataInput Component Documentation"/>
   </context>
   <context id="tELTTeradataMap">
      <description>Uses the tables provided as input, to feed the parameter in the built statement. The statement can include inner or outer joins to be implemented between tables or between one table and its aliases.</description>
      <topic href="guide/components/en/tELTTeradataMap.html" label="tELTTeradataMap Component Documentation"/>
   </context>
   <context id="tELTTeradataOutput">
      <description>Executes the SQL Insert, Update and Delete statement to the Teradata database</description>
      <topic href="guide/components/en/tELTTeradataOutput.html" label="tELTTeradataOutput Component Documentation"/>
   </context>
   <context id="tSQLTemplateAggregate">
      <description>Helps to provide a set of matrix based on values or calculations.</description>
      <topic href="guide/components/en/tSQLTemplateAggregate.html" label="tSQLTemplateAggregate Component Documentation"/>
   </context>
   <context id="tSQLTemplateCommit">
      <description>Using a single connection, this component commits a global action in one go instead of doing so for every row or every batch of rows, separately. This provides a gain in performance.</description>
      <topic href="guide/components/en/tSQLTemplateCommit.html" label="tSQLTemplateCommit Component Documentation"/>
   </context>
   <context id="tSQLTemplateFilterColumns">
      <description>Helps homogenize schemas by reorganizing, deleting or adding new columns.</description>
      <topic href="guide/components/en/tSQLTemplateFilterColumns.html" label="tSQLTemplateFilterColumns Component Documentation"/>
   </context>
   <context id="tSQLTemplateFilterRows">
      <description>Helps to set row filters for any given data source, based on a WHERE clause.</description>
      <topic href="guide/components/en/tSQLTemplateFilterRows.html" label="tSQLTemplateFilterRows Component Documentation"/>
   </context>
   <context id="tSQLTemplateMerge">
      <description>This component is used to merge data into a database table directly on the DBMS by creating and executing a MERGE statement.</description>
      <topic href="guide/components/en/tSQLTemplateMerge.html" label="tSQLTemplateMerge Component Documentation"/>
   </context>
   <context id="tSQLTemplateRollback">
      <description>To avoid committing transactions accidentally.</description>
      <topic href="guide/components/en/tSQLTemplateRollback.html" label="tSQLTemplateRollback Component Documentation"/>
   </context>
   <context id="tESBConsumer">
      <description>Invokes a Method through a Web service.</description>
      <topic href="guide/components/en/tESBConsumer.html" label="tESBConsumer Component Documentation"/>
   </context>
   <context id="tESBProviderFault">
      <description>Acts as Fault message of the Web Service response at the end of a Talend Job cycle.</description>
      <topic href="guide/components/en/tESBProviderFault.html" label="tESBProviderFault Component Documentation"/>
   </context>
   <context id="tESBProviderRequest">
      <description>Waits for a request message from a consumer and passes it to the next component.</description>
      <topic href="guide/components/en/tESBProviderRequest.html" label="tESBProviderRequest Component Documentation"/>
   </context>
   <context id="tESBProviderResponse">
      <description>Acts as a service provider response builder at the end of each Talend Job cycle.</description>
      <topic href="guide/components/en/tESBProviderResponse.html" label="tESBProviderResponse Component Documentation"/>
   </context>
   <context id="tRESTClient">
      <description>The tRESTClient component is used to interact with RESTful Web service providers by sending HTTP and HTTPS requests using CXF (JAX-RS).</description>
      <topic href="guide/components/en/tRESTClient.html" label="tRESTClient Component Documentation"/>
   </context>
   <context id="tRESTRequest">
      <description>This component allows you to receive GET/POST/PUT/DELETE requests from the clients on the server end.</description>
      <topic href="guide/components/en/tRESTRequest.html" label="tRESTRequest Component Documentation"/>
   </context>
   <context id="tRESTResponse">
      <description>This component allows you to return a specific HTTP status code to the client end as a response to the HTTP request.</description>
      <topic href="guide/components/en/tRESTResponse.html" label="tRESTResponse Component Documentation"/>
   </context>
   <context id="tRouteFault">
      <description>tRouteFault allows you to send messages from a Job to a Route and mark the message as fault.</description>
      <topic href="guide/components/en/tRouteFault.html" label="tRouteFault Component Documentation"/>
   </context>
   <context id="tRouteInput">
      <description>tRouteInput allows you to accept messages from a Route.</description>
      <topic href="guide/components/en/tRouteInput.html" label="tRouteInput Component Documentation"/>
   </context>
   <context id="tRouteOutput">
      <description>tRouteOutput allows you to send messages from a Job to a Route.</description>
      <topic href="guide/components/en/tRouteOutput.html" label="tRouteOutput Component Documentation"/>
   </context>
   <context id="tApacheLogInput">
      <description>tApachLogInput helps to effectively manage the Apache HTTP Server,. It is necessary to get feedback about the activity and performance of the server as well as any problems that may be occurring.</description>
      <topic href="guide/components/en/tApacheLogInput.html" label="tApacheLogInput Component Documentation"/>
   </context>
   <context id="tCreateTemporaryFile">
      <description>tCreateTemporaryFile helps to create a temporary file and puts it in a defined directory. This component allows you to either keep the temporary file or delete it after Job execution.</description>
      <topic href="guide/components/en/tCreateTemporaryFile.html" label="tCreateTemporaryFile Component Documentation"/>
   </context>
   <context id="tChangeFileEncoding">
      <description>tChangeFileEncoding transforms the character encoding of a given file and generates a new file with the transformed character encoding.</description>
      <topic href="guide/components/en/tChangeFileEncoding.html" label="tChangeFileEncoding Component Documentation"/>
   </context>
   <context id="tFileArchive">
      <description>This component zips one or several files for processing.</description>
      <topic href="guide/components/en/tFileArchive.html" label="tFileArchive Component Documentation"/>
   </context>
   <context id="tFileCompare">
      <description>Helps at controlling the data quality of files being processed.</description>
      <topic href="guide/components/en/tFileCompare.html" label="tFileCompare Component Documentation"/>
   </context>
   <context id="tFileCopy">
      <description>Helps to streamline processes by automating recurrent and tedious tasks such as copy.</description>
      <topic href="guide/components/en/tFileCopy.html" label="tFileCopy Component Documentation"/>
   </context>
   <context id="tFileDelete">
      <description>Helps to streamline processes by automating recurrent and tedious tasks such as delete.</description>
      <topic href="guide/components/en/tFileDelete.html" label="tFileDelete Component Documentation"/>
   </context>
   <context id="tFileExist">
      <description>tFileExists helps to streamline processes by automating recurrent and tedious tasks such as checking if a file exists.</description>
      <topic href="guide/components/en/tFileExist.html" label="tFileExist Component Documentation"/>
   </context>
   <context id="tFileInputARFF">
      <description>This component opens a file and reads it row by row, in order to divide it in fields and to send these fields to the next component, as defined in the schema, through a Row connection.</description>
      <topic href="guide/components/en/tFileInputARFF.html" label="tFileInputARFF Component Documentation"/>
   </context>
   <context id="tFileInputDelimited">
      <description/>
      <topic href="guide/components/en/tFileInputDelimited.html" label="tFileInputDelimited Component Documentation"/>
   </context>
   <context id="tFileInputEBCDIC">
      <description>tFileInputEBCDIC opens a file and reads it in order to separate the data, based on the file structure description (schemas), and to send the file data and metadata to the next Job component(s), via a Row &gt; Main connection.</description>
      <topic href="guide/components/en/tFileInputEBCDIC.html" label="tFileInputEBCDIC Component Documentation"/>
   </context>
   <context id="tFileInputExcel">
      <description>tFileInputExcel opens a file and reads it row by row to split data up into fields using regular expressions. Then sends fields as defined in the schema to the next component in the Job via a Row link.</description>
      <topic href="guide/components/en/tFileInputExcel.html" label="tFileInputExcel Component Documentation"/>
   </context>
   <context id="tFileInputFullRow">
      <description>tFileInputFullRow opens a file and reads it row by row and sends complete rows as defined in the Schema to the next Job component, via a Row link.</description>
      <topic href="guide/components/en/tFileInputFullRow.html" label="tFileInputFullRow Component Documentation"/>
   </context>
   <context id="tFileInputJSON">
      <description>This component opens a file and reads it in order to isolate data according to the schemas which describe this file structure, and to send the data and schemas to the next component(s), via a Row connection.</description>
      <topic href="guide/components/en/tFileInputJSON.html" label="tFileInputJSON Component Documentation"/>
   </context>
   <context id="tFileInputLDIF">
      <description>tFileInputLDIF opens a file, reads it row by row, et gives the full rows to the next component as defined in the schema, using a Row connection.</description>
      <topic href="guide/components/en/tFileInputLDIF.html" label="tFileInputLDIF Component Documentation"/>
   </context>
   <context id="tFileInputMail">
      <description>This component helps to extract standard key data from emails.</description>
      <topic href="guide/components/en/tFileInputMail.html" label="tFileInputMail Component Documentation"/>
   </context>
   <context id="tFileInputMSDelimited">
      <description>tFileInputMSDelimited opens a complex multi-structured file, reads its data structures (schemas) and then uses Row links to send fields as defined in the different schemas to the next Job components.</description>
      <topic href="guide/components/en/tFileInputMSDelimited.html" label="tFileInputMSDelimited Component Documentation"/>
   </context>
   <context id="tFileInputMSPositional">
      <description>tFileInputMSPositional opens a complex multi-structured file, reads its data structures (schemas) and then uses Row links to send fields as defined in the different schemas to the next Job components.</description>
      <topic href="guide/components/en/tFileInputMSPositional.html" label="tFileInputMSPositional Component Documentation"/>
   </context>
   <context id="tFileInputMSXML">
      <description>tFileInputMSXML opens a complex multi-structured file, reads its data structures (schemas) and then uses Row links to send fields as defined in the different schemas to the next Job components.</description>
      <topic href="guide/components/en/tFileInputMSXML.html" label="tFileInputMSXML Component Documentation"/>
   </context>
   <context id="tFileInputPositional">
      <description>This component opens a file and reads it row by row to split them up into fields then sends fields as defined in the schema to the next Job component, via a Row link.</description>
      <topic href="guide/components/en/tFileInputPositional.html" label="tFileInputPositional Component Documentation"/>
   </context>
   <context id="tFileInputProperties">
      <description>tFileInputProperties opens a text file and reads it row by row then separates the fields according to the model key = value.</description>
      <topic href="guide/components/en/tFileInputProperties.html" label="tFileInputProperties Component Documentation"/>
   </context>
   <context id="tFileInputRegex">
      <description>Opens a file and reads it row by row to split them up into fields using regular expressions. Then sends fields as defined in the Schema to the next Job component, via a Row link.</description>
      <topic href="guide/components/en/tFileInputRegex.html" label="tFileInputRegex Component Documentation"/>
   </context>
   <context id="tFileList">
      <description>tFileList retrieves a set of files or folders based on a filemask pattern and iterates on each unity.</description>
      <topic href="guide/components/en/tFileList.html" label="tFileList Component Documentation"/>
   </context>
   <context id="tFileOutputARFF">
      <description>This component writes an ARFF file that holds data organized according to the defined schema.</description>
      <topic href="guide/components/en/tFileOutputARFF.html" label="tFileOutputARFF Component Documentation"/>
   </context>
   <context id="tFileOutputDelimited">
      <description>This component writes a delimited file that holds data organized according to the defined schema.</description>
      <topic href="guide/components/en/tFileOutputDelimited.html" label="tFileOutputDelimited Component Documentation"/>
   </context>
   <context id="tFileOutputEBCDIC">
      <description>This component writes an EBCDIC file with data extracted from files based on their schemas.</description>
      <topic href="guide/components/en/tFileOutputEBCDIC.html" label="tFileOutputEBCDIC Component Documentation"/>
   </context>
   <context id="tFileOutputExcel">
      <description>tFileOutputExcel writes an MS Excel file with separated data value according to a defined schema.</description>
      <topic href="guide/components/en/tFileOutputExcel.html" label="tFileOutputExcel Component Documentation"/>
   </context>
   <context id="tFileOutputJSON">
      <description>tFileOutputJSON receives data and rewrites it in a JSON structured data block in an output file.</description>
      <topic href="guide/components/en/tFileOutputJSON.html" label="tFileOutputJSON Component Documentation"/>
   </context>
   <context id="tFileOutputLDIF">
      <description>tFileOutputLDIF writes or modifies a LDIF file with data separated in respective entries based on the schema defined,.or else deletes content from an LDIF file.</description>
      <topic href="guide/components/en/tFileOutputLDIF.html" label="tFileOutputLDIF Component Documentation"/>
   </context>
   <context id="tFileOutputMSDelimited">
      <description>tFileOutputMSDelimited creates a complex multi-structured delimited file, using data structures (schemas) coming from several incoming Row flows.</description>
      <topic href="guide/components/en/tFileOutputMSDelimited.html" label="tFileOutputMSDelimited Component Documentation"/>
   </context>
   <context id="tFileOutputMSPositional">
      <description>tFileOutputMSPositional creates a complex multi-structured file, using data structures (schemas) coming from several incoming Row flows.</description>
      <topic href="guide/components/en/tFileOutputMSPositional.html" label="tFileOutputMSPositional Component Documentation"/>
   </context>
   <context id="tFileOutputMSXML">
      <description>tFileOutputMSXML creates a complex multi-structured XML file, using data structures (schemas) coming from several incoming Row flows.</description>
      <topic href="guide/components/en/tFileOutputMSXML.html" label="tFileOutputMSXML Component Documentation"/>
   </context>
   <context id="tFileOutputPositional">
      <description>It writes a file row by row, according to the data structure (schema) coming from the input flow.</description>
      <topic href="guide/components/en/tFileOutputPositional.html" label="tFileOutputPositional Component Documentation"/>
   </context>
   <context id="tFileOutputProperties">
      <description>tFileInputProperties writes a configuration file containing text data organized according to the model key = value.</description>
      <topic href="guide/components/en/tFileOutputProperties.html" label="tFileOutputProperties Component Documentation"/>
   </context>
   <context id="tFileProperties">
      <description>tFileProperties obtains information about the main properties of a defined file.</description>
      <topic href="guide/components/en/tFileProperties.html" label="tFileProperties Component Documentation"/>
   </context>
   <context id="tFileRowCount">
      <description>tFileRowCount opens a file and reads it row by row in order to determine the number of rows inside.</description>
      <topic href="guide/components/en/tFileRowCount.html" label="tFileRowCount Component Documentation"/>
   </context>
   <context id="tFileTouch">
      <description>This component creates an empty file, and creates the destination directory if it does not exist.</description>
      <topic href="guide/components/en/tFileTouch.html" label="tFileTouch Component Documentation"/>
   </context>
   <context id="tFileUnarchive">
      <description>Decompresses an archive file for further processing. Such formats are supported: *.tar.gz , *.tgz, *.tar, *.gz and *.zip.</description>
      <topic href="guide/components/en/tFileUnarchive.html" label="tFileUnarchive Component Documentation"/>
   </context>
   <context id="tGPGDecrypt">
      <description>This component calls the gpg -d command to decrypt a GnuPG-encrypted file and saves the decrypted file in the specified directory.</description>
      <topic href="guide/components/en/tGPGDecrypt.html" label="tGPGDecrypt Component Documentation"/>
   </context>
   <context id="tNamedPipeClose">
      <description>This component is used to close a named-pipe at the end of a process.</description>
      <topic href="guide/components/en/tNamedPipeClose.html" label="tNamedPipeClose Component Documentation"/>
   </context>
   <context id="tNamedPipeOpen">
      <description>This component is used in inner-process communication, it opens a named-pipe for writing data into it.</description>
      <topic href="guide/components/en/tNamedPipeOpen.html" label="tNamedPipeOpen Component Documentation"/>
   </context>
   <context id="tNamedPipeOutput">
      <description>This component allows you to write data into an existing open named-pipe.</description>
      <topic href="guide/components/en/tNamedPipeOutput.html" label="tNamedPipeOutput Component Documentation"/>
   </context>
   <context id="tPivotToColumnsDelimited">
      <description>tPivotToColumnsDelimited is used to fine-tune the selection of data to output</description>
      <topic href="guide/components/en/tPivotToColumnsDelimited.html" label="tPivotToColumnsDelimited Component Documentation"/>
   </context>
   <context id="tFSAggregate">
      <description>tFSAggregate helps setting metrics and statistics based on values or calculations from one or several large scale files.</description>
      <topic href="guide/components/en/tFSAggregate.html" label="tFSAggregate Component Documentation"/>
   </context>
   <context id="tFSCheck">
      <description>tFSCheck helps ensure the quality of data in a source file according to a sort type and order.</description>
      <topic href="guide/components/en/tFSCheck.html" label="tFSCheck Component Documentation"/>
   </context>
   <context id="tFSCode">
      <description>tFSCode allows you to design FileScale components which are adaptable to your specific needs and fulfil domain-specific tasks.</description>
      <topic href="guide/components/en/tFSCode.html" label="tFSCode Component Documentation"/>
   </context>
   <context id="tFSFilterColumns">
      <description>Helps homogenizing schemas in a file either by removing unwanted columns or adding new ones.</description>
      <topic href="guide/components/en/tFSFilterColumns.html" label="tFSFilterColumns Component Documentation"/>
   </context>
   <context id="tFSFilterRows">
      <description>Helps parametrizing row filters for large scale source data against set conditions.</description>
      <topic href="guide/components/en/tFSFilterRows.html" label="tFSFilterRows Component Documentation"/>
   </context>
   <context id="tFSJoin">
      <description>Helps combining a leftset file with a rightset file using a join predicate in order to identify the data on which to perform the join.</description>
      <topic href="guide/components/en/tFSJoin.html" label="tFSJoin Component Documentation"/>
   </context>
   <context id="tFSPartitionFile">
      <description>Helps partitioning mass data before writing it in an output file.</description>
      <topic href="guide/components/en/tFSPartitionFile.html" label="tFSPartitionFile Component Documentation"/>
   </context>
   <context id="tFSSort">
      <description>tFSSort helps creating metrics and classification tables.</description>
      <topic href="guide/components/en/tFSSort.html" label="tFSSort Component Documentation"/>
   </context>
   <context id="tFSTransform">
      <description>FSTransform helps transforming columns in large scale files.</description>
      <topic href="guide/components/en/tFSTransform.html" label="tFSTransform Component Documentation"/>
   </context>
   <context id="tFSUnique">
      <description>tFSUnique helps having the output file without any duplicate records.</description>
      <topic href="guide/components/en/tFSUnique.html" label="tFSUnique Component Documentation"/>
   </context>
   <context id="tFileFetch">
      <description>tFileFetch allows you to retrieve file data according to the protocol which is in place.</description>
      <topic href="guide/components/en/tFileFetch.html" label="tFileFetch Component Documentation"/>
   </context>
   <context id="tFTPConnection">
      <description>tFTPConnection allows you to open an FTP connection to transfer files in a single transaction.</description>
      <topic href="guide/components/en/tFTPConnection.html" label="tFTPConnection Component Documentation"/>
   </context>
   <context id="tFTPDelete">
      <description>tFTPDelete deletes files on a remote FTP server.</description>
      <topic href="guide/components/en/tFTPDelete.html" label="tFTPDelete Component Documentation"/>
   </context>
   <context id="tFTPFileExist">
      <description>tFTPFileExist allows you to check if a file exists on an FTP server.</description>
      <topic href="guide/components/en/tFTPFileExist.html" label="tFTPFileExist Component Documentation"/>
   </context>
   <context id="tFTPFileList">
      <description>tFTPFileList retrieves files and /or folders based on a defined filemask pattern and iterates on each of them by connecting to a remote directory via an FTP protocol.</description>
      <topic href="guide/components/en/tFTPFileList.html" label="tFTPFileList Component Documentation"/>
   </context>
   <context id="tFTPFileProperties">
      <description>tFTPFileProperties retrieves files and /or folders based on a defined filemask pattern and iterates on each of them by connecting to a remote directory via an FTP protocol.</description>
      <topic href="guide/components/en/tFTPFileProperties.html" label="tFTPFileProperties Component Documentation"/>
   </context>
   <context id="tFTPGet">
      <description>tFTPGet retrieves selected files from a defined remote FTP directory and cop them to a local directory.</description>
      <topic href="guide/components/en/tFTPGet.html" label="tFTPGet Component Documentation"/>
   </context>
   <context id="tFTPPut">
      <description>tFTPPut copies selected files from a defined local directory to a destination remote FTP directory.</description>
      <topic href="guide/components/en/tFTPPut.html" label="tFTPPut Component Documentation"/>
   </context>
   <context id="tFTPRename">
      <description>tFTPRename renames files selected from a local directory towards a distant FTP directory.</description>
      <topic href="guide/components/en/tFTPRename.html" label="tFTPRename Component Documentation"/>
   </context>
   <context id="tFTPTruncate">
      <description>tFTPTruncate truncates the selected files of a defined local directory via a distant FTP directory.</description>
      <topic href="guide/components/en/tFTPTruncate.html" label="tFTPTruncate Component Documentation"/>
   </context>
   <context id="tHttpRequest">
      <description>The tHttpRequest component allows you to send an HTTP request to the server and output the response information locally.</description>
      <topic href="guide/components/en/tHttpRequest.html" label="tHttpRequest Component Documentation"/>
   </context>
   <context id="tJBossESBInput">
      <description>tJBossESBInput makes it possible to pass JBossESB message to a Talend Job.</description>
      <topic href="guide/components/en/tJBossESBInput.html" label="tJBossESBInput Component Documentation"/>
   </context>
   <context id="tJBossESBOutput">
      <description>tJBossESBOutput makes it possible to pass the data in a Talend Job to a JBossESB message.</description>
      <topic href="guide/components/en/tJBossESBOutput.html" label="tJBossESBOutput Component Documentation"/>
   </context>
   <context id="tJMSInput">
      <description>Using a JMS server, tJMSInput makes it possible to have loosely coupled, reliable, and asynchronous communication between different components in a distributed application.</description>
      <topic href="guide/components/en/tJMSInput.html" label="tJMSInput Component Documentation"/>
   </context>
   <context id="tJMSOutput">
      <description>Using a JMS server, tJMSOutput makes it possible to have loosely coupled, reliable, and asynchronous communication between different components in a distributed application.</description>
      <topic href="guide/components/en/tJMSOutput.html" label="tJMSOutput Component Documentation"/>
   </context>
   <context id="tMicrosoftMQInput">
      <description>This component allows you to fetch messages one by one in the ID sequence of these messages from the Microsoft message queue. Each execution retrieves only one message.</description>
      <topic href="guide/components/en/tMicrosoftMQInput.html" label="tMicrosoftMQInput Component Documentation"/>
   </context>
   <context id="tMicrosoftMQOutput">
      <description>This component makes it possible to write messages to Microsoft message queue.</description>
      <topic href="guide/components/en/tMicrosoftMQOutput.html" label="tMicrosoftMQOutput Component Documentation"/>
   </context>
   <context id="tMomCommit">
      <description>Using a unique connection, this component commits in one go a global transaction instead of doing that on every row or every batch and thus provides gain in performance.</description>
      <topic href="guide/components/en/tMomCommit.html" label="tMomCommit Component Documentation"/>
   </context>
   <context id="tMomInput">
      <description>tMomInput makes it possible to set up asynchronous communications via a MOM server.</description>
      <topic href="guide/components/en/tMomInput.html" label="tMomInput Component Documentation"/>
   </context>
   <context id="tMomMessageIdList">
      <description>tMomMessageIdList makes it possible to iterate on certain message IDs. It is usually used with tMomInput, for more information, see .</description>
      <topic href="guide/components/en/tMomMessageIdList.html" label="tMomMessageIdList Component Documentation"/>
   </context>
   <context id="tMomOutput">
      <description>tMomOutput makes it possible to set up asynchronous communications via a MOM server.</description>
      <topic href="guide/components/en/tMomOutput.html" label="tMomOutput Component Documentation"/>
   </context>
   <context id="tMomRollback">
      <description>Avoids involuntary commitment of part of a transaction.</description>
      <topic href="guide/components/en/tMomRollback.html" label="tMomRollback Component Documentation"/>
   </context>
   <context id="tPetalsInput">
      <description>tPetalsInput makes it possible to pass Petals’ data to a Talend Job.</description>
      <topic href="guide/components/en/tPetalsInput.html" label="tPetalsInput Component Documentation"/>
   </context>
   <context id="tPetalsOutput">
      <description>tPetalsOutput makes it possible to pass the data in a Talend Job to Petals’ data.</description>
      <topic href="guide/components/en/tPetalsOutput.html" label="tPetalsOutput Component Documentation"/>
   </context>
   <context id="tPOP">
      <description>The tPOP component uses the POP or IMAP protocol to connect to a specific email server. Then it fetches one or more email messages and writes the recovered information in specified files. Parameters in the Advanced settings view allows you to use filters on your selection.</description>
      <topic href="guide/components/en/tPOP.html" label="tPOP Component Documentation"/>
   </context>
   <context id="tREST">
      <description>The tREST component serves as a REST Web service client that sends HTTP requests to a REST Web service provider and gets the responses.</description>
      <topic href="guide/components/en/tREST.html" label="tREST Component Documentation"/>
   </context>
   <context id="tRSSInput">
      <description>tRSSInput makes it possible to keep track of blog entries on websites to gather and organize information for quick and easy access.</description>
      <topic href="guide/components/en/tRSSInput.html" label="tRSSInput Component Documentation"/>
   </context>
   <context id="tRSSOutput">
      <description>tRSSOutput makes it possible to create XML files that hold RSS or Atom feeds.</description>
      <topic href="guide/components/en/tRSSOutput.html" label="tRSSOutput Component Documentation"/>
   </context>
   <context id="tSCPClose">
      <description>This component closes a connection to an SCP protocol.</description>
      <topic href="guide/components/en/tSCPClose.html" label="tSCPClose Component Documentation"/>
   </context>
   <context id="tSCPConnection">
      <description>tSCPConnection allows you to open an SCP connection to transfer files in one transaction.</description>
      <topic href="guide/components/en/tSCPConnection.html" label="tSCPConnection Component Documentation"/>
   </context>
   <context id="tSCPDelete">
      <description>tSCPDelete allows you to remove a file from the defined SCP server.</description>
      <topic href="guide/components/en/tSCPDelete.html" label="tSCPDelete Component Documentation"/>
   </context>
   <context id="tSCPFileExists">
      <description>tSCPFileExists allows you to verify the existence of a file on the defined SCP server.</description>
      <topic href="guide/components/en/tSCPFileExists.html" label="tSCPFileExists Component Documentation"/>
   </context>
   <context id="tSCPFileList">
      <description>tSCPFileList allows you to list files from the defined SCP server.</description>
      <topic href="guide/components/en/tSCPFileList.html" label="tSCPFileList Component Documentation"/>
   </context>
   <context id="tSCPGet">
      <description>tSCPGet allows you to copy files from the defined SCP server.</description>
      <topic href="guide/components/en/tSCPGet.html" label="tSCPGet Component Documentation"/>
   </context>
   <context id="tSCPPut">
      <description>tSCPPut allows you to copy files to the defined SCP server.</description>
      <topic href="guide/components/en/tSCPPut.html" label="tSCPPut Component Documentation"/>
   </context>
   <context id="tSCPRename">
      <description>tSCPRename allows you to rename file(s) on the defined SCP server.</description>
      <topic href="guide/components/en/tSCPRename.html" label="tSCPRename Component Documentation"/>
   </context>
   <context id="tSCPTruncate">
      <description>tSCPTruncate allows you to remove data from file(s) on the defined SCP server.</description>
      <topic href="guide/components/en/tSCPTruncate.html" label="tSCPTruncate Component Documentation"/>
   </context>
   <context id="tSendMail">
      <description>tSendMail purpose is to notify recipients about a particular state of a Job or possible errors.</description>
      <topic href="guide/components/en/tSendMail.html" label="tSendMail Component Documentation"/>
   </context>
   <context id="tSetKerberosConfiguration">
      <description>tSetKerberosConfiguration allows you to enter the relevant information for Kerberos authentication.</description>
      <topic href="guide/components/en/tSetKerberosConfiguration.html" label="tSetKerberosConfiguration Component Documentation"/>
   </context>
   <context id="tSetKeystore">
      <description>This component allows you to set the authentication data type between PKCS 12 and JKS.</description>
      <topic href="guide/components/en/tSetKeystore.html" label="tSetKeystore Component Documentation"/>
   </context>
   <context id="tSetProxy">
      <description>tSetProxy allows you to enter the relevant information for proxy setup.</description>
      <topic href="guide/components/en/tSetProxy.html" label="tSetProxy Component Documentation"/>
   </context>
   <context id="tSocketInput">
      <description>tSocketInput component is a listening component, allowing to pass data via a defined port</description>
      <topic href="guide/components/en/tSocketInput.html" label="tSocketInput Component Documentation"/>
   </context>
   <context id="tSocketOutput">
      <description>tSocketOutput sends out the data from the incoming flow to listening socket port.</description>
      <topic href="guide/components/en/tSocketOutput.html" label="tSocketOutput Component Documentation"/>
   </context>
   <context id="tSOAP">
      <description>This component calls a method via a Web service in order to retrieve the values of the parameters defined in the component editor.</description>
      <topic href="guide/components/en/tSOAP.html" label="tSOAP Component Documentation"/>
   </context>
   <context id="tWebService">
      <description>This component calls a method via a Web service in order to retrieve the values of the parameters defined in the component editor.</description>
      <topic href="guide/components/en/tWebService.html" label="tWebService Component Documentation"/>
   </context>
   <context id="tWebServiceInput">
      <description>Invokes a Method through a Web service.</description>
      <topic href="guide/components/en/tWebServiceInput.html" label="tWebServiceInput Component Documentation"/>
   </context>
   <context id="tXMLRPCInput">
      <description>Invokes a Method through a Web service and for the described purpose</description>
      <topic href="guide/components/en/tXMLRPCInput.html" label="tXMLRPCInput Component Documentation"/>
   </context>
   <context id="tAssert">
      <description>Generates the boolean evaluation on the concern for the Job execution status. The status includes:</description>
      <topic href="guide/components/en/tAssert.html" label="tAssert Component Documentation"/>
   </context>
   <context id="tAssertCatcher">
      <description>Generates a data flow consolidating the status information of a job execution and transfer the data into defined output files.</description>
      <topic href="guide/components/en/tAssertCatcher.html" label="tAssertCatcher Component Documentation"/>
   </context>
   <context id="tChronometerStart">
      <description>Operates as a chronometer device that starts calculating the processing time of one or more subjobs in the main Job, or that starts calculating the processing time of part of your subjob.</description>
      <topic href="guide/components/en/tChronometerStart.html" label="tChronometerStart Component Documentation"/>
   </context>
   <context id="tChronometerStop">
      <description>Operates as a chronometer device that stops calculating the processing time of one or more subjobs in the main Job, or that stops calculating the processing time of part of your subjob.</description>
      <topic href="guide/components/en/tChronometerStop.html" label="tChronometerStop Component Documentation"/>
   </context>
   <context id="tDie">
      <description>Triggers the tLogCatcher component for exhaustive log before killing the Job.</description>
      <topic href="guide/components/en/tDie.html" label="tDie Component Documentation"/>
   </context>
   <context id="tFlowMeter">
      <description>The number of rows is then meant to be caught by the tFlowMeterCatcher for logging purpose.</description>
      <topic href="guide/components/en/tFlowMeter.html" label="tFlowMeter Component Documentation"/>
   </context>
   <context id="tFlowMeterCatcher">
      <description>Operates as a log function triggered by the use of a tFlowMeter component in the Job.</description>
      <topic href="guide/components/en/tFlowMeterCatcher.html" label="tFlowMeterCatcher Component Documentation"/>
   </context>
   <context id="tLogCatcher">
      <description>Operates as a log function triggered by one of the three: Java exception, tDie or tWarn, to collect and transfer log data.</description>
      <topic href="guide/components/en/tLogCatcher.html" label="tLogCatcher Component Documentation"/>
   </context>
   <context id="tLogRow">
      <description>tLogRow is used to monitor data processed.</description>
      <topic href="guide/components/en/tLogRow.html" label="tLogRow Component Documentation"/>
   </context>
   <context id="tStatCatcher">
      <description>Operates as a log function triggered by the StatsCatcher Statistics check box of individual components, and collects and transfers this log data to the output defined.</description>
      <topic href="guide/components/en/tStatCatcher.html" label="tStatCatcher Component Documentation"/>
   </context>
   <context id="tWarn">
      <description>Triggers a warning often caught by the tLogCatcher component for exhaustive log.</description>
      <topic href="guide/components/en/tWarn.html" label="tWarn Component Documentation"/>
   </context>
   <context id="tAddLocationFromIP">
      <description>tAddLocationFromIP helps you to geolocate visitors through their IP addresses. It identifies visitors’ geographical locations i.e. country, region, city, latitude, longitude, ZIP code...etc.using an IP address lookup database file.</description>
      <topic href="guide/components/en/tAddLocationFromIP.html" label="tAddLocationFromIP Component Documentation"/>
   </context>
   <context id="tBufferInput">
      <description>The tBufferInput component retrieves data bufferized via a tBufferOutput component, for example, to process it in another subjob.</description>
      <topic href="guide/components/en/tBufferInput.html" label="tBufferInput Component Documentation"/>
   </context>
   <context id="tBufferOutput">
      <description>This component allows a Webservice to access data. Indeed it had been designed to be exported as Webservice in order to access data on the web application server directly. For more information, see Talend Enterprise Studio User Guide.</description>
      <topic href="guide/components/en/tBufferOutput.html" label="tBufferOutput Component Documentation"/>
   </context>
   <context id="tContextDump">
      <description>tContextDump can be used to transform the current context parameters into a flow that can then be used in a tContextLoad. This feature is very convenient in order to define once only the context and be able to reuse it in numerous Jobs via the tContextLoad.</description>
      <topic href="guide/components/en/tContextDump.html" label="tContextDump Component Documentation"/>
   </context>
   <context id="tContextLoad">
      <description>tContextLoad can be used to load a context from a flow.</description>
      <topic href="guide/components/en/tContextLoad.html" label="tContextLoad Component Documentation"/>
   </context>
   <context id="tFixedFlowInput">
      <description>tFixedFlowInput allows you to generate fixed flow from internal variables.</description>
      <topic href="guide/components/en/tFixedFlowInput.html" label="tFixedFlowInput Component Documentation"/>
   </context>
   <context id="tMemorizeRows">
      <description>tMemorizeRows memorizes a sequence of rows that pass this component and then allows its following component(s) to perform operations of your interest on the memorized rows.</description>
      <topic href="guide/components/en/tMemorizeRows.html" label="tMemorizeRows Component Documentation"/>
   </context>
   <context id="tMsgBox">
      <description>tMsgBox is a graphical break in the job execution progress.</description>
      <topic href="guide/components/en/tMsgBox.html" label="tMsgBox Component Documentation"/>
   </context>
   <context id="tRowGenerator">
      <description>Can be used to create an input flow in a Job for testing purposes, in particular for boundary test sets</description>
      <topic href="guide/components/en/tRowGenerator.html" label="tRowGenerator Component Documentation"/>
   </context>
   <context id="tFlowToIterate">
      <description>This component is used to read data line by line from the input flow and store the data entries in iterative global variables.</description>
      <topic href="guide/components/en/tFlowToIterate.html" label="tFlowToIterate Component Documentation"/>
   </context>
   <context id="tForeach">
      <description>tForeach allows you to to create a loop on a list for an iterate link.</description>
      <topic href="guide/components/en/tForeach.html" label="tForeach Component Documentation"/>
   </context>
   <context id="tInfiniteLoop">
      <description>tInfiniteLoop allows you to to execute a task or a Job automatically, based on a loop.</description>
      <topic href="guide/components/en/tInfiniteLoop.html" label="tInfiniteLoop Component Documentation"/>
   </context>
   <context id="tIterateToFlow">
      <description>Allows you to transform non processable data into a processable flow.</description>
      <topic href="guide/components/en/tIterateToFlow.html" label="tIterateToFlow Component Documentation"/>
   </context>
   <context id="tLoop">
      <description>tLoop allows you to execute a task or a Job automatically, based on a loop</description>
      <topic href="guide/components/en/tLoop.html" label="tLoop Component Documentation"/>
   </context>
   <context id="tParallelize">
      <description>tParallelize helps you manage complex Job systems. It executes several subjobs simultaneously and synchronizes the execution of a subjob with other sub-jobs within the main Job.</description>
      <topic href="guide/components/en/tParallelize.html" label="tParallelize Component Documentation"/>
   </context>
   <context id="tPostjob">
      <description>tPostjob triggers a task required after the execution of a Job</description>
      <topic href="guide/components/en/tPostjob.html" label="tPostjob Component Documentation"/>
   </context>
   <context id="tPrejob">
      <description>tPrejob triggers a task required for the execution of a Job</description>
      <topic href="guide/components/en/tPrejob.html" label="tPrejob Component Documentation"/>
   </context>
   <context id="tReplicate">
      <description>Allows you to perform different operations on the same schema.</description>
      <topic href="guide/components/en/tReplicate.html" label="tReplicate Component Documentation"/>
   </context>
   <context id="tSleep">
      <description>Allows you to identify possible bottlenecks using a time break in the Job for testing or tracking purpose. In production, it can be used for any needed pause in the Job to feed input flow for example.</description>
      <topic href="guide/components/en/tSleep.html" label="tSleep Component Documentation"/>
   </context>
   <context id="tUnite">
      <description>Centralize data from various and heterogeneous sources.</description>
      <topic href="guide/components/en/tUnite.html" label="tUnite Component Documentation"/>
   </context>
   <context id="tWaitForFile">
      <description>This component allows a subjob to be triggered given a condition linked to file presence or removal.</description>
      <topic href="guide/components/en/tWaitForFile.html" label="tWaitForFile Component Documentation"/>
   </context>
   <context id="tWaitForSocket">
      <description>This component triggers a Job based on a defined condition.</description>
      <topic href="guide/components/en/tWaitForSocket.html" label="tWaitForSocket Component Documentation"/>
   </context>
   <context id="tWaitForSqlData">
      <description>This component allows a subjob to be triggered given a condition linked to sql data presence.</description>
      <topic href="guide/components/en/tWaitForSqlData.html" label="tWaitForSqlData Component Documentation"/>
   </context>
   <context id="tAggregateRow">
      <description>Helps to provide a set of metrics based on values or calculations.</description>
      <topic href="guide/components/en/tAggregateRow.html" label="tAggregateRow Component Documentation"/>
   </context>
   <context id="tAggregateSortedRow">
      <description>Helps to provide a set of metrics based on values or calculations. As the input flow is meant to be sorted already, the performance are hence greatly optimized.</description>
      <topic href="guide/components/en/tAggregateSortedRow.html" label="tAggregateSortedRow Component Documentation"/>
   </context>
   <context id="tBRMS">
      <description>tBRMS applies Drools business rules to an incoming flow and writes the output data to an XML file.</description>
      <topic href="guide/components/en/tBRMS.html" label="tBRMS Component Documentation"/>
   </context>
   <context id="tConvertType">
      <description>Helps to automatically convert one Talend java type to another and thus.avoid compiling errors.</description>
      <topic href="guide/components/en/tConvertType.html" label="tConvertType Component Documentation"/>
   </context>
   <context id="tDenormalize">
      <description>tDenormalize helps synthesize the input flow.</description>
      <topic href="guide/components/en/tDenormalize.html" label="tDenormalize Component Documentation"/>
   </context>
   <context id="tDenormalizeSortedRow">
      <description>tDenormalizeSortedRow helps synthesizing sorted input flow to save memory.</description>
      <topic href="guide/components/en/tDenormalizeSortedRow.html" label="tDenormalizeSortedRow Component Documentation"/>
   </context>
   <context id="tExternalSortRow">
      <description>Helps create metrics and classification table.</description>
      <topic href="guide/components/en/tExternalSortRow.html" label="tExternalSortRow Component Documentation"/>
   </context>
   <context id="tExtractDelimitedFields">
      <description>tExtractDelimitedFields helps to extract ‘fields’ from within a string to write them elsewhere for example.</description>
      <topic href="guide/components/en/tExtractDelimitedFields.html" label="tExtractDelimitedFields Component Documentation"/>
   </context>
   <context id="tExtractDynamicFields">
      <description>tExtractDynamicFields allows you to parse a Dynamic column to create standard output columns.</description>
      <topic href="guide/components/en/tExtractDynamicFields.html" label="tExtractDynamicFields Component Documentation"/>
   </context>
   <context id="tExtractEBCDICFields">
      <description>tExtractEBCDICFields allows you to use regular expressions to extract data from a formatted string.</description>
      <topic href="guide/components/en/tExtractEBCDICFields.html" label="tExtractEBCDICFields Component Documentation"/>
   </context>
   <context id="tExtractEDIField">
      <description>tExtractEDIField opens an input EDIFACT message file, reads the EDI structured data directly without having to write it out to a temporary file first, extracts data through XPATH queries, and finally sends the data to the next component via a Row connection.</description>
      <topic href="guide/components/en/tExtractEDIField.html" label="tExtractEDIField Component Documentation"/>
   </context>
   <context id="tExtractPositionalFields">
      <description>tExtractPositionalFields allows you to use a positional pattern to extract data from a formatted string.</description>
      <topic href="guide/components/en/tExtractPositionalFields.html" label="tExtractPositionalFields Component Documentation"/>
   </context>
   <context id="tExtractRegexFields">
      <description>tExtractRegexFields allows you to use regular expressions to extract data from a formatted string.</description>
      <topic href="guide/components/en/tExtractRegexFields.html" label="tExtractRegexFields Component Documentation"/>
   </context>
   <context id="tFilterColumns">
      <description>Helps homogenize schemas either on the columns order or by removing unwanted columns or adding new columns.</description>
      <topic href="guide/components/en/tFilterColumns.html" label="tFilterColumns Component Documentation"/>
   </context>
   <context id="tFilterRow">
      <description>tFilterRow helps parametrizing filters on the source data.</description>
      <topic href="guide/components/en/tFilterRow.html" label="tFilterRow Component Documentation"/>
   </context>
   <context id="tJoin">
      <description>This component helps you ensure the data quality of any source data against a reference data source.</description>
      <topic href="guide/components/en/tJoin.html" label="tJoin Component Documentation"/>
   </context>
   <context id="tMap">
      <description>tMap transforms and routes data from single or multiple sources to single or multiple destinations.</description>
      <topic href="guide/components/en/tMap.html" label="tMap Component Documentation"/>
   </context>
   <context id="tNormalize">
      <description>tNormalize helps improve data quality and thus eases the data update.</description>
      <topic href="guide/components/en/tNormalize.html" label="tNormalize Component Documentation"/>
   </context>
   <context id="tReplace">
      <description>Helps to cleanse all files before further processing.</description>
      <topic href="guide/components/en/tReplace.html" label="tReplace Component Documentation"/>
   </context>
   <context id="tRules">
      <description>tRules allows you to use business rules defined in a Drools file of .xls or .drl format in order to filter data.</description>
      <topic href="guide/components/en/tRules.html" label="tRules Component Documentation"/>
   </context>
   <context id="tSampleRow">
      <description>tSampleRow helps to select rows according to a list of single lines and/or a list of groups of lines.</description>
      <topic href="guide/components/en/tSampleRow.html" label="tSampleRow Component Documentation"/>
   </context>
   <context id="tSortRow">
      <description>Helps creating metrics and classification table.</description>
      <topic href="guide/components/en/tSortRow.html" label="tSortRow Component Documentation"/>
   </context>
   <context id="tSplitRow">
      <description>This component helps splitting one input row into several output rows.</description>
      <topic href="guide/components/en/tSplitRow.html" label="tSplitRow Component Documentation"/>
   </context>
   <context id="tWriteDynamicFields">
      <description>tWriteDynamicFields allows you to create un dynamic schema from input columns in the component.</description>
      <topic href="guide/components/en/tWriteDynamicFields.html" label="tWriteDynamicFields Component Documentation"/>
   </context>
   <context id="tWriteJSONField">
      <description>tWriteJSONField reads data from an input file, assembles it into JSON objects and outputs them to the defined field of an output file.</description>
      <topic href="guide/components/en/tWriteJSONField.html" label="tWriteJSONField Component Documentation"/>
   </context>
   <context id="tXMLMap">
      <description>tXMLMap transforms and routes data from single or multiple sources to single or multiple destinations.</description>
      <topic href="guide/components/en/tXMLMap.html" label="tXMLMap Component Documentation"/>
   </context>
   <context id="tRunJob">
      <description>tRunJob helps mastering complex Job systems which need to execute one Job after another.</description>
      <topic href="guide/components/en/tRunJob.html" label="tRunJob Component Documentation"/>
   </context>
   <context id="tSetEnv">
      <description>tSetEnv allows to create variables and execute a Job script through communicating the information about the newly created variables between subjobs. After job execution, the newly created variables are deleted.</description>
      <topic href="guide/components/en/tSetEnv.html" label="tSetEnv Component Documentation"/>
   </context>
   <context id="tSSH">
      <description>Allows to establish a communication with distant server and return securely sensible information.</description>
      <topic href="guide/components/en/tSSH.html" label="tSSH Component Documentation"/>
   </context>
   <context id="tSystem">
      <description>tSystem can call other processing commands, already up and running in a larger Job.</description>
      <topic href="guide/components/en/tSystem.html" label="tSystem Component Documentation"/>
   </context>
   <context id="tMDMBulkLoad">
      <description>This component uses bulk mode to write data so that big batches of data or data of high complexity can be fast uploaded onto the MDM server.</description>
      <topic href="guide/components/en/tMDMBulkLoad.html" label="tMDMBulkLoad Component Documentation"/>
   </context>
   <context id="tMDMClose">
      <description>This component is used to terminate an opened MDM server connection after the execution of the proceeding subjob.</description>
      <topic href="guide/components/en/tMDMClose.html" label="tMDMClose Component Documentation"/>
   </context>
   <context id="tMDMConnection">
      <description>This component is used to open a connection to an MDM server for convenient reuse in the subsequent subjob or subjobs.</description>
      <topic href="guide/components/en/tMDMConnection.html" label="tMDMConnection Component Documentation"/>
   </context>
   <context id="tMDMDelete">
      <description>This component deletes master data in an MDM hub.</description>
      <topic href="guide/components/en/tMDMDelete.html" label="tMDMDelete Component Documentation"/>
   </context>
   <context id="tMDMInput">
      <description>This component reads master data in an MDM Hub and thus makes it possible to process this data.</description>
      <topic href="guide/components/en/tMDMInput.html" label="tMDMInput Component Documentation"/>
   </context>
   <context id="tMDMOutput">
      <description>This component writes master data on the MDM server.</description>
      <topic href="guide/components/en/tMDMOutput.html" label="tMDMOutput Component Documentation"/>
   </context>
   <context id="tMDMReceive">
      <description>This component decodes a context parameter holding MDM XML data and transforms it into a flat schema.</description>
      <topic href="guide/components/en/tMDMReceive.html" label="tMDMReceive Component Documentation"/>
   </context>
   <context id="tMDMRouteRecord">
      <description>This component helps Event Manager identify the changes which you have made on your data so that correlative actions can be triggered.</description>
      <topic href="guide/components/en/tMDMRouteRecord.html" label="tMDMRouteRecord Component Documentation"/>
   </context>
   <context id="tMDMSP">
      <description>tMDMSP offers a convenient way to centralize multiple or complex queries in a MDM Hub and call them easily.</description>
      <topic href="guide/components/en/tMDMSP.html" label="tMDMSP Component Documentation"/>
   </context>
   <context id="tMDMTriggerInput">
      <description>Every time when you save a change in your MDM, the corresponding change record is generated in XML format. At runtime, this component reads this record and sends the relative information to the following component.</description>
      <topic href="guide/components/en/tMDMTriggerInput.html" label="tMDMTriggerInput Component Documentation"/>
   </context>
   <context id="tMDMTriggerOutput">
      <description>This component receives an XML flow to set the MDM message so that MDM retrieves this message at runtime. With this component, you do not need to configure your Job any more in order to communicate the data changes from MDM to your Job.</description>
      <topic href="guide/components/en/tMDMTriggerOutput.html" label="tMDMTriggerOutput Component Documentation"/>
   </context>
   <context id="tMDMViewSearch">
      <description>This component allows you to retrieve the MDM records from an MDM hub.</description>
      <topic href="guide/components/en/tMDMViewSearch.html" label="tMDMViewSearch Component Documentation"/>
   </context>
   <context id="tStewardshipTaskDelete">
      <description>This component helps streamline processes by removing tasks that are no longer used or relevant.</description>
      <topic href="guide/components/en/tStewardshipTaskDelete.html" label="tStewardshipTaskDelete Component Documentation"/>
   </context>
   <context id="tStewardshipTaskInput">
      <description>This component reads data in the datastewardship console and thus makes it possible to process this data, i.e. to use any Talend output component and write the data retrieved from the stewardship database into the target application or database.</description>
      <topic href="guide/components/en/tStewardshipTaskInput.html" label="tStewardshipTaskInput Component Documentation"/>
   </context>
   <context id="tStewardshipTaskOutput">
      <description>This component create tasks in the Talend Data Stewardship Console database and lists these tasks in the stewardship console.</description>
      <topic href="guide/components/en/tStewardshipTaskOutput.html" label="tStewardshipTaskOutput Component Documentation"/>
   </context>
   <context id="tHashInput">
      <description>This component reads from the cache memory data loaded by tHashOutput to offer high-speed data feed, facilitating transactions involving a large amount of data.</description>
      <topic href="guide/components/en/tHashInput.html" label="tHashInput Component Documentation"/>
   </context>
   <context id="tHashOutput">
      <description>This component loads data to the cache memory to offer high-speed access, facilitating transactions involving a large amount of data.</description>
      <topic href="guide/components/en/tHashOutput.html" label="tHashOutput Component Documentation"/>
   </context>
   <context id="tAdvancedFileOutputXML">
      <description>tAdvancedFileOutputXML writes an XML file with separated data values according to an XML tree structure.</description>
      <topic href="guide/components/en/tAdvancedFileOutputXML.html" label="tAdvancedFileOutputXML Component Documentation"/>
   </context>
   <context id="tDTDValidator">
      <description>Helps at controlling data and structure quality of the file to be processed</description>
      <topic href="guide/components/en/tDTDValidator.html" label="tDTDValidator Component Documentation"/>
   </context>
   <context id="tEDIFACTtoXML">
      <description>This component is used to transform an EDIFACT message file into the XML format for better readability to users and compatibility with processing tools.</description>
      <topic href="guide/components/en/tEDIFACTtoXML.html" label="tEDIFACTtoXML Component Documentation"/>
   </context>
   <context id="tExtractXMLField">
      <description>tExtractXMLField opens an input XML field, reads the XML structured data directly without having first to write it out to a temporary file, and finally sends data as defined in the schema to the following component via a Row link.</description>
      <topic href="guide/components/en/tExtractXMLField.html" label="tExtractXMLField Component Documentation"/>
   </context>
   <context id="tFileInputXML">
      <description>Opens an XML structured file and reads it row by row to split them up into fields then sends fields as defined in the Schema to the next component, via a Row link.</description>
      <topic href="guide/components/en/tFileInputXML.html" label="tFileInputXML Component Documentation"/>
   </context>
   <context id="tFileOutputXML">
      <description>tFileOutputXML writes an XML file with separated data value according to a defined schema.</description>
      <topic href="guide/components/en/tFileOutputXML.html" label="tFileOutputXML Component Documentation"/>
   </context>
   <context id="tWriteXMLField">
      <description>tWriteXMLField reads an input XML file and extracts the structure to insert it in defined fields of the output file.</description>
      <topic href="guide/components/en/tWriteXMLField.html" label="tWriteXMLField Component Documentation"/>
   </context>
   <context id="tXSDValidator">
      <description>Helps at controlling data and structure quality of the file or flow to be processed</description>
      <topic href="guide/components/en/tXSDValidator.html" label="tXSDValidator Component Documentation"/>
   </context>
   <context id="tXSLT">
      <description>Helps to transform data structure to another structure.</description>
      <topic href="guide/components/en/tXSLT.html" label="tXSLT Component Documentation"/>
   </context>
</contexts>